var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddStatDto.html",[0,0.053,1,1.764]],["body/classes/AddStatDto.html",[0,0.069,1,2.284,2,1.345,3,0.369,4,0.323,5,0.323,6,4.151,7,2.41,8,0.369,9,2.059,10,3.322,11,4.632,12,4.632,13,1.021,14,0.035,15,3.322,16,1.778,17,2.906,18,2.906,19,1.124,20,2.906,21,1.921,22,2.906,23,2.906,24,2.41,25,2.906,26,0.636,27,3.589,28,1.223,29,2.906,30,4.033,31,3.169,32,1.645,33,1.698,34,2.084,35,0.369,36,2.41,37,2.41,38,2.906,39,0.023,40,0.023]],["title/controllers/AppController.html",[41,1.092,42,1.973]],["body/controllers/AppController.html",[0,0.061,3,0.456,4,0.399,5,0.399,8,0.456,14,0.035,16,1.378,19,0.871,21,1.784,26,0.591,35,0.456,39,0.026,40,0.026,41,1.629,42,2.944,43,1.378,44,2.978,45,1.784,46,4.522,47,3.59,48,1.378,49,0.791,50,2.632,51,2.978,52,2.274,53,1.662,54,1.258,55,3.59]],["title/modules/AppModule.html",[56,1.311,57,1.973]],["body/modules/AppModule.html",[0,0.04,3,0.298,4,0.26,5,0.26,14,0.035,26,0.697,35,0.298,39,0.019,40,0.019,42,2.601,43,1.327,49,0.516,50,2.584,51,1.943,56,1.455,57,3.626,58,1.084,59,1.599,60,1.943,61,1.943,62,1.943,63,2.866,64,2.866,65,2.866,66,1.957,67,1.326,68,1.326,69,2.342,70,2.189,71,2.601,72,2.342,73,1.483,74,0.75,75,3.456,76,4.534,77,1.943,78,3.456,79,2.342,80,2.342,81,2.342,82,2.342,83,2.342,84,2.342,85,1.943,86,2.342,87,2.342,88,2.342,89,1.943,90,2.342,91,2.342,92,2.342,93,2.342,94,2.342,95,1.196,96,2.342,97,2.342,98,2.342,99,1.483,100,2.342,101,2.342,102,2.342]],["title/injectables/AppService.html",[50,1.59,103,0.91]],["body/injectables/AppService.html",[0,0.066,3,0.486,4,0.426,5,0.426,8,0.486,14,0.034,19,0.929,21,1.859,26,0.486,35,0.486,39,0.027,40,0.027,45,1.859,46,4.631,48,1.469,49,0.844,50,2.472,54,1.341,103,1.415,104,1.954,105,3.174,106,3.827,107,3.827,108,3.827]],["title/classes/CreateUserDto.html",[0,0.053,109,1.59]],["body/classes/CreateUserDto.html",[0,0.077,2,1.565,3,0.43,4,0.376,5,0.376,8,0.43,9,2.282,13,0.985,14,0.034,16,1.716,19,1.085,21,2.045,24,3.708,26,0.568,27,3.591,28,1.424,31,3.171,32,1.915,35,0.43,39,0.025,40,0.025,109,2.282,110,4.153,111,2.425,112,3.171,113,5.007,114,3.382,115,3.382,116,3.382]],["title/classes/Item.html",[0,0.053,117,1.311]],["body/classes/Item.html",[0,0.049,2,0.845,3,0.232,4,0.203,5,0.203,8,0.232,9,1.461,13,1.152,14,0.035,16,1.962,19,1.24,21,2.175,26,0.507,27,3.749,28,0.769,31,3.148,32,1.035,33,0.769,35,0.448,39,0.016,40,0.016,74,0.585,95,2.917,117,1.484,118,1.157,119,2.925,120,2.529,121,3.526,122,3.526,123,3.526,124,3.526,125,1.03,126,3.526,127,3.526,128,4.802,129,1.827,130,2.861,131,1.827,132,2.861,133,1.827,134,2.052,135,1.827,136,1.827,137,1.827,138,1.827,139,1.827,140,1.827,141,3.749,142,1.461,143,1.31,144,2.373,145,1.31,146,1.31,147,3.983,148,1.035,149,1.157,150,1.516]],["title/controllers/ItemsController.html",[41,1.092,151,1.973]],["body/controllers/ItemsController.html",[0,0.049,3,0.361,4,0.316,5,0.316,8,0.361,13,0.626,14,0.035,16,1.524,19,0.964,26,0.663,28,1.196,35,0.361,39,0.022,40,0.022,41,0.996,43,1.091,45,1.524,48,1.524,49,0.626,52,1.799,53,1.315,54,1.391,117,2.086,125,0.83,151,2.514,152,2.357,153,2.038,154,2.841,155,3.971,156,4.956,157,2.841,158,3.283,159,2.841,160,1.315,161,1.315,162,3.971,163,2.841,164,2.038,165,2.038,166,1.837,167,2.038,168,2.038,169,2.337,170,2.357,171,2.038,172,2.038,173,2.841,174,2.841,175,2.841,176,2.841,177,2.841]],["title/modules/ItemsModule.html",[56,1.311,63,1.764]],["body/modules/ItemsModule.html",[0,0.054,3,0.398,4,0.348,5,0.348,14,0.035,26,0.686,35,0.398,39,0.024,40,0.024,41,1.098,43,1.63,49,0.691,56,1.788,58,1.45,59,1.965,63,3.152,66,2.405,67,1.774,68,1.774,70,2.69,71,1.984,73,1.984,74,1.003,117,1.319,125,0.916,142,1.6,149,2.69,151,3.051,168,2.247,169,2.842,170,2.599,178,2.599,179,2.599,180,3.133,181,3.133,182,2.247,183,2.599]],["title/injectables/ItemsService.html",[103,0.91,169,1.59]],["body/injectables/ItemsService.html",[0,0.047,3,0.35,4,0.306,5,0.306,8,0.35,13,0.857,14,0.035,19,1.093,26,0.621,33,1.16,35,0.35,39,0.022,40,0.022,45,1.492,48,1.492,49,0.607,53,1.275,54,1.362,74,0.882,99,3.388,103,1.136,104,1.407,117,2.17,125,1.136,145,1.976,160,1.798,161,1.798,168,1.976,169,1.984,184,2.286,185,3.886,186,4.889,187,2.787,188,2.756,189,3.506,190,2.756,191,3.886,192,3.886,193,2.756,194,1.56,195,2.787,196,2.756,197,1.976,198,2.756,199,1.976,200,1.745,201,2.756,202,2.756]],["title/interfaces/Response.html",[203,1.764,204,1.973]],["body/interfaces/Response.html",[0,0.054,3,0.4,4,0.35,5,0.35,8,0.4,9,2.176,13,0.939,14,0.035,26,0.542,35,0.542,39,0.024,40,0.024,49,0.694,54,1.103,95,1.608,103,1.245,134,3.464,166,1.457,194,3.063,203,1.783,204,2.699,205,3.149,206,2.258,207,4.486,208,4.007,209,3.535,210,3.535,211,3.535,212,2.612,213,3.535,214,2.258,215,2.612,216,2.612,217,2.612,218,2.612,219,2.612]],["title/classes/Stat.html",[0,0.053,220,1.764]],["body/classes/Stat.html",[0,0.041,2,1.108,3,0.304,4,0.266,5,0.266,8,0.304,9,1.793,10,2.984,13,1.124,14,0.035,15,1.717,16,1.597,19,1.01,21,1.958,26,0.583,33,1.479,35,0.583,36,2.914,37,1.986,39,0.02,40,0.02,74,0.766,95,1.222,117,2.147,141,3.287,142,1.793,143,1.717,146,1.717,148,1.356,183,1.986,220,2.356,221,1.356,222,2.147,223,2.395,224,4.88,225,2.395,226,3.513,227,4.583,228,2.395,229,2.395,230,1.717,231,2.395,232,1.986,233,1.986,234,2.914,235,2.914,236,2.914,237,3.513,238,1.717,239,1.717,240,2.395,241,1.516,242,1.986]],["title/controllers/StatsController.html",[41,1.092,243,1.973]],["body/controllers/StatsController.html",[0,0.052,1,2.879,3,0.383,4,0.335,5,0.335,8,0.383,13,0.665,14,0.035,16,1.157,19,0.732,26,0.677,28,1.269,35,0.383,39,0.023,40,0.023,41,1.057,43,1.157,45,1.588,48,1.157,49,0.665,52,1.909,53,1.395,54,1.057,125,0.881,153,2.162,158,3.388,160,1.395,161,1.395,164,2.162,165,2.162,166,1.915,167,2.162,171,2.162,172,2.162,194,2.343,243,2.62,244,2.501,245,3.015,246,3.432,247,2.501,248,3.015,249,2.501,250,2.501,251,2.411,252,2.501,253,3.015,254,3.015,255,3.015,256,3.015]],["title/modules/StatsModule.html",[56,1.311,64,1.764]],["body/modules/StatsModule.html",[0,0.051,3,0.378,4,0.331,5,0.331,14,0.035,26,0.696,34,2.132,35,0.378,39,0.023,40,0.023,43,1.573,49,0.655,56,1.725,58,1.376,59,1.896,64,3.103,66,2.321,67,1.684,68,1.684,70,2.595,71,1.883,73,1.883,74,0.952,125,1.198,142,2.092,182,2.939,220,1.684,222,1.252,230,2.132,238,2.132,241,2.595,243,2.969,251,2.797,252,2.466,257,2.466,258,2.466,259,2.973,260,2.973,261,2.321,262,2.973]],["title/injectables/StatsService.html",[103,0.91,251,1.59]],["body/injectables/StatsService.html",[0,0.041,1,2.609,3,0.308,4,0.269,5,0.269,8,0.308,10,1.737,13,0.781,14,0.035,19,0.86,26,0.651,33,1.02,34,1.737,35,0.308,39,0.02,40,0.02,45,1.36,48,0.93,49,0.534,53,1.639,54,0.849,74,0.775,85,2.009,99,2.652,103,1.035,104,1.236,112,1.534,117,1.02,125,1.035,148,1.371,160,1.639,161,1.639,187,2.54,189,3.794,194,1.371,195,1.737,197,1.737,199,2.54,220,2.371,222,2.064,230,1.737,239,1.737,246,2.938,247,2.938,249,2.009,250,2.009,251,1.808,263,2.009,264,2.422,265,4.188,266,2.422,267,3.542,268,2.422,269,3.542,270,2.422,271,1.534,272,2.422,273,2.009,274,2.938,275,2.422,276,2.422,277,2.422,278,1.737,279,2.422,280,2.422,281,2.422,282,2.422,283,2.422,284,2.422]],["title/injectables/TransformInterceptor.html",[103,0.91,166,1.442]],["body/injectables/TransformInterceptor.html",[0,0.052,3,0.389,4,0.34,5,0.34,8,0.389,13,0.674,14,0.035,19,0.742,26,0.531,35,0.531,39,0.023,40,0.023,45,1.604,48,1.174,49,0.674,54,1.072,95,1.561,103,1.221,104,1.561,125,0.894,134,2.193,160,1.415,161,1.415,166,1.933,194,2.366,203,1.732,204,1.937,206,2.193,207,3.466,208,2.537,209,4.242,210,4.242,211,3.466,212,2.537,213,3.947,214,2.193,215,2.537,216,3.947,217,3.466,218,3.947,219,2.537,285,3.058,286,3.058]],["title/classes/UpdateUserDto.html",[0,0.053,287,1.973]],["body/classes/UpdateUserDto.html",[0,0.07,2,1.895,3,0.521,4,0.456,5,0.456,14,0.034,26,0.642,28,1.724,35,0.521,39,0.028,40,0.028,109,2.091,111,2.938,200,2.594,287,3.199,288,3.398,289,4.096,290,2.938,291,4.096,292,4.096]],["title/classes/User.html",[0,0.053,222,1.311]],["body/classes/User.html",[0,0.07,2,1.369,3,0.376,4,0.329,5,0.329,8,0.376,9,2.085,13,1.031,14,0.035,16,1.568,19,0.991,21,1.936,26,0.595,31,2.962,32,1.676,33,1.246,35,0.595,39,0.023,40,0.023,74,0.947,95,2.702,112,2.962,125,1.367,141,3.355,142,2.085,143,2.122,144,3.388,146,2.122,147,3.388,148,1.676,222,1.969,261,1.676,271,1.874,293,1.874,294,4.085,295,2.959,296,2.959,297,2.455]],["title/controllers/UsersController.html",[41,1.092,298,1.973]],["body/controllers/UsersController.html",[0,0.043,3,0.321,4,0.281,5,0.281,8,0.321,13,0.805,14,0.035,16,1.647,19,1.041,21,1.647,26,0.634,28,1.064,35,0.321,39,0.02,40,0.02,41,0.886,43,0.97,45,1.402,48,1.647,49,0.557,52,1.6,53,1.169,54,1.504,109,2.653,120,2.62,125,1.068,153,1.812,158,3.077,160,1.691,161,1.691,164,1.812,165,1.812,166,1.691,167,1.812,171,1.812,172,1.812,200,2.314,290,1.812,298,2.314,299,2.096,300,2.527,301,3.899,302,3.03,303,2.096,304,2.527,305,2.527,306,2.096,307,3.653,308,2.527,309,2.527,310,2.19,311,2.096,312,2.096,313,2.527,314,2.527,315,2.527,316,2.527,317,2.527,318,2.527,319,2.527]],["title/modules/UsersModule.html",[56,1.311,65,1.764]],["body/modules/UsersModule.html",[0,0.054,3,0.4,4,0.35,5,0.35,14,0.035,26,0.687,35,0.4,39,0.024,40,0.024,43,1.636,49,0.694,56,1.794,58,1.457,59,1.972,65,3.157,66,2.413,67,1.783,68,1.783,70,2.699,71,1.994,73,1.994,74,1.008,125,0.92,142,1.608,182,2.258,222,1.326,238,2.258,261,2.413,298,3.059,310,2.846,311,2.612,320,2.612,321,2.612,322,3.149,323,3.149,324,2.612]],["title/injectables/UsersService.html",[103,0.91,310,1.59]],["body/injectables/UsersService.html",[0,0.034,3,0.25,4,0.219,5,0.219,8,0.25,13,0.988,14,0.035,19,1.149,21,1.594,26,0.602,33,0.828,35,0.25,39,0.017,40,0.017,45,1.163,48,1.818,49,0.434,53,0.91,54,1.295,74,0.63,99,2.341,103,0.886,104,1.004,109,2.289,112,1.246,120,3.215,125,1.384,148,1.716,160,2.075,161,2.075,187,2.173,189,2.978,195,1.411,197,1.411,199,1.411,200,1.919,222,1.887,271,1.246,273,1.632,274,1.632,278,1.411,287,3.125,290,2.173,301,3.444,302,2.514,303,2.514,306,2.514,310,1.547,312,1.632,324,1.632,325,1.632,326,3.03,327,3.03,328,1.968,329,1.968,330,3.03,331,1.968,332,3.03,333,1.968,334,1.968,335,3.03,336,4.736,337,1.968,338,3.03,339,1.968,340,1.968,341,1.968,342,1.968,343,1.968,344,1.968,345,1.968,346,3.03,347,1.968]],["title/coverage.html",[348,3.034]],["body/coverage.html",[0,0.088,1,1.371,5,0.269,6,2.009,7,2.009,13,0.534,14,0.034,39,0.02,40,0.02,41,1.615,42,1.534,44,2.009,50,1.236,103,1.433,105,2.009,109,1.236,110,2.009,111,2.54,117,1.02,118,2.243,149,1.534,151,1.534,152,2.009,166,1.121,169,1.236,184,2.009,203,1.371,204,1.534,206,2.54,220,1.371,221,2.006,222,1.02,241,1.534,243,1.534,244,2.009,251,1.236,261,1.371,263,2.009,278,1.737,287,1.534,288,2.009,293,2.243,298,1.534,299,2.009,310,1.236,325,2.009,348,1.737,349,2.422,350,2.422,351,2.422,352,6.068,353,4.608,354,4.903,355,4.608,356,2.422,357,4.188,358,4.903,359,2.009,360,2.422,361,2.009,362,2.422,363,2.422,364,2.422]],["title/dependencies.html",[59,1.731,365,2.612]],["body/dependencies.html",[0,0.078,14,0.035,28,1.478,32,1.989,33,1.478,39,0.026,40,0.026,49,0.774,59,1.625,74,1.124,77,2.913,214,2.518,366,5.1,367,3.512,368,3.512,369,3.512,370,3.512,371,4.582,372,3.512,373,3.512,374,3.512,375,3.512,376,3.512,377,3.512,378,3.512,379,3.512,380,3.512,381,3.512,382,3.512,383,3.512,384,3.512,385,3.512,386,3.512,387,3.512,388,3.512]],["title/miscellaneous/enumerations.html",[389,1.099,390,3.103]],["body/miscellaneous/enumerations.html",[8,0.524,14,0.034,15,3.638,39,0.028,40,0.028,221,2.335,232,3.42,233,3.42,234,4.207,235,4.207,236,4.207,389,1.735,390,3.42,391,2.957,392,4.755]],["title/miscellaneous/functions.html",[389,1.099,393,3.103]],["body/miscellaneous/functions.html",[8,0.58,14,0.03,39,0.03,40,0.03,359,3.785,361,4.762,389,1.921,393,3.785,394,4.564]],["title/index.html",[8,0.332,395,2.612,396,2.612]],["body/index.html",[4,0.317,14,0.034,39,0.022,40,0.022,89,3.806,119,2.367,348,2.047,397,2.854,398,2.854,399,3.983,400,2.854,401,2.854,402,2.854,403,2.854,404,2.854,405,2.854,406,2.854,407,2.854,408,2.854,409,2.854,410,5.552,411,2.854,412,2.854,413,2.854,414,5.41,415,2.854,416,2.854,417,3.983,418,2.854,419,2.854,420,2.854,421,2.854,422,3.983,423,3.983,424,2.854,425,2.854,426,2.854,427,3.983,428,3.983,429,2.854,430,2.854,431,2.854,432,2.854,433,2.854,434,2.367,435,2.854,436,2.854,437,2.854,438,2.854,439,2.854,440,2.854,441,2.854,442,2.854,443,2.854,444,2.854,445,2.854,446,2.854,447,2.854,448,2.854,449,2.854,450,2.854,451,2.854,452,2.854]],["title/modules.html",[58,1.958]],["body/modules.html",[14,0.029,39,0.029,40,0.029,57,2.645,58,1.933,63,2.365,64,2.365,65,2.365,434,4.776,453,5.758,454,5.758,455,5.758]],["title/overview.html",[456,3.509]],["body/overview.html",[2,1.464,14,0.033,39,0.024,40,0.024,43,1.215,50,2.472,57,3.766,58,1.464,59,1.979,60,2.625,61,2.625,62,2.625,63,3.068,64,3.068,65,3.068,66,2.421,67,1.792,68,1.792,104,1.615,169,2.472,178,2.625,179,2.625,203,1.792,251,2.472,257,2.625,258,2.625,310,2.472,320,2.625,321,2.625,456,2.625,457,4.276,458,3.164,459,3.164,460,3.164]],["title/miscellaneous/typealiases.html",[389,1.099,461,3.741]],["body/miscellaneous/typealiases.html",[8,0.549,13,0.952,14,0.029,39,0.029,40,0.029,118,2.734,145,3.741,221,2.445,239,3.741,271,3.304,293,2.734,389,1.817,391,3.096,462,4.317,463,3.581,464,3.581]],["title/miscellaneous/variables.html",[389,1.099,465,3.103]],["body/miscellaneous/variables.html",[8,0.511,14,0.033,39,0.028,40,0.028,118,2.545,149,3.162,150,3.334,221,2.276,241,3.162,242,3.334,261,2.828,293,2.545,297,3.334,389,1.692,391,2.882,392,4.506,463,3.334,464,3.334,465,3.334,466,5.432]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":460,"title":{},"body":{"overview.html":{}}}],["1.1.0",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":457,"title":{},"body":{"overview.html":{}}}],["4.1.6",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":458,"title":{},"body":{"overview.html":{}}}],["5.1.5",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":459,"title":{},"body":{"overview.html":{}}}],["6.0.13",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{}}}],["additem",{"_index":155,"title":{},"body":{"controllers/ItemsController.html":{}}}],["additem(@body",{"_index":175,"title":{},"body":{"controllers/ItemsController.html":{}}}],["additem(itemdata",{"_index":157,"title":{},"body":{"controllers/ItemsController.html":{}}}],["addstat",{"_index":246,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["addstat(@body",{"_index":255,"title":{},"body":{"controllers/StatsController.html":{}}}],["addstat(data",{"_index":247,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["addstatdto",{"_index":1,"title":{"classes/AddStatDto.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["aliases",{"_index":462,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allitems",{"_index":156,"title":{},"body":{"controllers/ItemsController.html":{}}}],["amazing",{"_index":435,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":27,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{}}}],["apiproperty()@isnotempty",{"_index":24,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@ismongoid",{"_index":22,"title":{},"body":{"classes/AddStatDto.html":{}}}],["apiproperty()@isnotempty()@prop({required",{"_index":128,"title":{},"body":{"classes/Item.html":{}}}],["apiproperty()@prop",{"_index":132,"title":{},"body":{"classes/Item.html":{}}}],["apiproperty({enum",{"_index":17,"title":{},"body":{"classes/AddStatDto.html":{}}}],["apiresponse",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":171,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["apitags('items",{"_index":174,"title":{},"body":{"controllers/ItemsController.html":{}}}],["apitags('stats",{"_index":253,"title":{},"body":{"controllers/StatsController.html":{}}}],["apitags('users",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":412,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":42,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":405,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":50,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":445,"title":{},"body":{"index.html":{}}}],["await",{"_index":274,"title":{},"body":{"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":436,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":269,"title":{},"body":{"injectables/StatsService.html":{}}}],["body",{"_index":164,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":134,"title":{},"body":{"classes/Item.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["bootstrap",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":455,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":453,"title":{},"body":{"modules.html":{}}}],["building",{"_index":400,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":209,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["class",{"_index":0,"title":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/Stat.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/Stat.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_itemsmodule",{"_index":178,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_itemsmodule_providers",{"_index":179,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_statsmodule",{"_index":257,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_statsmodule_providers",{"_index":258,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":320,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":321,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["config/configuration",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongo_uri",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":148,"title":{},"body":{"classes/Item.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":187,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["constructor(itemmodel",{"_index":188,"title":{},"body":{"injectables/ItemsService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["constructor(statsmodel",{"_index":264,"title":{},"body":{"injectables/StatsService.html":{}}}],["constructor(usermodel",{"_index":328,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":217,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":41,"title":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('items",{"_index":173,"title":{},"body":{"controllers/ItemsController.html":{}}}],["controller('stats",{"_index":254,"title":{},"body":{"controllers/StatsController.html":{}}}],["controller('users",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":348,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":200,"title":{},"body":{"injectables/ItemsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createitem",{"_index":185,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createitem(data",{"_index":192,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createuserdto",{"_index":109,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.phonenumber",{"_index":343,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.username",{"_index":342,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":194,"title":{},"body":{"injectables/ItemsService.html":{},"interfaces/Response.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{}}}],["data.event",{"_index":284,"title":{},"body":{"injectables/StatsService.html":{}}}],["data.itemid",{"_index":283,"title":{},"body":{"injectables/StatsService.html":{}}}],["data.userphonenumber",{"_index":276,"title":{},"body":{"injectables/StatsService.html":{}}}],["database",{"_index":280,"title":{},"body":{"injectables/StatsService.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":59,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":119,"title":{},"body":{"classes/Item.html":{},"index.html":{}}}],["dev.env",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["development",{"_index":413,"title":{},"body":{"index.html":{}}}],["document",{"_index":144,"title":{},"body":{"classes/Item.html":{},"classes/User.html":{}}}],["documentation",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["dto/add",{"_index":249,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["dto/create",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{}}}],["e2e",{"_index":424,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":401,"title":{},"body":{"index.html":{}}}],["enum",{"_index":36,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{}}}],["enumerations",{"_index":390,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envfilepath",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":279,"title":{},"body":{"injectables/StatsService.html":{}}}],["event",{"_index":10,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{}}}],["executioncontext",{"_index":210,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["express",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":291,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":301,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallitems",{"_index":186,"title":{},"body":{"injectables/ItemsService.html":{}}}],["findone",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/StatsService.html":{}}}],["framework",{"_index":399,"title":{},"body":{"index.html":{}}}],["function",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":393,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":395,"title":{"index.html":{}},"body":{}}],["grow",{"_index":431,"title":{},"body":{"index.html":{}}}],["hello",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":442,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":449,"title":{},"body":{"index.html":{}}}],["id",{"_index":120,"title":{},"body":{"classes/Item.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["imageurl",{"_index":121,"title":{},"body":{"classes/Item.html":{}}}],["imateapotexception",{"_index":270,"title":{},"body":{"injectables/StatsService.html":{}}}],["implements",{"_index":215,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":103,"title":{"injectables/AppService.html":{},"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":197,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(item.name",{"_index":198,"title":{},"body":{"injectables/ItemsService.html":{}}}],["injectmodel(stat.name",{"_index":272,"title":{},"body":{"injectables/StatsService.html":{}}}],["injectmodel(user.name",{"_index":273,"title":{},"body":{"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":409,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":411,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":216,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":285,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":203,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":205,"title":{},"body":{"interfaces/Response.html":{}}}],["isenum",{"_index":29,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isenum(statevents",{"_index":38,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isglobal",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":30,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isnonveg",{"_index":122,"title":{},"body":{"classes/Item.html":{}}}],["isnotempty",{"_index":31,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/User.html":{}}}],["isnotempty()@prop({required",{"_index":294,"title":{},"body":{"classes/User.html":{}}}],["item",{"_index":117,"title":{"classes/Item.html":{}},"body":{"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["item.name",{"_index":183,"title":{},"body":{"modules/ItemsModule.html":{},"classes/Stat.html":{}}}],["itemdata",{"_index":162,"title":{},"body":{"controllers/ItemsController.html":{}}}],["itemdocument",{"_index":145,"title":{},"body":{"classes/Item.html":{},"injectables/ItemsService.html":{},"miscellaneous/typealiases.html":{}}}],["itemid",{"_index":11,"title":{},"body":{"classes/AddStatDto.html":{}}}],["itemmodel",{"_index":191,"title":{},"body":{"injectables/ItemsService.html":{}}}],["items",{"_index":154,"title":{},"body":{"controllers/ItemsController.html":{}}}],["items.controller",{"_index":181,"title":{},"body":{"modules/ItemsModule.html":{}}}],["items.service",{"_index":170,"title":{},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{}}}],["items/items.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["itemschema",{"_index":149,"title":{},"body":{"classes/Item.html":{},"modules/ItemsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["itemscontroller",{"_index":151,"title":{"controllers/ItemsController.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"coverage.html":{}}}],["itemsmodule",{"_index":63,"title":{"modules/ItemsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules.html":{},"overview.html":{}}}],["itemsservice",{"_index":169,"title":{"injectables/ItemsService.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"coverage.html":{},"overview.html":{}}}],["join",{"_index":438,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":446,"title":{},"body":{"index.html":{}}}],["license",{"_index":452,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":428,"title":{},"body":{"index.html":{}}}],["load",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["maincategory",{"_index":123,"title":{},"body":{"classes/Item.html":{}}}],["map",{"_index":212,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":40,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":389,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":427,"title":{},"body":{"index.html":{}}}],["mode",{"_index":417,"title":{},"body":{"index.html":{}}}],["model",{"_index":189,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["modelurl",{"_index":124,"title":{},"body":{"classes/Item.html":{}}}],["module",{"_index":56,"title":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":33,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Item.html":{},"injectables/ItemsService.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":240,"title":{},"body":{"classes/Stat.html":{}}}],["mongoose.schema.types.objectid",{"_index":237,"title":{},"body":{"classes/Stat.html":{}}}],["mongoosemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":182,"title":{},"body":{"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":441,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":447,"title":{},"body":{"index.html":{}}}],["name",{"_index":125,"title":{},"body":{"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":451,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":211,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":278,"title":{},"body":{"injectables/StatsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":218,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":219,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["node.js",{"_index":398,"title":{},"body":{"index.html":{}}}],["npm",{"_index":410,"title":{},"body":{"index.html":{}}}],["number",{"_index":336,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.values(statevents",{"_index":37,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{}}}],["observable",{"_index":213,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["open",{"_index":429,"title":{},"body":{"index.html":{}}}],["optional",{"_index":161,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":456,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":365,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":289,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":292,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["phonenumber",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["please",{"_index":439,"title":{},"body":{"index.html":{}}}],["post",{"_index":158,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":153,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":199,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["prod.env",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":419,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":397,"title":{},"body":{"index.html":{}}}],["project",{"_index":430,"title":{},"body":{"index.html":{}}}],["prop",{"_index":141,"title":{},"body":{"classes/Item.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":223,"title":{},"body":{"classes/Stat.html":{}}}],["prop({type",{"_index":226,"title":{},"body":{"classes/Stat.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["rate",{"_index":126,"title":{},"body":{"classes/Item.html":{}}}],["read",{"_index":440,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":227,"title":{},"body":{"classes/Stat.html":{}}}],["reflect",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":326,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(id",{"_index":335,"title":{},"body":{"injectables/UsersService.html":{}}}],["removes",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":408,"title":{},"body":{"index.html":{}}}],["required",{"_index":147,"title":{},"body":{"classes/Item.html":{},"classes/User.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":204,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["results",{"_index":39,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":414,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":214,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["scalable",{"_index":402,"title":{},"body":{"index.html":{}}}],["schema",{"_index":142,"title":{},"body":{"classes/Item.html":{},"modules/ItemsModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":143,"title":{},"body":{"classes/Item.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(item",{"_index":150,"title":{},"body":{"classes/Item.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stat",{"_index":242,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":297,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/item.schema",{"_index":168,"title":{},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{}}}],["schemas/stat.schema",{"_index":34,"title":{},"body":{"classes/AddStatDto.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["schemas/user.schema",{"_index":324,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":403,"title":{},"body":{"index.html":{}}}],["shall",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":404,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":433,"title":{},"body":{"index.html":{}}}],["src/.../item.schema.ts",{"_index":463,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stat.schema.ts",{"_index":391,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":464,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["src/interceptors/transform.interceptor",{"_index":167,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["src/interceptors/transform.interceptor.ts",{"_index":206,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/transform.interceptor.ts:18",{"_index":286,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/items/items.controller.ts",{"_index":152,"title":{},"body":{"controllers/ItemsController.html":{},"coverage.html":{}}}],["src/items/items.controller.ts:14",{"_index":159,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.controller.ts:19",{"_index":163,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.module.ts",{"_index":180,"title":{},"body":{"modules/ItemsModule.html":{}}}],["src/items/items.service.ts",{"_index":184,"title":{},"body":{"injectables/ItemsService.html":{},"coverage.html":{}}}],["src/items/items.service.ts:13",{"_index":193,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:17",{"_index":196,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:7",{"_index":190,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/schemas/item.schema",{"_index":231,"title":{},"body":{"classes/Stat.html":{}}}],["src/items/schemas/item.schema.ts",{"_index":118,"title":{},"body":{"classes/Item.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/items/schemas/item.schema.ts:15",{"_index":131,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:20",{"_index":138,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:25",{"_index":129,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:30",{"_index":136,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:35",{"_index":140,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:40",{"_index":139,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:45",{"_index":135,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:49",{"_index":133,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:53",{"_index":137,"title":{},"body":{"classes/Item.html":{}}}],["src/main.ts",{"_index":359,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/stats/dto/add",{"_index":6,"title":{},"body":{"classes/AddStatDto.html":{},"coverage.html":{}}}],["src/stats/schemas/stat.schema.ts",{"_index":221,"title":{},"body":{"classes/Stat.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stats/schemas/stat.schema.ts:18",{"_index":229,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/schemas/stat.schema.ts:21",{"_index":225,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/schemas/stat.schema.ts:24",{"_index":228,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/stats.controller.ts",{"_index":244,"title":{},"body":{"controllers/StatsController.html":{},"coverage.html":{}}}],["src/stats/stats.controller.ts:14",{"_index":248,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.module.ts",{"_index":259,"title":{},"body":{"modules/StatsModule.html":{}}}],["src/stats/stats.service.ts",{"_index":263,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["src/stats/stats.service.ts:13",{"_index":266,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:18",{"_index":268,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/users/dto/create",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":288,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":230,"title":{},"body":{"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":293,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:11",{"_index":295,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:14",{"_index":296,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":299,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:21",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":322,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":325,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:13",{"_index":331,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":333,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":334,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":339,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":337,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":329,"title":{},"body":{"injectables/UsersService.html":{}}}],["staging.env",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":415,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":418,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":420,"title":{},"body":{"index.html":{}}}],["started",{"_index":396,"title":{"index.html":{}},"body":{}}],["starter",{"_index":407,"title":{},"body":{"index.html":{}}}],["stat",{"_index":220,"title":{"classes/Stat.html":{}},"body":{"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["stat.dto",{"_index":250,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["stat.dto.ts",{"_index":7,"title":{},"body":{"classes/AddStatDto.html":{},"coverage.html":{}}}],["stat.dto.ts:16",{"_index":20,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.dto.ts:21",{"_index":23,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.dto.ts:9",{"_index":25,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.name",{"_index":262,"title":{},"body":{"modules/StatsModule.html":{}}}],["statdocument",{"_index":239,"title":{},"body":{"classes/Stat.html":{},"injectables/StatsService.html":{},"miscellaneous/typealiases.html":{}}}],["statements",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["statevents",{"_index":15,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["stats",{"_index":245,"title":{},"body":{"controllers/StatsController.html":{}}}],["stats.controller",{"_index":260,"title":{},"body":{"modules/StatsModule.html":{}}}],["stats.service",{"_index":252,"title":{},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{}}}],["stats/stats.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["statschema",{"_index":241,"title":{},"body":{"classes/Stat.html":{},"modules/StatsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statscontroller",{"_index":243,"title":{"controllers/StatsController.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"coverage.html":{}}}],["statsmodel",{"_index":267,"title":{},"body":{"injectables/StatsService.html":{}}}],["statsmodule",{"_index":64,"title":{"modules/StatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["statsservice",{"_index":251,"title":{"injectables/StatsService.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["stay",{"_index":443,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/Stat.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["subcategory",{"_index":127,"title":{},"body":{"classes/Item.html":{}}}],["success",{"_index":207,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["support",{"_index":434,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":454,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":208,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":423,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":426,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":425,"title":{},"body":{"index.html":{}}}],["tests",{"_index":422,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":432,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["this.itemmodel.create(data",{"_index":201,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.itemmodel.find",{"_index":202,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.itemsservice.createitem(itemdata",{"_index":176,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.itemsservice.findallitems",{"_index":177,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.statsmodel.create",{"_index":281,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.addstat(data",{"_index":256,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.usermodel",{"_index":341,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":344,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.findone",{"_index":275,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":316,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":317,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":277,"title":{},"body":{"injectables/StatsService.html":{}}}],["timestamps",{"_index":146,"title":{},"body":{"classes/Item.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["touch",{"_index":444,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["transforminterceptor",{"_index":166,"title":{"injectables/TransformInterceptor.html":{}},"body":{"controllers/ItemsController.html":{},"interfaces/Response.html":{},"controllers/StatsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["true",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{}}}],["twitter",{"_index":450,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":461,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":406,"title":{},"body":{"index.html":{}}}],["ui",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":224,"title":{},"body":{"classes/Stat.html":{}}}],["undefined})@isnotempty()@isenum(statevents",{"_index":18,"title":{},"body":{"classes/AddStatDto.html":{}}}],["unique",{"_index":130,"title":{},"body":{"classes/Item.html":{}}}],["unit",{"_index":421,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":195,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":327,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":338,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":287,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uri",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":165,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(new",{"_index":172,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":222,"title":{"classes/User.html":{}},"body":{"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user._id",{"_index":282,"title":{},"body":{"injectables/StatsService.html":{}}}],["user.dto",{"_index":290,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":238,"title":{},"body":{"classes/Stat.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["user_closed_model",{"_index":236,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_closed_view_ar",{"_index":234,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_opened_model",{"_index":235,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_opened_view_ar",{"_index":232,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_openen_view_ar",{"_index":233,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["userdocument",{"_index":271,"title":{},"body":{"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":330,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userphonenumber",{"_index":12,"title":{},"body":{"classes/AddStatDto.html":{}}}],["users",{"_index":300,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":323,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":311,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":261,"title":{},"body":{"modules/StatsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":298,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodel",{"_index":265,"title":{},"body":{"injectables/StatsService.html":{}}}],["usersmodule",{"_index":65,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":310,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":32,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":392,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":465,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":332,"title":{},"body":{"injectables/UsersService.html":{}}}],["watch",{"_index":416,"title":{},"body":{"index.html":{}}}],["website",{"_index":448,"title":{},"body":{"index.html":{}}}],["whichever",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":437,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddStatDto.html":{"url":"classes/AddStatDto.html","title":"class - AddStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/dto/add-stat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                itemId\n                            \n                            \n                                userPhoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatEvents\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})@IsNotEmpty()@IsEnum(StatEvents)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport * as mongoose from 'mongoose';\nimport { StatEvents } from '../schemas/stat.schema';\n\nexport class AddStatDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  userPhoneNumber: string;\n\n  @ApiProperty({\n    enum: Object.values(StatEvents),\n  })\n  @IsNotEmpty()\n  @IsEnum(StatEvents)\n  event: StatEvents;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsMongoId()\n  itemId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nItemsModule\n\nItemsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ItemsModule\n                        \n                        \n                            StatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport configuration from 'config/configuration';\nimport { ItemsModule } from './items/items.module';\nimport { UsersModule } from './users/users.module';\nimport { StatsModule } from './stats/stats.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      // Whichever is found first, shall be used by Nest\n      envFilePath: ['.prod.env', '.dev.env', '.staging.env'],\n      isGlobal: true,\n      load: [configuration],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URI'),\n      }),\n      inject: [ConfigService],\n    }),\n    ItemsModule,\n    UsersModule,\n    StatsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                phoneNumber\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiResponse } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  phoneNumber: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  userName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Item.html":{"url":"classes/Item.html","title":"class - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Item\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/schemas/item.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                isNonVeg\n                            \n                            \n                                mainCategory\n                            \n                            \n                                modelUrl\n                            \n                            \n                                name\n                            \n                            \n                                rate\n                            \n                            \n                                subCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNonVeg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\nimport { Document } from 'mongoose';\n\nexport type ItemDocument = Item & Document;\n\n@Schema({\n  timestamps: true,\n})\nexport class Item {\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true, unique: true })\n  id: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  mainCategory: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  subCategory: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  rate: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  isNonVeg: boolean;\n\n  @ApiProperty()\n  @Prop()\n  imageUrl: string;\n\n  @ApiProperty()\n  @Prop()\n  modelUrl: string;\n}\n\nexport const ItemSchema = SchemaFactory.createForClass(Item);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ItemsController.html":{"url":"controllers/ItemsController.html","title":"controller - ItemsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ItemsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                items\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                allItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(itemData: Item)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/items/items.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    itemData\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allItems\n                        \n                    \n                \n            \n            \n                \nallItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/items/items.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseInterceptors } from '@nestjs/common';\nimport { TransformInterceptor } from 'src/interceptors/transform.interceptor';\nimport { Item } from './schemas/item.schema';\nimport { ItemsService } from './items.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@UseInterceptors(new TransformInterceptor())\n@Controller('items')\n@ApiTags('Items')\nexport class ItemsController {\n  constructor(private readonly itemsService: ItemsService) {}\n\n  @Post()\n  addItem(@Body() itemData: Item) {\n    return this.itemsService.createItem(itemData);\n  }\n\n  @Get()\n  allItems() {\n    return this.itemsService.findAllItems();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ItemsModule.html":{"url":"modules/ItemsModule.html","title":"module - ItemsModule","body":"\n                   \n\n\n\n\n    Modules\n    ItemsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_providers\n\n\n\n\nItemsService\n\nItemsService\n\n\n\nItemsModule\n\nItemsModule\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/items/items.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ItemsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ItemsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Controller, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Item, ItemSchema } from './schemas/item.schema';\nimport { ItemsController } from './items.controller';\nimport { ItemsService } from './items.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Item.name, schema: ItemSchema }]),\n  ],\n  controllers: [ItemsController],\n  providers: [ItemsService],\n})\nexport class ItemsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemsService.html":{"url":"injectables/ItemsService.html","title":"injectable - ItemsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ItemsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createItem\n                            \n                            \n                                    Async\n                                findAllItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/items/items.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    createItem(data: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllItems()\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Item, ItemDocument } from './schemas/item.schema';\n\n@Injectable()\nexport class ItemsService {\n  constructor(\n    @InjectModel(Item.name) private readonly itemModel: Model,\n  ) {}\n\n  // Create an item\n  async createItem(data: Item) {\n    return this.itemModel.create(data);\n  }\n\n  async findAllItems() {\n    return this.itemModel.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  success: boolean;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map((data) => ({ success: true, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stat.html":{"url":"classes/Stat.html","title":"class - Stat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/schemas/stat.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                item\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | Item\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/users/schemas/user.schema';\nimport * as mongoose from 'mongoose';\nimport { Item } from 'src/items/schemas/item.schema';\n\nexport enum StatEvents {\n  USER_OPENED_VIEW_AR = 'USER_OPENEN_VIEW_AR',\n  USER_CLOSED_VIEW_AR = 'USER_CLOSED_VIEW_AR',\n  USER_OPENED_MODEL = 'USER_OPENED_MODEL',\n  USER_CLOSED_MODEL = 'USER_CLOSED_MODEL',\n}\n\n@Schema({\n  timestamps: true,\n})\nexport class Stat {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: User.name })\n  user: string | User;\n\n  @Prop({ enum: Object.values(StatEvents) })\n  event: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Item.name })\n  item: string | Item;\n}\n\nexport type StatDocument = mongoose.Document & Stat;\n\nexport const StatSchema = SchemaFactory.createForClass(Stat);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatsController.html":{"url":"controllers/StatsController.html","title":"controller - StatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStat\n                        \n                    \n                \n            \n            \n                \naddStat(data: AddStatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AddStatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseInterceptors } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { TransformInterceptor } from 'src/interceptors/transform.interceptor';\nimport { AddStatDto } from './dto/add-stat.dto';\nimport { StatsService } from './stats.service';\n\n@ApiTags('Stats')\n@UseInterceptors(new TransformInterceptor())\n@Controller('stats')\nexport class StatsController {\n  constructor(private readonly statsService: StatsService) {}\n\n  @Post()\n  addStat(@Body() data: AddStatDto) {\n    return this.statsService.addStat(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatsModule.html":{"url":"modules/StatsModule.html","title":"module - StatsModule","body":"\n                   \n\n\n\n\n    Modules\n    StatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\n\nStatsService\n\nStatsService\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stats/stats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { StatsController } from './stats.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Stat, StatSchema } from './schemas/stat.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Stat.name, schema: StatSchema }]),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [StatsController],\n  providers: [StatsService],\n})\nexport class StatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsModel: Model, usersModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stats/stats.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addStat\n                        \n                    \n                \n            \n            \n                \n                    \n                    addStat(data: AddStatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AddStatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ImATeapotException,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { AddStatDto } from './dto/add-stat.dto';\nimport { Stat, StatDocument } from './schemas/stat.schema';\n\n@Injectable()\nexport class StatsService {\n  constructor(\n    @InjectModel(Stat.name) private readonly statsModel: Model,\n    @InjectModel(User.name) private readonly usersModel: Model,\n  ) {}\n  async addStat(data: AddStatDto) {\n    const user = await this.usersModel.findOne({\n      phoneNumber: data.userPhoneNumber,\n    });\n    if (!user)\n      throw new BadRequestException({\n        error: 'User not found in the database',\n      });\n    let stat = await this.statsModel.create({\n      user: user._id,\n      item: data.itemId,\n      event: data.event,\n    });\n    return stat;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/transform.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  success: boolean;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map((data) => ({ success: true, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsNotEmpty } from 'class-validator';\nimport { Document } from 'mongoose';\n\n@Schema({\n  timestamps: true,\n})\nexport class User {\n  @IsNotEmpty()\n  @Prop({ required: true })\n  name: string;\n  @IsNotEmpty()\n  @Prop({ required: true })\n  phoneNumber: string;\n}\n\nexport type UserDocument = User & Document;\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { TransformInterceptor } from 'src/interceptors/transform.interceptor';\n\n@Controller('users')\n@ApiTags('Users')\n@UseInterceptors(new TransformInterceptor())\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n  create(createUserDto: CreateUserDto) {\n    const user = new this.userModel({\n      name: createUserDto.userName,\n      phoneNumber: createUserDto.phoneNumber,\n    });\n  }\n\n  findAll() {\n    return this.userModel.find();\n  }\n\n  async findOne(id: string) {\n    const user = await this.userModel.findById(id);\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {}\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/items/items.controller.ts\n            \n            controller\n            ItemsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/items/items.service.ts\n            \n            injectable\n            ItemsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/items/schemas/item.schema.ts\n            \n            class\n            Item\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/items/schemas/item.schema.ts\n            \n            variable\n            ItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stats/dto/add-stat.dto.ts\n            \n            class\n            AddStatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stats/schemas/stat.schema.ts\n            \n            class\n            Stat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stats/schemas/stat.schema.ts\n            \n            variable\n            StatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stats/stats.controller.ts\n            \n            controller\n            StatsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/serve-static : ^2.2.2\n        \n            @nestjs/swagger : ^5.1.5\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.2\n        \n            mongoose : ^6.0.13\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StatEvents   (src/.../stat.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stats/schemas/stat.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        StatEvents\n                    \n                \n                        \n                            \n                                 USER_OPENED_VIEW_AR\n                            \n                        \n                        \n                            \n                                Value : USER_OPENEN_VIEW_AR\n                            \n                        \n                        \n                            \n                                 USER_CLOSED_VIEW_AR\n                            \n                        \n                        \n                            \n                                Value : USER_CLOSED_VIEW_AR\n                            \n                        \n                        \n                            \n                                 USER_OPENED_MODEL\n                            \n                        \n                        \n                            \n                                Value : USER_OPENED_MODEL\n                            \n                        \n                        \n                            \n                                 USER_CLOSED_MODEL\n                            \n                        \n                        \n                            \n                                Value : USER_CLOSED_MODEL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ItemsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_providers\n\n\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nItemsModule\n\nItemsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemDocument   (src/.../item.schema.ts)\n                        \n                        \n                            StatDocument   (src/.../stat.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/items/schemas/item.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/stats/schemas/stat.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StatDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemSchema   (src/.../item.schema.ts)\n                        \n                        \n                            StatSchema   (src/.../stat.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/items/schemas/item.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Item)\n                    \n                \n\n\n        \n    \n\n    src/stats/schemas/stat.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Stat)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
