var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddStatDto.html",[0,0.042,1,1.994]],["body/classes/AddStatDto.html",[0,0.059,1,2.853,2,1.663,3,0.319,4,0.281,5,0.281,6,4.807,7,3.022,8,0.4,9,2.046,10,3.953,11,5.358,12,5.358,13,0.728,14,0.028,15,3.953,16,1.981,17,3.589,18,3.589,19,0.944,20,3.589,21,1.828,22,3.589,23,3.589,24,3.022,25,3.589,26,0.508,27,3.769,28,1.428,29,3.589,30,4.77,31,3.415,32,1.961,33,1.764,34,2.648,35,0.319,36,3.022,37,3.022,38,3.589,39,0.02,40,0.02]],["title/controllers/AppController.html",[41,1.147,42,2.201]],["body/controllers/AppController.html",[0,0.053,3,0.377,4,0.332,5,0.332,8,0.473,14,0.028,16,1.568,19,0.747,21,1.701,26,0.473,35,0.377,39,0.022,40,0.022,41,1.828,42,3.507,43,1.568,44,3.57,45,1.474,46,5.12,47,4.24,48,1.176,49,0.81,50,3.17,51,3.57,52,2.536,53,1.687,54,1.459,55,4.24]],["title/modules/AppModule.html",[56,1.147,57,2.201]],["body/modules/AppModule.html",[0,0.028,3,0.199,4,0.175,5,0.175,14,0.028,26,0.573,33,1.257,35,0.199,39,0.014,40,0.014,42,2.716,43,1.257,49,0.426,50,2.848,51,1.88,56,1.169,57,4.06,58,0.958,59,1.575,60,1.88,61,1.88,62,1.88,63,3.117,64,2.848,65,3.117,66,2.617,67,1.857,68,1.22,69,1.22,70,2.233,71,2.032,72,2.513,73,2.233,74,2.233,75,1.22,76,0.619,77,2.861,78,3.872,79,1.474,80,3.398,81,2.233,82,2.233,83,2.233,84,2.233,85,2.233,86,1.88,87,1.88,88,1.88,89,1.88,90,2.861,91,2.233,92,2.233,93,1.88,94,2.233,95,1.88,96,0.619,97,1.035,98,1.647,99,2.243,100,2.233,101,0.889,102,1.88,103,1.121,104,2.233,105,2.233,106,1.035,107,2.233,108,2.233,109,2.233,110,2.233,111,1.647,112,2.233,113,2.233,114,1.88,115,1.88,116,2.233,117,2.233,118,2.233,119,2.233,120,2.233,121,0.958,122,2.233,123,2.233,124,3.398,125,1.121,126,2.233,127,2.233,128,3.398,129,2.233,130,2.233,131,2.233,132,2.233,133,2.233,134,2.508,135,4.599,136,2.861,137,2.861,138,3.398,139,2.233,140,3.398,141,2.233,142,2.233,143,2.233,144,2.233,145,1.474,146,2.233]],["title/injectables/AppService.html",[50,1.822,147,0.861]],["body/injectables/AppService.html",[0,0.055,3,0.396,4,0.349,5,0.349,8,0.496,14,0.027,19,0.784,21,1.753,26,0.396,35,0.396,39,0.022,40,0.022,45,1.519,46,5.209,48,1.235,49,0.85,50,2.991,54,1.531,147,1.413,148,2.063,149,3.748,150,4.452,151,4.452,152,4.452]],["title/injectables/AuthMiddleware.html",[147,0.861,153,1.822]],["body/injectables/AuthMiddleware.html",[0,0.032,3,0.231,4,0.203,5,0.203,8,0.289,13,0.516,14,0.028,19,0.67,21,0.83,26,0.4,35,0.231,39,0.016,40,0.016,45,1.054,48,0.719,49,0.495,52,1.551,53,1.032,96,1.463,111,1.913,125,2.258,147,0.981,148,1.201,153,2.076,154,2.183,155,4.953,156,1.417,157,2.593,158,2.295,159,2.593,160,1.217,161,0.912,162,1.217,163,3.8,164,3.8,165,4.468,166,4.17,167,3.11,168,4.201,169,4.953,170,2.593,171,1.417,172,2.804,173,1.971,174,3.8,175,3.8,176,3.199,177,3.8,178,3.8,179,4.498,180,1.711,181,2.183,182,1.913,183,2.969,184,2.124,185,3.199,186,3.405,187,3.8,188,2.593,189,2.593,190,3.319,191,2.272,192,2.593,193,1.551,194,2.272,195,2.593,196,2.593,197,2.593,198,2.593,199,3.8,200,2.593,201,3.8,202,2.593,203,2.183,204,2.593,205,2.593,206,2.183,207,2.593]],["title/classes/CreateUserDto.html",[0,0.042,208,1.674]],["body/classes/CreateUserDto.html",[0,0.06,2,1.669,3,0.321,4,0.282,5,0.282,8,0.402,9,2.051,13,0.729,14,0.028,16,1.985,19,0.946,21,2.03,24,4.519,26,0.426,27,3.775,28,1.433,31,3.419,32,1.968,35,0.426,39,0.02,40,0.02,145,2.378,173,1.433,186,3.21,193,2.154,208,2.401,209,4.219,210,2.378,211,3.21,212,4.519,213,3.602,214,3.602,215,3.602,216,3.033,217,1.968,218,2.658,219,3.033,220,1.545,221,2.154,222,2.658]],["title/interfaces/IExistingRewardsForUser.html",[220,1.43,223,2.201]],["body/interfaces/IExistingRewardsForUser.html",[3,0.376,4,0.331,5,0.331,8,0.471,9,2.272,13,0.786,14,0.027,26,0.376,35,0.376,39,0.022,40,0.022,106,2.813,220,1.811,223,3.497,224,2.787,225,3.555,226,3.555,227,5.112,228,5.112,229,4.008,230,4.272,231,3.463,232,3.115]],["title/classes/Item.html",[0,0.042,101,1.327]],["body/classes/Item.html",[0,0.045,2,1.127,3,0.216,4,0.191,5,0.191,8,0.271,9,1.555,13,0.81,14,0.028,16,2.166,19,1.032,21,2.032,26,0.427,27,3.936,28,0.968,31,3.428,32,1.329,33,0.899,35,0.386,39,0.015,40,0.015,76,0.675,101,1.724,121,2.74,161,1.039,171,2.367,184,1.043,217,2.367,231,2.167,233,1.605,234,4.333,235,4.333,236,4.333,237,4.333,238,4.333,239,4.333,240,5.578,241,2.432,242,3.052,243,2.432,244,3.624,245,2.432,246,2.432,247,2.432,248,2.432,249,2.432,250,2.432,251,2.432,252,3.936,253,1.555,254,1.605,255,3.052,256,1.795,257,1.605,258,4.116,259,1.454,260,2.048]],["title/controllers/ItemsController.html",[41,1.147,261,2.201]],["body/controllers/ItemsController.html",[0,0.044,3,0.314,4,0.276,5,0.276,8,0.393,13,0.479,14,0.028,16,1.743,19,0.83,26,0.526,28,1.402,35,0.314,39,0.019,40,0.019,41,1.212,43,1.303,45,1.308,48,1.308,49,0.673,52,2.108,53,1.402,54,1.621,101,2.256,160,1.128,161,0.845,162,1.128,261,3.111,262,2.967,263,2.326,264,3.524,265,4.713,266,5.669,267,3.524,268,3.505,269,3.524,270,4.713,271,3.524,272,2.326,273,2.326,274,2.184,275,2.967,276,2.6,277,2.901,278,2.967,279,2.326,280,2.326,281,3.524,282,3.524,283,3.524,284,3.524,285,3.524]],["title/modules/ItemsModule.html",[56,1.147,63,1.994]],["body/modules/ItemsModule.html",[0,0.04,3,0.286,4,0.252,5,0.252,13,0.436,14,0.028,19,0.566,26,0.55,35,0.286,39,0.018,40,0.018,41,1.105,43,1.637,45,0.891,48,0.891,49,0.613,56,1.522,58,1.378,59,2.051,63,3.692,66,2.969,67,2.418,68,1.755,69,1.755,71,2.647,72,2.418,75,1.755,76,0.891,101,1.278,153,1.755,158,1.489,160,1.029,161,1.062,162,1.029,181,2.705,253,1.378,259,2.647,261,3.342,276,2.37,277,3.231,278,2.705,286,2.705,287,3.213,288,2.705,289,3.213,290,2.37,291,3.266,292,4.026,293,3.213,294,2.37,295,2.37,296,3.213,297,2.37,298,2.705,299,1.921,300,2.37,301,3.213]],["title/injectables/ItemsService.html",[147,0.861,277,1.822]],["body/injectables/ItemsService.html",[0,0.043,3,0.306,4,0.269,5,0.269,8,0.383,13,0.629,14,0.028,19,0.924,26,0.499,33,1.271,35,0.306,39,0.019,40,0.019,45,1.286,48,1.286,49,0.656,53,1.368,54,1.594,76,0.954,101,2.331,125,3.03,136,3.902,147,1.196,148,1.593,156,2.532,160,1.484,161,1.112,162,1.484,173,1.368,256,2.537,276,2.537,277,2.532,302,2.895,303,4.635,304,5.612,305,3.438,306,3.704,307,3.438,308,4.635,309,3.438,310,3.42,311,3.438,312,2.269,313,3.438,314,2.056,315,2.056,316,3.438,317,3.438]],["title/interfaces/LoginUserResponseDto.html",[220,1.43,221,1.994]],["body/interfaces/LoginUserResponseDto.html",[0,0.062,3,0.345,4,0.303,5,0.303,8,0.432,9,2.151,13,0.681,14,0.027,21,2.083,26,0.446,27,3.882,28,1.541,31,3.517,32,2.115,35,0.446,39,0.021,40,0.021,145,2.556,173,1.541,186,2.316,193,3.517,208,1.944,209,2.857,210,2.556,211,2.316,212,3.26,216,3.26,217,2.115,218,2.857,219,3.26,220,1.661,221,2.998,222,4.339,224,2.556]],["title/interfaces/Response.html",[167,1.822,220,1.43]],["body/interfaces/Response.html",[0,0.048,3,0.341,4,0.3,5,0.3,8,0.427,9,2.134,13,0.676,14,0.028,26,0.443,35,0.443,39,0.02,40,0.02,49,0.731,54,1.316,121,1.641,147,1.284,167,2.718,168,2.824,173,2.415,182,2.824,220,1.641,224,2.526,231,3.306,274,1.773,318,2.824,319,5.11,320,4.655,321,4.189,322,4.189,323,4.189,324,3.222,325,4.189,326,2.824,327,3.222,328,3.222,329,3.222]],["title/classes/Reward.html",[0,0.042,106,1.545]],["body/classes/Reward.html",[0,0.028,2,1.054,3,0.202,4,0.178,5,0.178,8,0.254,9,1.478,13,0.809,14,0.028,16,2.127,19,1.013,21,1.681,26,0.37,33,1.274,35,0.37,39,0.014,40,0.014,76,0.631,96,1.559,106,2.717,121,2.467,145,1.501,184,0.975,186,2.488,230,3.425,231,2.776,242,2.902,252,3.933,253,1.478,254,1.501,257,1.501,258,2.543,330,1.501,331,3.909,332,3.503,333,3.909,334,4.161,335,3.503,336,3.503,337,3.909,338,3.446,339,2.274,340,2.274,341,2.274,342,4.642,343,2.543,344,2.274,345,5.25,346,2.274,347,3.909,348,2.274,349,2.274,350,2.274,351,3.07,352,2.274,353,1.915,354,2.902,355,2.902,356,2.274,357,1.36,358,1.678,359,1.915,360,2.274,361,2.274,362,1.915,363,1.242,364,2.274,365,2.274,366,3.909,367,3.446,368,2.274,369,1.915,370,2.274,371,1.915,372,1.678,373,1.501,374,2.274,375,2.274,376,2.274,377,2.274,378,1.36,379,1.915]],["title/controllers/RewardsController.html",[41,1.147,380,2.201]],["body/controllers/RewardsController.html",[0,0.045,3,0.322,4,0.283,5,0.283,8,0.403,13,0.491,14,0.028,16,1.337,19,0.637,26,0.53,28,1.439,35,0.322,39,0.02,40,0.02,41,1.244,43,1.337,45,1.33,48,1.003,49,0.69,52,2.162,53,1.439,54,1.244,160,1.158,161,0.867,162,1.158,165,4.518,172,2.667,180,2.386,183,2.386,229,2.386,263,2.386,268,2.386,272,2.386,273,2.386,274,2.221,275,3.044,279,2.386,280,2.386,380,3.164,381,3.044,382,4.793,383,3.615,384,4.793,385,3.615,386,3.615,387,3.615,388,2.7,389,3.044,390,3.615,391,3.615,392,3.615,393,3.615,394,3.615,395,3.044]],["title/modules/RewardsModule.html",[56,1.147,64,1.822]],["body/modules/RewardsModule.html",[0,0.037,3,0.264,4,0.233,5,0.233,13,0.403,14,0.028,19,0.523,26,0.539,35,0.264,39,0.017,40,0.017,43,1.549,45,0.824,48,0.824,49,0.567,56,1.814,58,1.274,59,1.941,64,3.239,66,2.103,67,2.289,68,1.622,69,1.622,71,2.505,72,1.622,75,1.622,76,0.824,96,0.824,97,1.941,106,1.376,153,1.622,160,0.951,161,1.165,162,0.951,171,1.622,229,2.765,232,2.191,253,1.797,290,2.191,291,3.091,292,3.89,294,2.191,295,2.191,297,2.191,298,2.5,299,2.505,357,1.776,363,1.622,378,2.505,380,3.204,388,3.198,389,2.5,396,2.5,397,2.5,398,2.5,399,2.97,400,4.189,401,3.091,402,2.97,403,3.527,404,2.97,405,2.97,406,2.97,407,2.97,408,2.5,409,2.97]],["title/injectables/RewardsService.html",[147,0.861,388,1.674]],["body/injectables/RewardsService.html",[0,0.021,3,0.148,4,0.13,5,0.13,8,0.186,13,0.584,14,0.028,19,0.811,21,1.993,26,0.449,33,0.616,35,0.148,39,0.011,40,0.011,45,0.748,48,1.192,49,0.318,53,1.073,54,1.583,76,0.462,96,1.447,106,2.132,121,1.157,125,2.805,134,2.51,147,0.696,148,0.771,156,1.474,160,1.376,161,1.031,162,1.376,171,0.909,184,2.078,186,3.53,191,2.034,193,2.898,194,2.339,217,1.474,223,1.099,227,2.271,228,2.271,229,3.618,230,3.395,232,1.228,306,3.199,310,1.99,312,1.099,314,1.613,315,1.613,331,3.293,332,1.401,333,1.401,335,1.401,336,1.401,337,3.619,343,1.228,347,1.401,351,2.886,357,0.995,358,1.228,369,2.271,371,1.401,372,1.99,373,2.582,388,1.354,410,1.401,411,3.401,412,2.271,413,2.698,414,3.401,415,3.401,416,3.911,417,2.698,418,2.698,419,1.665,420,1.665,421,2.698,422,1.665,423,1.665,424,3.293,425,1.665,426,3.911,427,1.665,428,1.665,429,2.698,430,1.665,431,2.698,432,1.665,433,2.271,434,1.665,435,1.401,436,0.995,437,1.665,438,1.401,439,1.665,440,1.228,441,2.698,442,1.665,443,2.698,444,1.665,445,1.665,446,1.665,447,1.665,448,1.665,449,1.665,450,2.698,451,1.665,452,1.665,453,1.665,454,1.665,455,1.665,456,1.665,457,1.665,458,3.911,459,2.698,460,1.665,461,2.698,462,2.698,463,3.401,464,1.665,465,2.698,466,1.665,467,2.698,468,1.665,469,1.665,470,1.665,471,1.665,472,1.665]],["title/modules/SchemaModule.html",[56,1.147,99,2.201]],["body/modules/SchemaModule.html",[0,0.047,3,0.335,4,0.295,5,0.295,14,0.028,26,0.551,35,0.335,39,0.02,40,0.02,49,0.719,56,1.694,58,1.616,72,2.059,75,2.691,76,1.045,96,1.045,97,2.282,99,3.251,101,1.499,103,1.892,106,1.746,161,1.396,253,2.496,259,2.946,299,3.48,300,2.78,357,2.253,363,2.059,378,2.946,401,2.78,408,3.172,473,3.768,474,3.768,475,3.768,476,2.946,477,3.768,478,3.172]],["title/classes/Stat.html",[0,0.042,103,1.674]],["body/classes/Stat.html",[0,0.038,2,1.419,3,0.273,4,0.24,5,0.24,8,0.341,9,1.836,10,3.642,13,0.791,14,0.028,15,2.259,16,1.825,19,0.87,21,1.866,26,0.476,33,1.583,35,0.476,36,3.604,37,2.578,39,0.018,40,0.018,76,0.85,96,1.617,98,2.259,101,2.319,102,2.578,103,2.478,121,1.313,184,1.313,252,3.528,253,1.836,254,2.021,257,2.021,300,2.259,353,3.604,354,4.735,355,4.5,359,2.578,362,3.604,363,1.673,476,1.831,479,1.831,480,3.062,481,3.062,482,3.062,483,3.062,484,2.578,485,2.578,486,3.604,487,3.604,488,3.604,489,2.259,490,2.578]],["title/controllers/StatsController.html",[41,1.147,491,2.201]],["body/controllers/StatsController.html",[0,0.044,1,3.385,3,0.313,4,0.275,5,0.275,8,0.392,13,0.477,14,0.028,16,1.739,19,0.828,26,0.525,28,1.397,35,0.313,39,0.019,40,0.019,41,1.208,43,1.299,45,1.304,48,1.304,49,0.671,52,2.1,53,1.397,54,1.617,160,1.124,161,0.842,162,1.124,173,1.871,263,2.318,268,3.499,272,2.318,273,2.318,274,2.178,279,2.318,280,2.318,491,3.103,492,2.957,493,3.512,494,3.958,495,4.766,496,2.957,497,3.512,498,3.512,499,2.957,500,2.957,501,2.957,502,2.896,503,2.957,504,3.512,505,3.512,506,3.512,507,3.512,508,3.512]],["title/modules/StatsModule.html",[56,1.147,65,1.994]],["body/modules/StatsModule.html",[0,0.046,3,0.325,4,0.286,5,0.286,14,0.028,26,0.547,34,2.697,35,0.325,39,0.02,40,0.02,43,1.786,49,0.698,56,1.661,58,1.568,59,2.237,65,3.674,67,2.638,68,1.997,69,1.997,71,2.888,72,1.997,75,1.997,76,1.014,96,1.014,97,2.237,103,1.835,161,1.158,253,2.071,299,2.888,357,2.186,363,1.997,476,2.888,478,3.078,491,3.569,502,3.356,503,3.078,509,3.078,510,3.078,511,3.656,512,3.656]],["title/injectables/StatsService.html",[147,0.861,502,1.822]],["body/injectables/StatsService.html",[0,0.037,1,3.166,3,0.267,4,0.235,5,0.235,8,0.334,10,2.211,13,0.573,14,0.028,19,0.86,26,0.515,33,1.108,34,2.211,35,0.267,39,0.017,40,0.017,45,1.17,48,1.17,49,0.572,53,1.678,54,1.031,76,0.831,96,1.548,98,2.211,101,1.678,103,2.117,111,2.211,125,2.449,137,3.55,147,1.088,148,1.388,156,2.304,160,1.35,161,1.012,162,1.35,173,1.193,184,1.285,190,2.211,191,1.792,194,2.521,211,1.792,306,3.924,312,1.978,314,2.521,436,1.792,440,2.211,489,2.211,494,3.55,495,4.457,496,3.55,500,2.523,501,2.523,502,2.304,513,2.523,514,2.997,515,4.878,516,2.997,517,2.997,518,2.997,519,4.216,520,2.997,521,2.997,522,2.997,523,2.997,524,2.523,525,2.523,526,2.997,527,2.523,528,2.997,529,2.997,530,2.997]],["title/injectables/TransformInterceptor.html",[147,0.861,274,1.545]],["body/injectables/TransformInterceptor.html",[0,0.047,3,0.333,4,0.293,5,0.293,8,0.417,13,0.508,14,0.028,19,0.659,26,0.436,35,0.436,39,0.02,40,0.02,45,1.36,48,1.037,49,0.714,54,1.286,121,1.604,147,1.265,148,1.732,160,1.197,161,0.897,162,1.197,167,2.043,168,4.034,173,1.95,182,2.759,220,1.604,231,2.236,274,2.271,318,2.759,319,4.127,320,3.148,321,4.886,322,4.886,323,4.127,324,3.148,325,4.603,326,2.759,327,4.603,328,4.127,329,3.148,531,3.739,532,3.739]],["title/classes/UpdateUserDto.html",[0,0.042,533,2.201]],["body/classes/UpdateUserDto.html",[0,0.058,2,2.171,3,0.417,4,0.367,5,0.367,14,0.027,26,0.503,28,1.865,35,0.417,39,0.023,40,0.023,208,2.353,210,3.093,315,2.802,533,3.729,534,3.945,535,4.686,536,3.458,537,4.686,538,4.686]],["title/classes/User.html",[0,0.042,96,0.925]],["body/classes/User.html",[0,0.059,2,1.633,3,0.314,4,0.276,5,0.276,8,0.393,9,2.021,13,0.77,14,0.028,16,1.743,19,0.936,21,1.947,26,0.473,31,3.175,32,1.925,33,1.303,35,0.473,39,0.019,40,0.019,76,0.978,96,1.473,97,1.633,121,2.534,161,1.274,184,1.512,211,3.175,252,3.505,253,2.021,254,2.326,255,3.968,257,2.326,258,3.477,436,2.108,539,2.326,540,5.31,541,3.524,542,4.713,543,3.524,544,3.524,545,2.967]],["title/controllers/UsersController.html",[41,1.147,546,2.201]],["body/controllers/UsersController.html",[0,0.031,3,0.221,4,0.195,5,0.195,8,0.277,13,0.596,14,0.028,16,1.795,19,0.855,21,1.406,26,0.5,28,0.99,35,0.221,39,0.015,40,0.015,41,0.856,43,0.92,45,1.023,48,1.347,49,0.475,53,1.467,54,1.67,96,0.69,121,1.581,125,2.726,156,1.359,158,2.034,160,1.406,161,1.053,162,1.406,165,4.146,166,3.103,167,3.07,172,1.835,173,0.99,180,1.642,183,1.642,184,1.067,185,2.094,194,2.626,208,2.726,217,2.014,263,1.642,268,1.642,272,2.433,273,1.642,274,1.708,279,1.642,280,1.642,310,2.72,314,2.204,315,2.626,388,2.204,395,2.094,499,2.094,536,1.835,546,2.433,547,2.094,548,4.088,549,3.103,550,3.103,551,2.488,552,3.686,553,2.488,554,2.488,555,2.094,556,3.686,557,2.488,558,2.488,559,3.686,560,2.488,561,2.094,562,2.094,563,2.488,564,2.488,565,2.488,566,2.488,567,2.488,568,2.488,569,2.488,570,2.488,571,2.488,572,2.488,573,3.686,574,2.488,575,2.488,576,2.488,577,2.488,578,2.488,579,2.488]],["title/modules/UsersModule.html",[56,1.147,66,1.674]],["body/modules/UsersModule.html",[0,0.037,3,0.268,4,0.235,5,0.235,13,0.408,14,0.028,19,0.53,26,0.541,35,0.268,39,0.017,40,0.017,43,1.563,45,0.834,48,0.834,49,0.574,56,1.454,58,1.289,59,1.958,64,3.165,66,3.1,67,2.309,68,1.642,69,1.642,71,2.527,72,2.309,75,1.642,76,0.834,77,3.558,79,1.984,89,2.531,96,0.834,97,1.958,153,1.642,158,2.958,160,0.962,161,1.014,162,0.962,253,1.289,290,2.218,291,3.118,292,3.911,294,3.118,295,2.218,297,2.218,299,1.798,363,1.642,401,3.118,403,2.531,546,3.226,561,2.531,580,2.531,581,2.531,582,3.006,583,2.531,584,3.006,585,3.006,586,3.006,587,3.006,588,2.531,589,3.006,590,3.006,591,3.006,592,3.006,593,3.006,594,3.006,595,3.006]],["title/injectables/UsersService.html",[147,0.861,158,1.545]],["body/injectables/UsersService.html",[0,0.02,3,0.144,4,0.127,5,0.127,8,0.18,13,0.452,14,0.028,19,0.8,21,1.067,26,0.444,33,0.597,35,0.144,39,0.011,40,0.011,45,0.73,48,1.472,49,0.308,53,1.048,54,1.561,76,0.448,78,3.235,79,1.066,96,1.587,114,2.216,125,2.591,134,1.942,147,0.679,148,0.748,156,1.438,158,1.22,160,1.532,161,1.089,162,1.355,171,2.614,173,1.985,183,2.536,184,1.946,190,1.192,191,0.966,193,1.574,194,1.992,206,2.805,208,2.278,211,1.574,217,2.967,218,1.942,221,0.966,222,4.45,306,2.536,312,1.066,314,1.574,315,0.966,351,1.192,372,1.192,373,1.066,412,2.216,424,3.82,436,0.966,438,1.36,440,1.192,524,2.216,525,1.36,527,1.36,533,1.066,536,1.942,548,3.235,549,2.805,550,2.216,555,2.216,562,1.36,588,1.36,596,1.36,597,5.54,598,4.785,599,2.632,600,2.632,601,3.332,602,2.632,603,2.632,604,1.615,605,3.332,606,1.615,607,1.615,608,1.615,609,2.632,610,1.615,611,4.231,612,2.632,613,2.632,614,2.632,615,1.615,616,2.632,617,2.632,618,2.632,619,2.632,620,2.632,621,2.632,622,2.216,623,2.216,624,2.632,625,1.615,626,3.842,627,2.632,628,1.615,629,1.36,630,1.36,631,1.615,632,1.615,633,2.632,634,1.615,635,2.632,636,1.615,637,1.615,638,1.615,639,1.615,640,1.615,641,1.615,642,1.615,643,1.615,644,1.615,645,2.632,646,1.615,647,1.615,648,2.632,649,1.615,650,1.615,651,2.632]],["title/coverage.html",[652,3.35]],["body/coverage.html",[0,0.072,1,1.623,5,0.213,6,2.286,7,2.286,13,0.369,14,0.028,39,0.016,40,0.016,41,1.848,42,1.792,44,2.286,50,1.483,96,0.753,97,1.258,101,1.08,103,1.363,106,1.258,147,1.491,149,2.286,153,1.483,154,2.286,158,1.258,167,1.483,176,2.286,191,1.623,208,1.363,209,2.899,210,3.048,220,1.981,221,1.623,223,1.792,225,2.286,226,2.286,233,2.594,259,1.623,261,1.792,262,2.286,274,1.258,277,1.483,302,2.286,318,2.899,330,2.594,343,4.927,378,1.623,380,1.792,381,2.286,388,1.363,410,2.286,476,1.623,479,2.35,491,1.792,492,2.286,502,1.483,513,2.286,533,1.792,534,2.286,539,2.594,546,1.792,547,2.286,596,2.286,652,2.003,653,2.715,654,2.715,655,2.715,656,5.062,657,5.371,658,5.775,659,3.929,660,5.062,661,5.6,662,2.286,663,2.286,664,2.715,665,2.715,666,2.715,667,2.715,668,2.715,669,2.715,670,2.715]],["title/dependencies.html",[59,1.857,671,2.79]],["body/dependencies.html",[0,0.06,14,0.028,28,1.439,32,1.975,33,1.337,39,0.02,40,0.02,49,0.69,59,1.675,76,1.003,79,2.386,86,3.044,87,3.044,90,3.044,93,3.044,95,3.044,180,3.78,203,3.044,326,2.667,433,3.044,435,3.044,629,3.044,672,3.615,673,3.615,674,3.615,675,3.615,676,5.378,677,3.615,678,3.615,679,3.615,680,3.615,681,3.615,682,3.615,683,3.615,684,3.615,685,3.615,686,3.615,687,3.615,688,3.615,689,3.615,690,3.615,691,3.615,692,3.615,693,3.615,694,3.615,695,3.615,696,3.615,697,3.615,698,3.615,699,3.615,700,3.615,701,3.615,702,3.615,703,3.615,704,3.615,705,3.615,706,3.615,707,3.615]],["title/miscellaneous/enumerations.html",[708,1.293,709,3.374]],["body/miscellaneous/enumerations.html",[8,0.525,14,0.027,15,4.18,39,0.023,40,0.023,479,2.816,484,3.964,485,3.964,486,4.77,487,4.77,488,4.77,708,2.182,709,3.964,710,3.474,711,5.31]],["title/miscellaneous/functions.html",[708,1.293,712,3.374]],["body/miscellaneous/functions.html",[8,0.566,14,0.024,39,0.024,40,0.024,662,4.272,663,5.28,708,2.351,712,4.272,713,5.074]],["title/index.html",[8,0.311,714,2.79,715,2.79]],["body/index.html",[4,0.277,14,0.027,39,0.019,40,0.019,88,2.978,115,4.479,171,1.932,622,2.978,623,2.978,652,2.61,716,3.537,717,3.537,718,4.724,719,3.537,720,3.537,721,3.537,722,3.537,723,3.537,724,3.537,725,3.537,726,3.537,727,6.214,728,3.537,729,3.537,730,3.537,731,6.086,732,3.537,733,3.537,734,4.724,735,3.537,736,3.537,737,3.537,738,3.537,739,4.724,740,4.724,741,3.537,742,3.537,743,3.537,744,4.724,745,4.724,746,3.537,747,3.537,748,3.537,749,3.537,750,3.537,751,2.978,752,3.537,753,3.537,754,3.537,755,3.537,756,3.537,757,3.537,758,3.537,759,3.537,760,3.537,761,3.537,762,3.537,763,3.537,764,3.537,765,3.537,766,3.537,767,3.537,768,3.537]],["title/modules.html",[58,1.947]],["body/modules.html",[14,0.023,39,0.023,40,0.023,57,3.007,58,1.954,63,2.724,64,2.489,65,2.724,66,2.287,99,3.007,751,5.383,769,6.393,770,6.393,771,6.503,772,4.555,773,4.555]],["title/overview.html",[774,3.822]],["body/overview.html",[2,1.56,14,0.027,39,0.019,40,0.019,43,1.245,50,2.834,57,4.296,58,1.444,59,2.117,60,2.835,61,2.835,62,2.835,63,3.669,64,3.352,65,3.479,66,3.177,67,2.497,68,1.839,69,1.839,148,1.56,158,2.843,224,2.223,277,2.834,286,2.835,288,2.835,373,2.223,388,3.081,396,2.835,397,2.835,398,2.835,502,2.834,509,2.835,510,2.835,580,2.835,581,2.835,583,2.835,630,2.835,774,2.835,775,3.367,776,4.57]],["title/miscellaneous/typealiases.html",[708,1.293,777,4.007]],["body/miscellaneous/typealiases.html",[8,0.533,13,0.649,14,0.023,39,0.023,40,0.023,233,3.153,256,4.217,330,3.153,358,4.217,436,3.418,479,2.857,489,4.217,539,3.153,708,2.213,710,3.525,778,4.777,779,4.022,780,4.022,781,4.022]],["title/miscellaneous/variables.html",[708,1.293,782,3.374]],["body/miscellaneous/variables.html",[8,0.496,14,0.027,39,0.022,40,0.022,97,2.537,233,2.939,259,3.274,260,3.748,330,2.939,366,5.209,378,3.274,379,3.748,476,3.274,479,2.662,490,3.748,539,2.939,545,3.748,708,2.063,710,3.285,711,5.209,779,3.748,780,3.748,781,3.748,782,3.748]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":343,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":351,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["1.1.0",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["1.17.2",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["1/7",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":466,"title":{},"body":{"injectables/RewardsService.html":{}}}],["2",{"_index":372,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["2.0.0",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":464,"title":{},"body":{"injectables/RewardsService.html":{}}}],["28",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":373,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["3.0.1",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["3.1.30",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":468,"title":{},"body":{"injectables/RewardsService.html":{}}}],["4",{"_index":438,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["4.0.1",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["5.1.5",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["5.3.3",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":775,"title":{},"body":{"overview.html":{}}}],["6.0.13",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":776,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":540,"title":{},"body":{"classes/User.html":{}}}],["accesstoken",{"_index":185,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{}}}],["accordingly",{"_index":451,"title":{},"body":{"injectables/RewardsService.html":{}}}],["additem",{"_index":265,"title":{},"body":{"controllers/ItemsController.html":{}}}],["additem(@body",{"_index":283,"title":{},"body":{"controllers/ItemsController.html":{}}}],["additem(itemdata",{"_index":267,"title":{},"body":{"controllers/ItemsController.html":{}}}],["addstat",{"_index":494,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["addstat(@body",{"_index":506,"title":{},"body":{"controllers/StatsController.html":{}}}],["addstat(data",{"_index":496,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["addstatdto",{"_index":1,"title":{"classes/AddStatDto.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["admin",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["adminjs",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["adminjs.registeradapter(adminjsmongoose",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["adminjs/express",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["adminjs/mongoose",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["adminjs/nestjs",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["adminjsmongoose",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["adminjsoptions",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["adminmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["adminmodule.createadminasync",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allitems",{"_index":266,"title":{},"body":{"controllers/ItemsController.html":{}}}],["allot",{"_index":452,"title":{},"body":{"injectables/RewardsService.html":{}}}],["already",{"_index":455,"title":{},"body":{"injectables/RewardsService.html":{}}}],["amazing",{"_index":752,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":27,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["apiproperty()@isnotempty",{"_index":24,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@ismongoid",{"_index":22,"title":{},"body":{"classes/AddStatDto.html":{}}}],["apiproperty()@isnotempty()@prop({required",{"_index":240,"title":{},"body":{"classes/Item.html":{}}}],["apiproperty()@prop",{"_index":244,"title":{},"body":{"classes/Item.html":{}}}],["apiproperty({enum",{"_index":17,"title":{},"body":{"classes/AddStatDto.html":{}}}],["apiresponse",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["apitags",{"_index":279,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["apitags('items",{"_index":282,"title":{},"body":{"controllers/ItemsController.html":{}}}],["apitags('rewards",{"_index":391,"title":{},"body":{"controllers/RewardsController.html":{}}}],["apitags('stats",{"_index":504,"title":{},"body":{"controllers/StatsController.html":{}}}],["apitags('users",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":729,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":42,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":722,"title":{},"body":{"index.html":{}}}],["applied",{"_index":365,"title":{},"body":{"classes/Reward.html":{}}}],["apply(authmiddleware",{"_index":590,"title":{},"body":{"modules/UsersModule.html":{}}}],["appmodule",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["appservice",{"_index":50,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigned",{"_index":364,"title":{},"body":{"classes/Reward.html":{}}}],["async",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["authmiddleware",{"_index":153,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["author",{"_index":761,"title":{},"body":{"index.html":{}}}],["available",{"_index":773,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":405,"title":{},"body":{"modules/RewardsModule.html":{}}}],["await",{"_index":194,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":753,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":519,"title":{},"body":{"injectables/StatsService.html":{}}}],["belongs",{"_index":377,"title":{},"body":{"classes/Reward.html":{}}}],["body",{"_index":272,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":231,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"injectables/TransformInterceptor.html":{}}}],["bootstrap",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":460,"title":{},"body":{"injectables/RewardsService.html":{}}}],["browse",{"_index":771,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":769,"title":{},"body":{"modules.html":{}}}],["building",{"_index":719,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":321,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["catch",{"_index":204,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["check",{"_index":450,"title":{},"body":{"injectables/RewardsService.html":{}}}],["checkandissuerewards",{"_index":414,"title":{},"body":{"injectables/RewardsService.html":{}}}],["checkandissuerewards(userid",{"_index":422,"title":{},"body":{"injectables/RewardsService.html":{}}}],["circular",{"_index":406,"title":{},"body":{"modules/RewardsModule.html":{}}}],["class",{"_index":0,"title":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/Reward.html":{}}}],["clientid",{"_index":186,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["clientidcookie",{"_index":187,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["cluster_appmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_itemsmodule",{"_index":286,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_itemsmodule_imports",{"_index":287,"title":{},"body":{"modules/ItemsModule.html":{}}}],["cluster_itemsmodule_providers",{"_index":288,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_rewardsmodule",{"_index":396,"title":{},"body":{"modules/RewardsModule.html":{},"overview.html":{}}}],["cluster_rewardsmodule_exports",{"_index":398,"title":{},"body":{"modules/RewardsModule.html":{},"overview.html":{}}}],["cluster_rewardsmodule_providers",{"_index":397,"title":{},"body":{"modules/RewardsModule.html":{},"overview.html":{}}}],["cluster_statsmodule",{"_index":509,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_statsmodule_providers",{"_index":510,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":580,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":581,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":582,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":583,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":331,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["coming",{"_index":199,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["config",{"_index":605,"title":{},"body":{"injectables/UsersService.html":{}}}],["config/configuration",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["configservice.get('mongo_uri",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":290,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":291,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["console.log(adminjsmongoose",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(e",{"_index":207,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["const",{"_index":184,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Item.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(itemmodel",{"_index":305,"title":{},"body":{"injectables/ItemsService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{}}}],["constructor(rewardmodel",{"_index":419,"title":{},"body":{"injectables/RewardsService.html":{}}}],["constructor(statsmodel",{"_index":514,"title":{},"body":{"injectables/StatsService.html":{}}}],["constructor(usermodel",{"_index":604,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":157,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["consumer",{"_index":294,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(itemscontroller",{"_index":301,"title":{},"body":{"modules/ItemsModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(rewardscontroller",{"_index":409,"title":{},"body":{"modules/RewardsModule.html":{}}}],["context",{"_index":328,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":41,"title":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('items",{"_index":281,"title":{},"body":{"controllers/ItemsController.html":{}}}],["controller('rewards",{"_index":390,"title":{},"body":{"controllers/RewardsController.html":{}}}],["controller('stats",{"_index":505,"title":{},"body":{"controllers/StatsController.html":{}}}],["controller('user",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":203,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["cookies",{"_index":621,"title":{},"body":{"injectables/UsersService.html":{}}}],["coverage",{"_index":652,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":315,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(createuserdto",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{}}}],["createitem",{"_index":303,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createitem(data",{"_index":308,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createreward",{"_index":415,"title":{},"body":{"injectables/RewardsService.html":{}}}],["createreward(userid",{"_index":425,"title":{},"body":{"injectables/RewardsService.html":{}}}],["createuserdto",{"_index":208,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.clientid",{"_index":576,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto.phonenumber",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.username",{"_index":640,"title":{},"body":{"injectables/UsersService.html":{}}}],["curent",{"_index":175,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["current",{"_index":174,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["currenttier",{"_index":227,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"injectables/RewardsService.html":{}}}],["customalphabet",{"_index":434,"title":{},"body":{"injectables/RewardsService.html":{}}}],["customalphabet('123456789",{"_index":444,"title":{},"body":{"injectables/RewardsService.html":{}}}],["customalphabet('abcdefghijklmnopqr",{"_index":442,"title":{},"body":{"injectables/RewardsService.html":{}}}],["data",{"_index":173,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["data.event",{"_index":529,"title":{},"body":{"injectables/StatsService.html":{}}}],["data.itemid",{"_index":528,"title":{},"body":{"injectables/StatsService.html":{}}}],["data.token",{"_index":573,"title":{},"body":{"controllers/UsersController.html":{}}}],["data.userphonenumber",{"_index":523,"title":{},"body":{"injectables/StatsService.html":{}}}],["database",{"_index":525,"title":{},"body":{"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":345,"title":{},"body":{"classes/Reward.html":{}}}],["date(moment().add(2",{"_index":447,"title":{},"body":{"injectables/RewardsService.html":{}}}],["date(moment().toisostring",{"_index":472,"title":{},"body":{"injectables/RewardsService.html":{}}}],["decoded",{"_index":649,"title":{},"body":{"injectables/UsersService.html":{}}}],["decoded.id",{"_index":651,"title":{},"body":{"injectables/UsersService.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":366,"title":{},"body":{"classes/Reward.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":387,"title":{},"body":{"controllers/RewardsController.html":{}}}],["denotes",{"_index":374,"title":{},"body":{"classes/Reward.html":{}}}],["dep",{"_index":407,"title":{},"body":{"modules/RewardsModule.html":{}}}],["dependencies",{"_index":59,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":171,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Item.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["dev.env",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["development",{"_index":730,"title":{},"body":{"index.html":{}}}],["different",{"_index":375,"title":{},"body":{"classes/Reward.html":{}}}],["discountpercentage",{"_index":332,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["document",{"_index":255,"title":{},"body":{"classes/Item.html":{},"classes/User.html":{}}}],["documentation",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["dto/add",{"_index":500,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["dto/create",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":628,"title":{},"body":{"injectables/UsersService.html":{}}}],["e",{"_index":205,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["e2e",{"_index":741,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":720,"title":{},"body":{"index.html":{}}}],["entities/existing",{"_index":437,"title":{},"body":{"injectables/RewardsService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{}}}],["enumerations",{"_index":709,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envfilepath",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":524,"title":{},"body":{"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["event",{"_index":10,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{}}}],["exclude",{"_index":591,"title":{},"body":{"modules/UsersModule.html":{}}}],["executioncontext",{"_index":322,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["existing",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["existinguser",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["existinguser._id.tostring",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["expired",{"_index":368,"title":{},"body":{"classes/Reward.html":{}}}],["expires",{"_index":333,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["expiresin",{"_index":646,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":401,"title":{},"body":{"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":180,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":537,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false",{"_index":347,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["fetch",{"_index":412,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":548,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallitems",{"_index":304,"title":{},"body":{"injectables/ItemsService.html":{}}}],["findone",{"_index":549,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":578,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["formidable",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["forroutes(userscontroller",{"_index":595,"title":{},"body":{"modules/UsersModule.html":{}}}],["forwardref",{"_index":403,"title":{},"body":{"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/StatsService.html":{}}}],["framework",{"_index":718,"title":{},"body":{"index.html":{}}}],["function",{"_index":176,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":712,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":599,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatecode",{"_index":416,"title":{},"body":{"injectables/RewardsService.html":{}}}],["generated",{"_index":613,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatetoken",{"_index":602,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatetoken(id",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{}}}],["generation",{"_index":612,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(':id",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('profile",{"_index":559,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user",{"_index":384,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallrewards",{"_index":382,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallrewards(@req",{"_index":392,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallrewards(request",{"_index":383,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallstats",{"_index":495,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["gethello",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmodeltoken",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(item.name",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(reward.name",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(stat.name",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(user.name",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["getrewardsforuser",{"_index":417,"title":{},"body":{"injectables/RewardsService.html":{}}}],["getrewardsforuser(userid",{"_index":429,"title":{},"body":{"injectables/RewardsService.html":{}}}],["getting",{"_index":714,"title":{"index.html":{}},"body":{}}],["given",{"_index":469,"title":{},"body":{"injectables/RewardsService.html":{}}}],["graph",{"_index":772,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":748,"title":{},"body":{"index.html":{}}}],["handle",{"_index":400,"title":{},"body":{"modules/RewardsModule.html":{}}}],["happened",{"_index":370,"title":{},"body":{"classes/Reward.html":{}}}],["header",{"_index":200,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["hello",{"_index":151,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":758,"title":{},"body":{"index.html":{}}}],["httponly",{"_index":574,"title":{},"body":{"controllers/UsersController.html":{}}}],["https://nestjs.com",{"_index":765,"title":{},"body":{"index.html":{}}}],["id",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/RewardsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["iexistingrewardsforuser",{"_index":223,"title":{"interfaces/IExistingRewardsForUser.html":{}},"body":{"interfaces/IExistingRewardsForUser.html":{},"injectables/RewardsService.html":{},"coverage.html":{}}}],["imageurl",{"_index":234,"title":{},"body":{"classes/Item.html":{}}}],["imateapotexception",{"_index":520,"title":{},"body":{"injectables/StatsService.html":{}}}],["implement",{"_index":617,"title":{},"body":{"injectables/UsersService.html":{}}}],["implements",{"_index":182,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":147,"title":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":312,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(item.name",{"_index":313,"title":{},"body":{"injectables/ItemsService.html":{}}}],["injectmodel(reward.name",{"_index":439,"title":{},"body":{"injectables/RewardsService.html":{}}}],["injectmodel(stat.name",{"_index":521,"title":{},"body":{"injectables/StatsService.html":{}}}],["injectmodel(user.name",{"_index":440,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":726,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":728,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":327,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":531,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interceptors/transform.interceptor",{"_index":499,"title":{},"body":{"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["interface",{"_index":220,"title":{"interfaces/IExistingRewardsForUser.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":224,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":206,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{}}}],["isenum",{"_index":29,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isenum(statevents",{"_index":38,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isexpired",{"_index":334,"title":{},"body":{"classes/Reward.html":{}}}],["isglobal",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":30,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isnonveg",{"_index":235,"title":{},"body":{"classes/Item.html":{}}}],["isnotempty",{"_index":31,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/User.html":{}}}],["isnotempty()@prop({required",{"_index":542,"title":{},"body":{"classes/User.html":{}}}],["isredeemed",{"_index":335,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["item",{"_index":101,"title":{"classes/Item.html":{}},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["item.name",{"_index":300,"title":{},"body":{"modules/ItemsModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{}}}],["itemdata",{"_index":270,"title":{},"body":{"controllers/ItemsController.html":{}}}],["itemdocument",{"_index":256,"title":{},"body":{"classes/Item.html":{},"injectables/ItemsService.html":{},"miscellaneous/typealiases.html":{}}}],["itemid",{"_index":11,"title":{},"body":{"classes/AddStatDto.html":{}}}],["itemmodel",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/ItemsService.html":{}}}],["items",{"_index":264,"title":{},"body":{"controllers/ItemsController.html":{}}}],["items.controller",{"_index":296,"title":{},"body":{"modules/ItemsModule.html":{}}}],["items.service",{"_index":278,"title":{},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{}}}],["items/items.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["items/schemas/item.schema",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/Stat.html":{}}}],["itemschema",{"_index":259,"title":{},"body":{"classes/Item.html":{},"modules/ItemsModule.html":{},"modules/SchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["itemscontroller",{"_index":261,"title":{"controllers/ItemsController.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"coverage.html":{}}}],["itemsmodule",{"_index":63,"title":{"modules/ItemsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules.html":{},"overview.html":{}}}],["itemsservice",{"_index":277,"title":{"injectables/ItemsService.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"coverage.html":{},"overview.html":{}}}],["join",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["jsonwebtoken",{"_index":629,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["jwt",{"_index":611,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwt.sign",{"_index":644,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwt.verify(token",{"_index":650,"title":{},"body":{"injectables/UsersService.html":{}}}],["kamil",{"_index":762,"title":{},"body":{"index.html":{}}}],["latest",{"_index":456,"title":{},"body":{"injectables/RewardsService.html":{}}}],["latesttier",{"_index":458,"title":{},"body":{"injectables/RewardsService.html":{}}}],["lean",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["license",{"_index":768,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":745,"title":{},"body":{"index.html":{}}}],["load",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":598,"title":{},"body":{"injectables/UsersService.html":{}}}],["login(createuserdto",{"_index":614,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserresponsedto",{"_index":221,"title":{"interfaces/LoginUserResponseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["maincategory",{"_index":236,"title":{},"body":{"classes/Item.html":{}}}],["map",{"_index":324,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["mark",{"_index":470,"title":{},"body":{"injectables/RewardsService.html":{}}}],["matching",{"_index":40,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":593,"title":{},"body":{"modules/UsersModule.html":{}}}],["methods",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":292,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["miscellaneous",{"_index":708,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":744,"title":{},"body":{"index.html":{}}}],["mode",{"_index":734,"title":{},"body":{"index.html":{}}}],["model",{"_index":306,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["modelurl",{"_index":237,"title":{},"body":{"classes/Item.html":{}}}],["module",{"_index":56,"title":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":433,"title":{},"body":{"injectables/RewardsService.html":{},"dependencies.html":{}}}],["mongoose",{"_index":33,"title":{},"body":{"classes/AddStatDto.html":{},"modules/AppModule.html":{},"classes/Item.html":{},"injectables/ItemsService.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":359,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["mongoose.model",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose.schema.types.objectid",{"_index":362,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["mongoosemodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":299,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["month').toisostring",{"_index":448,"title":{},"body":{"injectables/RewardsService.html":{}}}],["more",{"_index":757,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":763,"title":{},"body":{"index.html":{}}}],["name",{"_index":161,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nanoid",{"_index":435,"title":{},"body":{"injectables/RewardsService.html":{},"dependencies.html":{}}}],["nanoid1",{"_index":441,"title":{},"body":{"injectables/RewardsService.html":{}}}],["nanoid2",{"_index":443,"title":{},"body":{"injectables/RewardsService.html":{}}}],["nest",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":767,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":323,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"interfaces/LoginUserResponseDto.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":178,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["new",{"_index":191,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newlyalloted",{"_index":228,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"injectables/RewardsService.html":{}}}],["next",{"_index":168,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":329,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nextfunction",{"_index":169,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":717,"title":{},"body":{"index.html":{}}}],["npm",{"_index":727,"title":{},"body":{"index.html":{}}}],["number",{"_index":230,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["object",{"_index":619,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.values(statevents",{"_index":37,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{}}}],["observable",{"_index":325,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ones",{"_index":453,"title":{},"body":{"injectables/RewardsService.html":{}}}],["open",{"_index":746,"title":{},"body":{"index.html":{}}}],["optional",{"_index":162,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["otherwise",{"_index":202,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["otp",{"_index":618,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":774,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":671,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":183,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":535,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":538,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passthrough",{"_index":570,"title":{},"body":{"controllers/UsersController.html":{}}}],["passthrought",{"_index":177,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["patch",{"_index":386,"title":{},"body":{"controllers/RewardsController.html":{}}}],["path",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["percentage",{"_index":426,"title":{},"body":{"injectables/RewardsService.html":{}}}],["phonenumber",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["please",{"_index":755,"title":{},"body":{"index.html":{}}}],["post",{"_index":268,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":263,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":314,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prod.env",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":736,"title":{},"body":{"index.html":{}}}],["profile",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profile(@req",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{}}}],["profile(request",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{}}}],["progressive",{"_index":716,"title":{},"body":{"index.html":{}}}],["project",{"_index":747,"title":{},"body":{"index.html":{}}}],["promise",{"_index":424,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":252,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["prop({default",{"_index":342,"title":{},"body":{"classes/Reward.html":{}}}],["prop({enum",{"_index":480,"title":{},"body":{"classes/Stat.html":{}}}],["prop({required",{"_index":338,"title":{},"body":{"classes/Reward.html":{}}}],["prop({requried",{"_index":340,"title":{},"body":{"classes/Reward.html":{}}}],["prop({type",{"_index":353,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["providers",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["rate",{"_index":238,"title":{},"body":{"classes/Item.html":{}}}],["read",{"_index":756,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["redeem",{"_index":411,"title":{},"body":{"injectables/RewardsService.html":{}}}],["redeemcode",{"_index":418,"title":{},"body":{"injectables/RewardsService.html":{}}}],["redeemcode(code",{"_index":431,"title":{},"body":{"injectables/RewardsService.html":{}}}],["redeemed",{"_index":371,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["redeemedon",{"_index":336,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["redemption",{"_index":369,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["ref",{"_index":355,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["reflect",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":725,"title":{},"body":{"index.html":{}}}],["req",{"_index":172,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{}}}],["req.clientid",{"_index":198,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.cookies",{"_index":188,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.headers",{"_index":189,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":197,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request",{"_index":165,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{}}}],["request.clientid",{"_index":395,"title":{},"body":{"controllers/RewardsController.html":{},"controllers/UsersController.html":{}}}],["request.user",{"_index":569,"title":{},"body":{"controllers/UsersController.html":{}}}],["request.user._id",{"_index":568,"title":{},"body":{"controllers/UsersController.html":{}}}],["request.user?._id",{"_index":394,"title":{},"body":{"controllers/RewardsController.html":{}}}],["requestmethod",{"_index":586,"title":{},"body":{"modules/UsersModule.html":{}}}],["requestmethod.post",{"_index":594,"title":{},"body":{"modules/UsersModule.html":{}}}],["required",{"_index":258,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/User.html":{}}}],["requried",{"_index":360,"title":{},"body":{"classes/Reward.html":{}}}],["res",{"_index":166,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{}}}],["res.cookie('clientid",{"_index":201,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcewithoptions",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":167,"title":{"interfaces/Response.html":{}},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["response.cookie('accesstoken",{"_index":572,"title":{},"body":{"controllers/UsersController.html":{}}}],["response.cookie('clientid",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{}}}],["results",{"_index":39,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"controllers/RewardsController.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["reward",{"_index":106,"title":{"classes/Reward.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"coverage.html":{}}}],["reward.isredeemed",{"_index":459,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward.name",{"_index":408,"title":{},"body":{"modules/RewardsModule.html":{},"modules/SchemaModule.html":{}}}],["reward.tier",{"_index":461,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward1",{"_index":462,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward2",{"_index":465,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward3",{"_index":467,"title":{},"body":{"injectables/RewardsService.html":{}}}],["rewarddocument",{"_index":358,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"miscellaneous/typealiases.html":{}}}],["rewardmodel",{"_index":421,"title":{},"body":{"injectables/RewardsService.html":{}}}],["rewards",{"_index":229,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{}}}],["rewards.controller",{"_index":404,"title":{},"body":{"modules/RewardsModule.html":{}}}],["rewards.length",{"_index":457,"title":{},"body":{"injectables/RewardsService.html":{}}}],["rewards.service",{"_index":389,"title":{},"body":{"controllers/RewardsController.html":{},"modules/RewardsModule.html":{}}}],["rewards.ts",{"_index":226,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"coverage.html":{}}}],["rewards/rewards.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["rewards/schemas/reward.schema",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["rewardschema",{"_index":378,"title":{},"body":{"classes/Reward.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rewardscontroller",{"_index":380,"title":{"controllers/RewardsController.html":{}},"body":{"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"coverage.html":{}}}],["rewardsmodel",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["rewardsmodule",{"_index":64,"title":{"modules/RewardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rewardsservice",{"_index":388,"title":{"injectables/RewardsService.html":{}},"body":{"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["rimraf",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":731,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":326,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["scalable",{"_index":721,"title":{},"body":{"index.html":{}}}],["schema",{"_index":253,"title":{},"body":{"classes/Item.html":{},"modules/ItemsModule.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/schema.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["schemafactory",{"_index":254,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(item",{"_index":260,"title":{},"body":{"classes/Item.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(reward",{"_index":379,"title":{},"body":{"classes/Reward.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stat",{"_index":490,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":545,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemamodule",{"_index":99,"title":{"modules/SchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchemaModule.html":{},"modules.html":{}}}],["schemas/item.schema",{"_index":276,"title":{},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{}}}],["schemas/reward.schema",{"_index":232,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{}}}],["schemas/stat.schema",{"_index":34,"title":{},"body":{"classes/AddStatDto.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["schemas/user.schema",{"_index":588,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":648,"title":{},"body":{"injectables/UsersService.html":{}}}],["send",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":622,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["servestaticmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["shall",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["shown",{"_index":361,"title":{},"body":{"classes/Reward.html":{}}}],["side",{"_index":623,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["smartly",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":750,"title":{},"body":{"index.html":{}}}],["src/.../item.schema.ts",{"_index":779,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reward.schema.ts",{"_index":780,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../stat.schema.ts",{"_index":710,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":781,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":149,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":150,"title":{},"body":{"injectables/AppService.html":{}}}],["src/interceptors/transform.interceptor",{"_index":275,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{}}}],["src/interceptors/transform.interceptor.ts",{"_index":318,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/transform.interceptor.ts:18",{"_index":532,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/items/items.controller.ts",{"_index":262,"title":{},"body":{"controllers/ItemsController.html":{},"coverage.html":{}}}],["src/items/items.controller.ts:14",{"_index":269,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.controller.ts:19",{"_index":271,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.module.ts",{"_index":289,"title":{},"body":{"modules/ItemsModule.html":{}}}],["src/items/items.module.ts:19",{"_index":293,"title":{},"body":{"modules/ItemsModule.html":{}}}],["src/items/items.service.ts",{"_index":302,"title":{},"body":{"injectables/ItemsService.html":{},"coverage.html":{}}}],["src/items/items.service.ts:13",{"_index":309,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:17",{"_index":311,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:7",{"_index":307,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/schemas/item.schema",{"_index":474,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/items/schemas/item.schema.ts",{"_index":233,"title":{},"body":{"classes/Item.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/items/schemas/item.schema.ts:15",{"_index":243,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:20",{"_index":249,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:25",{"_index":241,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:30",{"_index":247,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:35",{"_index":251,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:40",{"_index":250,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:45",{"_index":246,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:49",{"_index":245,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:53",{"_index":248,"title":{},"body":{"classes/Item.html":{}}}],["src/main.ts",{"_index":662,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/auth.middleware",{"_index":297,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":154,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:10",{"_index":159,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:19",{"_index":170,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/rewards/entities/existing",{"_index":225,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"coverage.html":{}}}],["src/rewards/rewards.controller.ts",{"_index":381,"title":{},"body":{"controllers/RewardsController.html":{},"coverage.html":{}}}],["src/rewards/rewards.controller.ts:24",{"_index":385,"title":{},"body":{"controllers/RewardsController.html":{}}}],["src/rewards/rewards.module",{"_index":589,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/rewards/rewards.module.ts",{"_index":399,"title":{},"body":{"modules/RewardsModule.html":{}}}],["src/rewards/rewards.module.ts:25",{"_index":402,"title":{},"body":{"modules/RewardsModule.html":{}}}],["src/rewards/rewards.service",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/rewards/rewards.service.ts",{"_index":410,"title":{},"body":{"injectables/RewardsService.html":{},"coverage.html":{}}}],["src/rewards/rewards.service.ts:18",{"_index":420,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:25",{"_index":428,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:31",{"_index":427,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:47",{"_index":430,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:55",{"_index":423,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:87",{"_index":432,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/schemas/reward.schema",{"_index":475,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/rewards/schemas/reward.schema.ts",{"_index":330,"title":{},"body":{"classes/Reward.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/rewards/schemas/reward.schema.ts:12",{"_index":341,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:15",{"_index":356,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:18",{"_index":339,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:21",{"_index":346,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:24",{"_index":348,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:27",{"_index":350,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:30",{"_index":349,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:33",{"_index":352,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:36",{"_index":344,"title":{},"body":{"classes/Reward.html":{}}}],["src/schema/schema.module.ts",{"_index":473,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/stats/dto/add",{"_index":6,"title":{},"body":{"classes/AddStatDto.html":{},"coverage.html":{}}}],["src/stats/schemas/stat.schema",{"_index":477,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/stats/schemas/stat.schema.ts",{"_index":479,"title":{},"body":{"classes/Stat.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stats/schemas/stat.schema.ts:18",{"_index":483,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/schemas/stat.schema.ts:21",{"_index":481,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/schemas/stat.schema.ts:24",{"_index":482,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/stats.controller.ts",{"_index":492,"title":{},"body":{"controllers/StatsController.html":{},"coverage.html":{}}}],["src/stats/stats.controller.ts:14",{"_index":497,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.controller.ts:19",{"_index":498,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.module.ts",{"_index":511,"title":{},"body":{"modules/StatsModule.html":{}}}],["src/stats/stats.service.ts",{"_index":513,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["src/stats/stats.service.ts:13",{"_index":516,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:18",{"_index":517,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:33",{"_index":518,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/users/dto/create",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":534,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":357,"title":{},"body":{"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":539,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":543,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":544,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:9",{"_index":541,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":547,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:28",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:50",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:55",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":298,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{}}}],["src/users/users.module.ts",{"_index":584,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:26",{"_index":585,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":181,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ItemsModule.html":{}}}],["src/users/users.service.ts",{"_index":596,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:18",{"_index":606,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":615,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:58",{"_index":607,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:67",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":610,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:88",{"_index":625,"title":{},"body":{"injectables/UsersService.html":{}}}],["staging.env",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":732,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":735,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":737,"title":{},"body":{"index.html":{}}}],["started",{"_index":715,"title":{"index.html":{}},"body":{}}],["starter",{"_index":724,"title":{},"body":{"index.html":{}}}],["stat",{"_index":103,"title":{"classes/Stat.html":{}},"body":{"modules/AppModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["stat.dto",{"_index":501,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["stat.dto.ts",{"_index":7,"title":{},"body":{"classes/AddStatDto.html":{},"coverage.html":{}}}],["stat.dto.ts:16",{"_index":20,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.dto.ts:21",{"_index":23,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.dto.ts:9",{"_index":25,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.name",{"_index":478,"title":{},"body":{"modules/SchemaModule.html":{},"modules/StatsModule.html":{}}}],["statdocument",{"_index":489,"title":{},"body":{"classes/Stat.html":{},"injectables/StatsService.html":{},"miscellaneous/typealiases.html":{}}}],["statements",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["statevents",{"_index":15,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statistics",{"_index":413,"title":{},"body":{"injectables/RewardsService.html":{}}}],["stats",{"_index":493,"title":{},"body":{"controllers/StatsController.html":{}}}],["stats.controller",{"_index":512,"title":{},"body":{"modules/StatsModule.html":{}}}],["stats.service",{"_index":503,"title":{},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{}}}],["stats/schemas/stat.schema",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["stats/stats.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["statschema",{"_index":476,"title":{},"body":{"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statscontroller",{"_index":491,"title":{"controllers/StatsController.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"coverage.html":{}}}],["statsmodel",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"injectables/StatsService.html":{}}}],["statsmodule",{"_index":65,"title":{"modules/StatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["statsservice",{"_index":502,"title":{"injectables/StatsService.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["stay",{"_index":759,"title":{},"body":{"index.html":{}}}],["store",{"_index":620,"title":{},"body":{"injectables/UsersService.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["subcategory",{"_index":239,"title":{},"body":{"classes/Item.html":{}}}],["success",{"_index":319,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["support",{"_index":751,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":770,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":320,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["tells",{"_index":367,"title":{},"body":{"classes/Reward.html":{}}}],["test",{"_index":740,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":743,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":742,"title":{},"body":{"index.html":{}}}],["tests",{"_index":739,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":749,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["this.config.get('jwt_expiry",{"_index":647,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.config.get('jwt_secret",{"_index":645,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.createreward(userid",{"_index":463,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.generatecode",{"_index":446,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.generatetoken(existinguser._id.tostring",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatetoken(user._id",{"_index":641,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getrewardsforuser(userid",{"_index":454,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.itemmodel.create(data",{"_index":316,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.itemmodel.find",{"_index":317,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.itemsservice.createitem(itemdata",{"_index":284,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.itemsservice.findallitems",{"_index":285,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.rewardmodel.create",{"_index":445,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.rewardmodel.find",{"_index":449,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.rewardmodel.findoneandupdate",{"_index":471,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.rewardsservice.checkandissuerewards",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.rewardsservice.getrewardsforuser",{"_index":393,"title":{},"body":{"controllers/RewardsController.html":{}}}],["this.statsmodel.create",{"_index":526,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsmodel.find().populate('user",{"_index":530,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.addstat(data",{"_index":507,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.statsservice.getallstats",{"_index":508,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.usermodel",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.create",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":642,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":643,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone(userid",{"_index":196,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.userservice.verifytoken(accesstoken",{"_index":195,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.usersmodel.findone",{"_index":522,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.usersservice.findall",{"_index":577,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":579,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.login(createuserdto",{"_index":571,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":190,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["throws",{"_index":627,"title":{},"body":{"injectables/UsersService.html":{}}}],["tier",{"_index":337,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["tiers",{"_index":376,"title":{},"body":{"classes/Reward.html":{}}}],["timestamps",{"_index":257,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["todo",{"_index":616,"title":{},"body":{"injectables/UsersService.html":{}}}],["token",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":760,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["transforminterceptor",{"_index":274,"title":{"injectables/TransformInterceptor.html":{}},"body":{"controllers/ItemsController.html":{},"interfaces/Response.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["true",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["try",{"_index":192,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["twitter",{"_index":766,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddStatDto.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":777,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":723,"title":{},"body":{"index.html":{}}}],["ui",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":179,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":354,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["undefined})@isnotempty()@isenum(statevents",{"_index":18,"title":{},"body":{"classes/AddStatDto.html":{}}}],["unique",{"_index":242,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{}}}],["unit",{"_index":738,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":310,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":533,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uri",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":155,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":164,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["used",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["usefactory",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":273,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(new",{"_index":280,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":96,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":597,"title":{},"body":{"injectables/UsersService.html":{}}}],["user._id",{"_index":527,"title":{},"body":{"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":536,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":363,"title":{},"body":{"classes/Reward.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["user/login",{"_index":592,"title":{},"body":{"modules/UsersModule.html":{}}}],["user_closed_model",{"_index":488,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_closed_view_ar",{"_index":486,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_opened_model",{"_index":487,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_opened_view_ar",{"_index":484,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_openen_view_ar",{"_index":485,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["userdocument",{"_index":436,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":193,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["usermodel",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["userphonenumber",{"_index":12,"title":{},"body":{"classes/AddStatDto.html":{}}}],["users",{"_index":601,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.controller",{"_index":587,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/schemas/user.schema",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{}}}],["users/users.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":546,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":163,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["usersmodel",{"_index":515,"title":{},"body":{"injectables/StatsService.html":{}}}],["usersmodule",{"_index":66,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":158,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/ItemsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":32,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":711,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":782,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":626,"title":{},"body":{"injectables/UsersService.html":{}}}],["verify",{"_index":600,"title":{},"body":{"injectables/UsersService.html":{}}}],["verifytoken",{"_index":603,"title":{},"body":{"injectables/UsersService.html":{}}}],["verifytoken(token",{"_index":624,"title":{},"body":{"injectables/UsersService.html":{}}}],["void",{"_index":295,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["watch",{"_index":733,"title":{},"body":{"index.html":{}}}],["website",{"_index":764,"title":{},"body":{"index.html":{}}}],["whichever",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":152,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":754,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddStatDto.html":{"url":"classes/AddStatDto.html","title":"class - AddStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/dto/add-stat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                itemId\n                            \n                            \n                                userPhoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatEvents\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})@IsNotEmpty()@IsEnum(StatEvents)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport * as mongoose from 'mongoose';\nimport { StatEvents } from '../schemas/stat.schema';\n\nexport class AddStatDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  userPhoneNumber: string;\n\n  @ApiProperty({\n    enum: Object.values(StatEvents),\n  })\n  @IsNotEmpty()\n  @IsEnum(StatEvents)\n  event: StatEvents;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsMongoId()\n  itemId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nItemsModule\n\nItemsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nRewardsModule\n\nRewardsModule\n\nAppModule -->\n\nRewardsModule->AppModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ItemsModule\n                        \n                        \n                            RewardsModule\n                        \n                        \n                            StatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { getModelToken, MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport configuration from 'config/configuration';\nimport { ItemsModule } from './items/items.module';\nimport { UsersModule } from './users/users.module';\nimport { StatsModule } from './stats/stats.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport AdminJS, { ResourceWithOptions } from 'adminjs';\nimport * as AdminJSMongoose from '@adminjs/mongoose';\nimport { AdminModule } from '@adminjs/nestjs';\nimport { User, UserSchema } from './users/schemas/user.schema';\nimport * as mongoose from 'mongoose';\nimport { SchemaModule } from './schema/schema.module';\nimport { Item } from './items/schemas/item.schema';\nimport { Stat } from './stats/schemas/stat.schema';\nimport { RewardsModule } from './rewards/rewards.module';\nimport { Reward } from './rewards/schemas/reward.schema';\n\nAdminJS.registerAdapter(AdminJSMongoose);\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      // Whichever is found first, shall be used by Nest\n      envFilePath: ['.prod.env', '.dev.env', '.staging.env'],\n      isGlobal: true,\n      load: [configuration],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URI'),\n      }),\n      inject: [ConfigService],\n    }),\n    AdminModule.createAdminAsync({\n      imports: [SchemaModule],\n      inject: [\n        getModelToken(User.name),\n        getModelToken(Item.name),\n        getModelToken(Stat.name),\n        getModelToken(Reward.name),\n      ],\n      useFactory: (\n        userModel: mongoose.Model,\n        itemModel: mongoose.Model,\n        statsModel: mongoose.Model,\n        rewardsModel: mongoose.Model,\n      ) => ({\n        adminJsOptions: {\n          rootPath: '/admin',\n          resources: [userModel, itemModel, statsModel, rewardsModel],\n        },\n      }),\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client'),\n    }),\n    ItemsModule,\n    UsersModule,\n    StatsModule,\n    RewardsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\nconsole.log(AdminJSMongoose);\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request data of the current request\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Response data of the curent request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next function passthrought\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction, response } from 'express';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly userService: UsersService) {}\n\n  /**\n   *\n   * @param req The request data of the current request\n   * @param res Response data of the curent request\n   * @param next Next function passthrought\n   */\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { accessToken, clientId: clientIdCookie } = req.cookies;\n    const { clientId } = req.headers;\n    if (!accessToken) throw new UnauthorizedException();\n    try {\n      const userId = await this.userService.verifyToken(accessToken);\n      const user = await this.userService.findOne(userId);\n      if (!user) throw 'User not found';\n      req.user = user;\n      req.clientId = clientId as string;\n      // If there is a clientId coming from the header, then use it\n      if (clientId) res.cookie('clientId', clientId);\n      // Otherwise use the clientId coming from the cookie\n      else res.cookie('clientId', clientIdCookie);\n      next();\n    } catch (e) {\n      // Invalid user\n      console.log(e);\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiResponse } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  phoneNumber: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  userName: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  clientId: string; // Client ID to send the appropriate data\n}\n\nexport interface LoginUserResponseDto {\n  token: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExistingRewardsForUser.html":{"url":"interfaces/IExistingRewardsForUser.html","title":"interface - IExistingRewardsForUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExistingRewardsForUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/entities/existing-rewards.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentTier\n                                        \n                                \n                                \n                                        \n                                            newlyAlloted\n                                        \n                                \n                                \n                                        \n                                            rewards\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentTier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentTier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newlyAlloted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newlyAlloted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rewards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rewards:         Reward[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reward[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Reward } from '../schemas/reward.schema';\n\nexport interface IExistingRewardsForUser {\n  rewards: Reward[];\n  newlyAlloted: boolean;\n  currentTier: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Item.html":{"url":"classes/Item.html","title":"class - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Item\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/schemas/item.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                isNonVeg\n                            \n                            \n                                mainCategory\n                            \n                            \n                                modelUrl\n                            \n                            \n                                name\n                            \n                            \n                                rate\n                            \n                            \n                                subCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNonVeg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\nimport { Document } from 'mongoose';\n\nexport type ItemDocument = Item & Document;\n\n@Schema({\n  timestamps: true,\n})\nexport class Item {\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true, unique: true })\n  id: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  mainCategory: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  subCategory: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  rate: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  isNonVeg: boolean;\n\n  @ApiProperty()\n  @Prop()\n  imageUrl: string;\n\n  @ApiProperty()\n  @Prop()\n  modelUrl: string;\n}\n\nexport const ItemSchema = SchemaFactory.createForClass(Item);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ItemsController.html":{"url":"controllers/ItemsController.html","title":"controller - ItemsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ItemsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                items\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                allItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(itemData: Item)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/items/items.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    itemData\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allItems\n                        \n                    \n                \n            \n            \n                \nallItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/items/items.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseInterceptors } from '@nestjs/common';\nimport { TransformInterceptor } from 'src/interceptors/transform.interceptor';\nimport { Item } from './schemas/item.schema';\nimport { ItemsService } from './items.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@UseInterceptors(new TransformInterceptor())\n@Controller('items')\n@ApiTags('Items')\nexport class ItemsController {\n  constructor(private readonly itemsService: ItemsService) {}\n\n  @Post()\n  addItem(@Body() itemData: Item) {\n    return this.itemsService.createItem(itemData);\n  }\n\n  @Get()\n  allItems() {\n    return this.itemsService.findAllItems();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ItemsModule.html":{"url":"modules/ItemsModule.html","title":"module - ItemsModule","body":"\n                   \n\n\n\n\n    Modules\n    ItemsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_imports\n\n\n\ncluster_ItemsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nItemsModule\n\nItemsModule\n\nItemsModule -->\n\nUsersModule->ItemsModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/items/items.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ItemsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ItemsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Controller, MiddlewareConsumer, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Item, ItemSchema } from './schemas/item.schema';\nimport { ItemsController } from './items.controller';\nimport { ItemsService } from './items.service';\nimport { AuthMiddleware } from 'src/middlewares/auth.middleware';\nimport { UsersService } from 'src/users/users.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    MongooseModule.forFeature([{ name: Item.name, schema: ItemSchema }]),\n  ],\n  controllers: [ItemsController],\n  providers: [ItemsService],\n})\nexport class ItemsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware).forRoutes(ItemsController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemsService.html":{"url":"injectables/ItemsService.html","title":"injectable - ItemsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ItemsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createItem\n                            \n                            \n                                    Async\n                                findAllItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/items/items.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    createItem(data: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllItems()\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Item, ItemDocument } from './schemas/item.schema';\n\n@Injectable()\nexport class ItemsService {\n  constructor(\n    @InjectModel(Item.name) private readonly itemModel: Model,\n  ) {}\n\n  // Create an item\n  async createItem(data: Item) {\n    return this.itemModel.create(data);\n  }\n\n  async findAllItems() {\n    return this.itemModel.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginUserResponseDto.html":{"url":"interfaces/LoginUserResponseDto.html","title":"interface - LoginUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty, ApiResponse } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  phoneNumber: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  userName: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  clientId: string; // Client ID to send the appropriate data\n}\n\nexport interface LoginUserResponseDto {\n  token: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  success: boolean;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map((data) => ({ success: true, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reward.html":{"url":"classes/Reward.html","title":"class - Reward","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reward\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/schemas/reward.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                code\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                expires\n                            \n                            \n                                isExpired\n                            \n                            \n                                isRedeemed\n                            \n                            \n                                redeemedOn\n                            \n                            \n                                tier\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({requried: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expires\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRedeemed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redeemedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { User } from 'src/users/schemas/user.schema';\n\nexport type RewardDocument = Reward & mongoose.Document;\n\n@Schema({\n  timestamps: true,\n})\nexport class Reward {\n  @Prop({ requried: true, unique: true })\n  code: string; // The code to be shown to the user\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: User.name })\n  user: string | User; // The user to which the reward is assigned to\n\n  @Prop({ required: true })\n  clientId: string; // The client to which the reward is applied to\n\n  @Prop({ required: true })\n  expires: Date; // The date on which the reward expires\n\n  @Prop({ default: false })\n  isExpired: boolean; // Tells if the reward is expired or not\n\n  @Prop()\n  redeemedOn: Date; // The date on which the redemption happened\n\n  @Prop({ default: false })\n  isRedeemed: boolean; // Tells if the reward is redeemed\n\n  @Prop({ default: 1 })\n  tier: number; // The tier of the reward. 1, 2, 3 denotes the different tiers to which the reward belongs to\n\n  @Prop({ default: 0 })\n  discountPercentage: number;\n}\n\nexport const RewardSchema = SchemaFactory.createForClass(Reward);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RewardsController.html":{"url":"controllers/RewardsController.html","title":"controller - RewardsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RewardsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/rewards.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rewards\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllRewards\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllRewards\n                        \n                    \n                \n            \n            \n                \ngetAllRewards(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')\n                \n            \n\n            \n                \n                    Defined in src/rewards/rewards.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { TransformInterceptor } from 'src/interceptors/transform.interceptor';\nimport { RewardsService } from './rewards.service';\n\n@Controller('rewards')\n@ApiTags('Rewards')\n@UseInterceptors(new TransformInterceptor())\nexport class RewardsController {\n  constructor(private readonly rewardsService: RewardsService) {}\n\n  @Get('user')\n  getAllRewards(@Req() request: Request) {\n    return this.rewardsService.getRewardsForUser(\n      request.user?._id,\n      request.clientId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RewardsModule.html":{"url":"modules/RewardsModule.html","title":"module - RewardsModule","body":"\n                   \n\n\n\n\n    Modules\n    RewardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RewardsModule\n\n\n\ncluster_RewardsModule_providers\n\n\n\ncluster_RewardsModule_exports\n\n\n\n\nRewardsService \n\nRewardsService \n\n\n\nRewardsModule\n\nRewardsModule\n\nRewardsService  -->\n\nRewardsModule->RewardsService \n\n\n\n\n\nRewardsService\n\nRewardsService\n\nRewardsModule -->\n\nRewardsService->RewardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rewards/rewards.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The module to handle all rewards\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RewardsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RewardsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RewardsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { forwardRef, MiddlewareConsumer, Module } from '@nestjs/common';\nimport { RewardsService } from './rewards.service';\nimport { RewardsController } from './rewards.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Reward, RewardSchema } from './schemas/reward.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { AuthMiddleware } from 'src/middlewares/auth.middleware';\nimport { UsersModule } from 'src/users/users.module';\n\n/**\n * The module to handle all rewards\n */\n@Module({\n  imports: [\n    // To avoid circular dep\n    forwardRef(() => UsersModule),\n    MongooseModule.forFeature([{ name: Reward.name, schema: RewardSchema }]),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [RewardsController],\n  providers: [RewardsService],\n  exports: [RewardsService],\n})\nexport class RewardsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware).forRoutes(RewardsController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RewardsService.html":{"url":"injectables/RewardsService.html","title":"injectable - RewardsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RewardsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/rewards.service.ts\n        \n\n\n            \n                Description\n            \n            \n                \nCreate a rewards for a user\nRedeem a reward with an ID\nFetch rewards for a user\nReward Redemption Statistics\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAndIssueRewards\n                            \n                            \n                                    Async\n                                createReward\n                            \n                            \n                                generateCode\n                            \n                            \n                                    Async\n                                getRewardsForUser\n                            \n                            \n                                    Async\n                                redeemCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rewardModel: Model, userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rewards/rewards.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rewardModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkAndIssueRewards\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAndIssueRewards(userId: string, clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReward\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReward(userId: string, percentage: number, tier: number, clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tier\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateCode\n                        \n                    \n                \n            \n            \n                \ngenerateCode()\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRewardsForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRewardsForUser(userId: string, clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        redeemCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    redeemCode(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as moment from 'moment';\nimport { Model } from 'mongoose';\nimport { customAlphabet } from 'nanoid';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { IExistingRewardsForUser } from './entities/existing-rewards';\nimport { Reward, RewardDocument } from './schemas/reward.schema';\n\n/**\n * 1. Create a rewards for a user\n * 2. Redeem a reward with an ID\n * 3. Fetch rewards for a user\n * 4. Reward Redemption Statistics\n */\n\n@Injectable()\nexport class RewardsService {\n  constructor(\n    @InjectModel(Reward.name)\n    private readonly rewardModel: Model,\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n\n  generateCode(): string {\n    const nanoId1 = customAlphabet('ABCDEFGHIJKLMNOPQR', 3);\n    const nanoId2 = customAlphabet('123456789', 3);\n    return `${nanoId1()}-${nanoId2()}`;\n  }\n\n  async createReward(\n    userId: string,\n    percentage: number,\n    tier: number,\n    clientId: string,\n  ) {\n    return this.rewardModel.create({\n      user: userId,\n      discountPercentage: percentage,\n      code: this.generateCode(),\n      expires: new Date(moment().add(2, 'month').toISOString()),\n      tier,\n      clientId,\n    });\n  }\n\n  async getRewardsForUser(userId: string, clientId: string): Promise {\n    return this.rewardModel.find({\n      user: userId,\n      clientId: clientId,\n    });\n  }\n\n  // Check if the user has rewards and accordingly allot new ones if not\n  async checkAndIssueRewards(\n    userId: string,\n    clientId: string,\n  ): Promise {\n    const rewards = await this.getRewardsForUser(userId, clientId);\n\n    // If the user already has rewards and check the latest tier\n    if (rewards.length > 0) {\n      let latestTier = 1;\n      for (const reward of rewards) {\n        if (!reward.isRedeemed) break;\n        if (reward.tier > latestTier && reward.isRedeemed) {\n          latestTier = reward.tier;\n        }\n      }\n      return {\n        newlyAlloted: false,\n        rewards,\n        currentTier: latestTier,\n      };\n    }\n    const reward1 = await this.createReward(userId, 20, 1, clientId);\n    const reward2 = await this.createReward(userId, 15, 2, clientId);\n    const reward3 = await this.createReward(userId, 30, 3, clientId);\n    return {\n      newlyAlloted: true,\n      rewards: [reward1, reward2, reward3],\n      currentTier: 1,\n    };\n  }\n\n  // Redeem the code given and mark as redeemed\n  async redeemCode(code: string) {\n    return this.rewardModel.findOneAndUpdate(\n      {\n        code,\n      },\n      {\n        isRedeemed: true,\n        redeemedOn: new Date(moment().toISOString()),\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemaModule.html":{"url":"modules/SchemaModule.html","title":"module - SchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/schema/schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Item, ItemSchema } from 'src/items/schemas/item.schema';\nimport { Reward, RewardSchema } from 'src/rewards/schemas/reward.schema';\nimport { Stat, StatSchema } from 'src/stats/schemas/stat.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    MongooseModule.forFeature([{ name: Stat.name, schema: StatSchema }]),\n    MongooseModule.forFeature([{ name: Item.name, schema: ItemSchema }]),\n    MongooseModule.forFeature([{ name: Reward.name, schema: RewardSchema }]),\n  ],\n  exports: [MongooseModule],\n})\nexport class SchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stat.html":{"url":"classes/Stat.html","title":"class - Stat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/schemas/stat.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                item\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | Item\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from '../../users/schemas/user.schema';\nimport * as mongoose from 'mongoose';\nimport { Item } from '../../items/schemas/item.schema';\n\nexport enum StatEvents {\n  USER_OPENED_VIEW_AR = 'USER_OPENEN_VIEW_AR',\n  USER_CLOSED_VIEW_AR = 'USER_CLOSED_VIEW_AR',\n  USER_OPENED_MODEL = 'USER_OPENED_MODEL',\n  USER_CLOSED_MODEL = 'USER_CLOSED_MODEL',\n}\n\n@Schema({\n  timestamps: true,\n})\nexport class Stat {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: User.name })\n  user: string | User;\n\n  @Prop({ enum: Object.values(StatEvents) })\n  event: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Item.name })\n  item: string | Item;\n}\n\nexport type StatDocument = mongoose.Document & Stat;\n\nexport const StatSchema = SchemaFactory.createForClass(Stat);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatsController.html":{"url":"controllers/StatsController.html","title":"controller - StatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStat\n                            \n                            \n                                getAllStats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStat\n                        \n                    \n                \n            \n            \n                \naddStat(data: AddStatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AddStatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllStats\n                        \n                    \n                \n            \n            \n                \ngetAllStats()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseInterceptors } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { TransformInterceptor } from '../interceptors/transform.interceptor';\nimport { AddStatDto } from './dto/add-stat.dto';\nimport { StatsService } from './stats.service';\n\n@ApiTags('Stats')\n@UseInterceptors(new TransformInterceptor())\n@Controller('stats')\nexport class StatsController {\n  constructor(private readonly statsService: StatsService) {}\n\n  @Post()\n  addStat(@Body() data: AddStatDto) {\n    return this.statsService.addStat(data);\n  }\n\n  @Get()\n  getAllStats() {\n    return this.statsService.getAllStats();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatsModule.html":{"url":"modules/StatsModule.html","title":"module - StatsModule","body":"\n                   \n\n\n\n\n    Modules\n    StatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\n\nStatsService\n\nStatsService\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stats/stats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { StatsController } from './stats.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Stat, StatSchema } from './schemas/stat.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Stat.name, schema: StatSchema }]),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [StatsController],\n  providers: [StatsService],\n})\nexport class StatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addStat\n                            \n                            \n                                getAllStats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsModel: Model, usersModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stats/stats.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addStat\n                        \n                    \n                \n            \n            \n                \n                    \n                    addStat(data: AddStatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AddStatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllStats\n                        \n                    \n                \n            \n            \n                \ngetAllStats()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ImATeapotException,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from '../users/schemas/user.schema';\nimport { AddStatDto } from './dto/add-stat.dto';\nimport { Stat, StatDocument } from './schemas/stat.schema';\n\n@Injectable()\nexport class StatsService {\n  constructor(\n    @InjectModel(Stat.name) private readonly statsModel: Model,\n    @InjectModel(User.name) private readonly usersModel: Model,\n  ) {}\n  async addStat(data: AddStatDto) {\n    const user = await this.usersModel.findOne({\n      phoneNumber: data.userPhoneNumber,\n    });\n    if (!user)\n      throw new BadRequestException({\n        error: 'User not found in the database',\n      });\n    let stat = await this.statsModel.create({\n      user: user._id,\n      item: data.itemId,\n      event: data.event,\n    });\n  }\n\n  getAllStats() {\n    return this.statsModel.find().populate('user item');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/transform.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  success: boolean;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map((data) => ({ success: true, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                name\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsNotEmpty } from 'class-validator';\nimport { Document } from 'mongoose';\n\n@Schema({\n  timestamps: true,\n})\nexport class User {\n  _id: string;\n\n  @IsNotEmpty()\n  @Prop({ required: true })\n  name: string;\n\n  @IsNotEmpty()\n  @Prop({ required: true })\n  phoneNumber: string;\n}\n\nexport type UserDocument = User & Document;\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  UseInterceptors,\n  Req,\n  Res,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { TransformInterceptor } from '../interceptors/transform.interceptor';\nimport { request, Request, Response } from 'express';\nimport { RewardsService } from 'src/rewards/rewards.service';\n\n@Controller('user')\n@ApiTags('Users')\n@UseInterceptors(new TransformInterceptor())\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly rewardsService: RewardsService,\n  ) {}\n\n  @Get('profile')\n  async profile(@Req() request: Request) {\n    await this.rewardsService.checkAndIssueRewards(\n      request.user._id,\n      request.clientId,\n    );\n    return request.user;\n  }\n\n  @Post('login')\n  async create(\n    @Body() createUserDto: CreateUserDto,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const data = await this.usersService.login(createUserDto);\n    response.cookie('accessToken', data.token, { httpOnly: true });\n    response.cookie('clientId', createUserDto.clientId);\n    return await {\n      accessToken: data.token,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nRewardsModule\n\nRewardsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRewardsModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RewardsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  RequestMethod,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthMiddleware } from 'src/middlewares/auth.middleware';\nimport { ConfigModule } from '@nestjs/config';\nimport { RewardsModule } from 'src/rewards/rewards.module';\n\n@Module({\n  imports: [\n    RewardsModule,\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    ConfigModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .exclude({\n        path: '/user/login',\n        method: RequestMethod.POST,\n      })\n      .forRoutes(UsersController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                \nFetch user's profile\nLogin a user\nGenerate Token for user\nVerify Token for user\nGet all users\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                generateToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        All user's data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        User's data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's ID for JWT token generation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The token generated by JWT\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n                    TODO: Implement OTP\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to send user's parameters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Login Data to store as cookies on the server side\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to be verified\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The user ID if the token could be verified or throws an error 'Invalid Token'\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto, LoginUserResponseDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\nimport * as jwt from 'jsonwebtoken';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * 1. Fetch user's profile\n * 2. Login a user\n * 3. Generate Token for user\n * 4. Verify Token for user\n * 5. Get all users\n */\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n    private readonly config: ConfigService,\n  ) {}\n\n  /**\n   *\n   * @param createUserDto Object to send user's parameters\n   * @returns Login Data to store as cookies on the server side\n   * @description Used to either create a new user or login an existing user smartly.\n   * TODO: Implement OTP\n   */\n  async login(createUserDto: CreateUserDto): Promise {\n    const existingUser = await this.userModel\n      .findOne({\n        phoneNumber: createUserDto.phoneNumber,\n      })\n      .lean();\n    if (existingUser) {\n      const data = {\n        token: this.generateToken(existingUser._id.toString()),\n        userId: existingUser._id.toString(),\n      };\n      return data;\n    }\n    const user = await this.userModel.create({\n      name: createUserDto.userName,\n      phoneNumber: createUserDto.phoneNumber,\n    });\n    return {\n      token: this.generateToken(user._id),\n      userId: user._id,\n    };\n  }\n\n  /**\n   * @description Used to get all users in the database\n   * @returns All user's data\n   */\n  findAll() {\n    return this.userModel.find();\n  }\n\n  /**\n   *\n   * @param id User's ID\n   * @returns User's data\n   */\n  async findOne(id: string): Promise {\n    const user = await this.userModel.findById(id);\n    return user;\n  }\n\n  /**\n   *\n   * @param id User's ID for JWT token generation\n   * @returns The token generated by JWT\n   */\n  generateToken(id) {\n    return jwt.sign({ id }, this.config.get('JWT_SECRET'), {\n      expiresIn: this.config.get('JWT_EXPIRY'),\n    });\n  }\n\n  /**\n   *\n   * @param token Token to be verified\n   * @returns The user ID if the token could be verified or throws an error 'Invalid Token'\n   */\n  async verifyToken(token): Promise {\n    const secret = this.config.get('JWT_SECRET');\n    const decoded: any = jwt.verify(token, secret);\n    if (!decoded.id) {\n      throw 'Invalid Token';\n    }\n    return decoded.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/items/items.controller.ts\n            \n            controller\n            ItemsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/items/items.service.ts\n            \n            injectable\n            ItemsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/items/schemas/item.schema.ts\n            \n            class\n            Item\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/items/schemas/item.schema.ts\n            \n            variable\n            ItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/rewards/entities/existing-rewards.ts\n            \n            interface\n            IExistingRewardsForUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/rewards/rewards.controller.ts\n            \n            controller\n            RewardsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/rewards/rewards.service.ts\n            \n            injectable\n            RewardsService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rewards/schemas/reward.schema.ts\n            \n            class\n            Reward\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/rewards/schemas/reward.schema.ts\n            \n            variable\n            RewardSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stats/dto/add-stat.dto.ts\n            \n            class\n            AddStatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stats/schemas/stat.schema.ts\n            \n            class\n            Stat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stats/schemas/stat.schema.ts\n            \n            variable\n            StatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stats/stats.controller.ts\n            \n            controller\n            StatsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            interface\n            LoginUserResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                28 %\n                (2/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @adminjs/express : ^4.0.1\n        \n            @adminjs/mongoose : ^2.0.0\n        \n            @adminjs/nestjs : ^3.0.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/serve-static : ^2.2.2\n        \n            @nestjs/swagger : ^5.1.5\n        \n            adminjs : ^5.3.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            express-formidable : ^1.2.0\n        \n            express-session : ^1.17.2\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.29.1\n        \n            mongoose : ^6.0.13\n        \n            nanoid : ^3.1.30\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StatEvents   (src/.../stat.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stats/schemas/stat.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        StatEvents\n                    \n                \n                        \n                            \n                                 USER_OPENED_VIEW_AR\n                            \n                        \n                        \n                            \n                                Value : USER_OPENEN_VIEW_AR\n                            \n                        \n                        \n                            \n                                 USER_CLOSED_VIEW_AR\n                            \n                        \n                        \n                            \n                                Value : USER_CLOSED_VIEW_AR\n                            \n                        \n                        \n                            \n                                 USER_OPENED_MODEL\n                            \n                        \n                        \n                            \n                                Value : USER_OPENED_MODEL\n                            \n                        \n                        \n                            \n                                 USER_CLOSED_MODEL\n                            \n                        \n                        \n                            \n                                Value : USER_CLOSED_MODEL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ItemsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RewardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_providers\n\n\n\ncluster_RewardsModule\n\n\n\ncluster_RewardsModule_exports\n\n\n\ncluster_RewardsModule_providers\n\n\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nItemsModule\n\nItemsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nRewardsModule\n\nRewardsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRewardsModule->UsersModule\n\n\n\nAppModule -->\n\nRewardsModule->AppModule\n\n\n\n\n\nRewardsService \n\nRewardsService \n\nRewardsService  -->\n\nRewardsModule->RewardsService \n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\nItemsModule -->\n\nUsersModule->ItemsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\nRewardsService\n\nRewardsService\n\nRewardsModule -->\n\nRewardsService->RewardsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemDocument   (src/.../item.schema.ts)\n                        \n                        \n                            RewardDocument   (src/.../reward.schema.ts)\n                        \n                        \n                            StatDocument   (src/.../stat.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/items/schemas/item.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/rewards/schemas/reward.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RewardDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/stats/schemas/stat.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StatDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemSchema   (src/.../item.schema.ts)\n                        \n                        \n                            RewardSchema   (src/.../reward.schema.ts)\n                        \n                        \n                            StatSchema   (src/.../stat.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/items/schemas/item.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Item)\n                    \n                \n\n\n        \n    \n\n    src/rewards/schemas/reward.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RewardSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Reward)\n                    \n                \n\n\n        \n    \n\n    src/stats/schemas/stat.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Stat)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
