var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddStatDto.html",[0,0.042,1,1.994]],["body/classes/AddStatDto.html",[0,0.06,1,2.871,2,1.679,3,0.323,4,0.284,5,0.284,6,4.826,7,3.052,8,0.404,9,2.059,10,3.973,11,5.384,12,5.384,13,0.731,14,0.028,15,3.973,16,1.991,17,3.625,18,3.625,19,0.949,20,3.625,21,1.835,22,3.625,23,3.625,24,3.052,25,3.625,26,0.51,27,3.784,28,1.442,29,3.625,30,4.802,31,3.428,32,1.98,33,1.776,34,2.674,35,0.323,36,3.052,37,3.052,38,3.625,39,0.02,40,0.02]],["title/controllers/AppController.html",[41,1.147,42,2.201]],["body/controllers/AppController.html",[0,0.053,3,0.38,4,0.334,5,0.334,8,0.476,14,0.028,16,1.578,19,0.752,21,1.708,26,0.475,35,0.38,39,0.022,40,0.022,41,1.835,42,3.521,43,1.578,44,3.593,45,1.48,46,5.132,47,4.268,48,1.184,49,0.815,50,3.179,51,3.593,52,2.552,53,1.698,54,1.468,55,4.268]],["title/modules/AppModule.html",[56,1.147,57,2.201]],["body/modules/AppModule.html",[0,0.028,3,0.202,4,0.178,5,0.178,14,0.028,26,0.575,33,1.273,35,0.202,39,0.014,40,0.014,42,2.745,43,1.273,49,0.434,50,2.867,51,1.912,56,1.184,57,4.074,58,0.974,59,1.595,60,1.912,61,1.912,62,1.912,63,3.138,64,2.867,65,3.138,66,2.634,67,1.881,68,1.241,69,1.241,70,2.271,71,2.059,72,2.535,73,2.271,74,2.271,75,1.241,76,0.63,77,2.899,78,3.906,79,1.499,80,3.443,81,2.271,82,2.271,83,2.271,84,2.271,85,2.271,86,1.912,87,1.912,88,1.912,89,1.912,90,2.899,91,2.271,92,2.271,93,1.912,94,2.271,95,1.912,96,0.63,97,1.052,98,1.676,99,2.273,100,2.271,101,0.904,102,1.912,103,1.14,104,2.271,105,2.271,106,1.052,107,2.271,108,2.271,109,2.271,110,2.271,111,1.676,112,2.271,113,2.271,114,1.912,115,1.912,116,2.271,117,2.271,118,2.271,119,2.271,120,2.271,121,0.974,122,2.271,123,2.271,124,3.443,125,1.14,126,2.271,127,2.271,128,3.443,129,2.271,130,2.271,131,2.271,132,2.271,133,2.271,134,2.54,135,4.64,136,2.899,137,2.899,138,3.443,139,2.271,140,3.443,141,2.271,142,2.271,143,2.271,144,2.271,145,1.358,146,2.271]],["title/injectables/AppService.html",[50,1.822,147,0.861]],["body/injectables/AppService.html",[0,0.056,3,0.398,4,0.351,5,0.351,8,0.499,14,0.027,19,0.789,21,1.759,26,0.398,35,0.398,39,0.023,40,0.023,45,1.524,46,5.219,48,1.242,49,0.855,50,3.001,54,1.54,147,1.418,148,2.074,149,3.769,150,4.476,151,4.476,152,4.476]],["title/injectables/AuthMiddleware.html",[147,0.861,153,1.822]],["body/injectables/AuthMiddleware.html",[0,0.025,3,0.182,4,0.16,5,0.16,8,0.228,13,0.431,14,0.028,19,0.559,21,0.654,26,0.346,35,0.182,39,0.013,40,0.013,45,0.88,48,0.567,49,0.39,52,1.221,53,0.813,96,1.61,111,1.507,125,1.953,145,1.221,147,0.819,148,0.946,153,1.733,154,1.719,155,1.953,156,3.173,157,2.671,158,2.568,159,3.694,160,3.173,161,2.671,162,4.405,163,3.173,164,3.173,165,3.173,166,3.173,167,3.173,168,3.008,169,2.671,170,3.173,171,3.173,172,3.173,173,4.388,174,1.116,175,2.042,176,2.033,177,2.042,178,1.016,179,0.761,180,1.016,181,3.891,182,3.173,183,3.173,184,3.173,185,3.173,186,3.694,187,2.868,188,3.873,189,4.388,190,2.042,191,2.341,192,1.746,193,3.173,194,3.173,195,2.671,196,3.173,197,3.173,198,2.042,199,3.173,200,3.891,201,1.348,202,1.719,203,1.507,204,2.624,205,1.719,206,2.042,207,2.042,208,1.882,209,4.001,210,4.388,211,4.388,212,2.042,213,4.388,214,4.388,215,2.042,216,3.237,217,2.327,218,2.042,219,3.173,220,1.221,221,1.897,222,2.042,223,2.042,224,2.042,225,3.173,226,2.042,227,3.173,228,3.173,229,2.042,230,3.173,231,1.507,232,1.025,233,2.042,234,2.042,235,2.042,236,2.042,237,2.042,238,1.719,239,2.042]],["title/classes/CreateUserDto.html",[0,0.042,240,1.674]],["body/classes/CreateUserDto.html",[0,0.06,2,1.685,3,0.324,4,0.285,5,0.285,8,0.406,9,2.064,13,0.732,14,0.028,16,1.995,19,0.95,21,2.034,24,4.542,26,0.428,27,3.789,28,1.448,31,3.433,32,1.987,35,0.428,39,0.02,40,0.02,145,2.175,158,2.401,168,3.226,192,1.448,220,2.175,232,1.826,240,2.416,241,4.236,242,2.401,243,3.226,244,4.542,245,3.638,246,3.638,247,3.638,248,3.063,249,2.684,250,3.063,251,1.56,252,2.175]],["title/interfaces/IExistingRewardsForUser.html",[251,1.43,253,2.201]],["body/interfaces/IExistingRewardsForUser.html",[3,0.378,4,0.333,5,0.333,8,0.474,9,2.282,13,0.789,14,0.027,26,0.378,35,0.378,39,0.022,40,0.022,106,2.82,251,1.823,253,3.512,254,2.805,255,3.578,256,3.578,257,5.124,258,5.124,259,4.018,260,4.285,261,3.473,262,3.136]],["title/classes/Item.html",[0,0.042,101,1.327]],["body/classes/Item.html",[0,0.046,2,1.145,3,0.22,4,0.194,5,0.194,8,0.276,9,1.573,13,0.813,14,0.028,16,2.176,19,1.037,21,2.038,26,0.431,27,3.952,28,0.984,31,3.444,32,1.35,33,0.914,35,0.389,39,0.015,40,0.015,76,0.686,101,1.741,121,2.747,155,2.196,179,1.049,208,1.06,232,2.196,261,2.194,263,1.631,264,4.374,265,4.374,266,4.374,267,4.374,268,4.374,269,4.374,270,5.607,271,2.472,272,3.088,273,2.472,274,3.668,275,2.472,276,2.472,277,2.472,278,2.472,279,2.472,280,2.472,281,2.472,282,3.952,283,1.573,284,1.631,285,3.088,286,1.824,287,1.631,288,4.137,289,1.478,290,2.081]],["title/controllers/ItemsController.html",[41,1.147,291,2.201]],["body/controllers/ItemsController.html",[0,0.044,3,0.317,4,0.279,5,0.279,8,0.397,13,0.484,14,0.028,16,1.755,19,0.836,26,0.528,28,1.417,35,0.317,39,0.019,40,0.019,41,1.225,43,1.317,45,1.317,48,1.317,49,0.68,52,2.129,53,1.417,54,1.632,101,2.265,178,1.14,179,0.854,180,1.14,291,3.132,292,2.998,293,2.35,294,2.998,295,4.745,296,5.692,297,3.561,298,3.523,299,3.561,300,4.745,301,3.561,302,2.35,303,2.35,304,2.199,305,2.998,306,2.627,307,2.916,308,2.998,309,2.35,310,2.35,311,3.561,312,3.561,313,3.561,314,3.561,315,3.561]],["title/modules/ItemsModule.html",[56,1.147,63,1.994]],["body/modules/ItemsModule.html",[0,0.041,3,0.289,4,0.255,5,0.255,13,0.442,14,0.028,19,0.573,26,0.551,35,0.289,39,0.018,40,0.018,41,1.118,43,1.65,45,0.902,48,0.902,49,0.621,56,1.535,58,1.394,59,2.067,63,3.703,66,2.98,67,2.438,68,1.776,69,1.776,71,2.668,72,2.438,75,1.776,76,0.902,101,1.294,153,1.776,176,1.506,178,1.041,179,1.07,180,1.041,202,2.737,283,1.394,289,2.668,291,3.363,306,2.399,307,3.243,308,2.737,316,2.737,317,3.251,318,2.737,319,3.251,320,2.399,321,3.292,322,4.046,323,3.251,324,2.399,325,2.399,326,3.251,327,2.399,328,2.737,329,1.944,330,2.399,331,3.251]],["title/injectables/ItemsService.html",[147,0.861,307,1.822]],["body/injectables/ItemsService.html",[0,0.04,3,0.285,4,0.251,5,0.251,8,0.357,13,0.599,14,0.028,19,0.89,26,0.485,33,1.183,35,0.285,39,0.018,40,0.018,45,1.225,48,1.511,49,0.611,53,1.273,54,1.518,76,0.888,101,2.351,125,2.966,136,3.716,147,1.139,148,1.483,155,1.606,174,2.411,178,1.413,179,1.059,180,1.413,192,2.351,204,1.913,286,2.361,294,3.716,306,2.361,307,2.411,332,2.694,333,4.413,334,5.446,335,3.2,336,3.595,337,3.2,338,4.413,339,3.2,340,2.639,341,3.256,342,4.413,343,3.2,344,3.256,345,2.112,346,3.2,347,1.913,348,3.2,349,3.2]],["title/interfaces/LoginUserResponseDto.html",[251,1.43,252,1.994]],["body/interfaces/LoginUserResponseDto.html",[0,0.063,3,0.348,4,0.306,5,0.306,8,0.435,9,2.162,13,0.685,14,0.027,21,2.086,26,0.449,27,3.894,28,1.554,31,3.528,32,2.133,35,0.449,39,0.021,40,0.021,145,2.335,158,3.894,168,2.335,192,1.554,220,3.528,232,1.96,240,1.96,241,2.881,242,2.578,243,2.335,244,3.288,248,3.288,249,2.881,250,3.288,251,1.675,252,3.015,254,2.578]],["title/interfaces/Response.html",[187,1.822,251,1.43]],["body/interfaces/Response.html",[0,0.048,3,0.344,4,0.302,5,0.302,8,0.43,9,2.146,13,0.68,14,0.028,26,0.445,35,0.445,39,0.021,40,0.021,49,0.737,54,1.328,121,1.656,147,1.292,187,2.734,188,2.848,192,2.422,203,2.848,251,1.656,254,2.548,261,3.32,304,1.788,350,2.848,351,5.124,352,4.675,353,4.213,354,4.213,355,4.213,356,3.25,357,4.213,358,2.848,359,3.25,360,3.25,361,3.25]],["title/classes/Reward.html",[0,0.042,106,1.545]],["body/classes/Reward.html",[0,0.029,2,1.072,3,0.206,4,0.181,5,0.181,8,0.258,9,1.497,13,0.812,14,0.028,16,2.137,19,1.018,21,1.692,26,0.374,33,1.291,35,0.374,39,0.014,40,0.014,76,0.642,96,1.567,106,2.729,121,2.479,145,1.383,168,2.514,169,1.947,208,0.992,260,3.455,261,2.8,272,2.939,282,3.949,283,1.497,284,1.527,287,1.527,288,2.576,362,1.527,363,3.943,364,3.54,365,3.943,366,4.204,367,3.54,368,3.54,369,3.943,370,3.491,371,2.313,372,2.313,373,2.313,374,4.683,375,2.576,376,2.313,377,5.284,378,2.313,379,3.943,380,2.313,381,2.313,382,2.313,383,3.102,384,2.313,385,1.947,386,2.939,387,2.939,388,2.313,389,1.383,390,1.707,391,1.947,392,2.313,393,1.947,394,1.264,395,2.313,396,2.313,397,3.943,398,3.491,399,2.313,400,1.947,401,2.313,402,1.947,403,1.707,404,1.527,405,2.313,406,2.313,407,2.313,408,2.313,409,1.383,410,1.947]],["title/controllers/RewardsController.html",[41,1.147,411,2.201]],["body/controllers/RewardsController.html",[0,0.045,3,0.325,4,0.286,5,0.286,8,0.407,13,0.496,14,0.028,16,1.35,19,0.643,26,0.532,28,1.453,35,0.325,39,0.02,40,0.02,41,1.256,43,1.35,45,1.339,48,1.013,49,0.697,52,2.183,53,1.453,54,1.256,162,4.531,178,1.169,179,0.876,180,1.169,191,2.694,201,2.41,204,2.183,259,2.41,293,2.41,298,2.41,302,2.41,303,2.41,304,2.235,305,3.074,309,2.41,310,2.41,411,3.185,412,3.074,413,4.825,414,3.651,415,4.825,416,3.651,417,3.651,418,3.651,419,2.713,420,3.074,421,3.651,422,3.651,423,3.651,424,3.651,425,3.651,426,3.074]],["title/modules/RewardsModule.html",[56,1.147,64,1.822]],["body/modules/RewardsModule.html",[0,0.037,3,0.268,4,0.236,5,0.236,13,0.409,14,0.028,19,0.53,26,0.541,35,0.268,39,0.017,40,0.017,43,1.564,45,0.835,48,0.835,49,0.575,56,1.824,58,1.291,59,1.959,64,3.252,66,2.123,67,2.31,68,1.644,69,1.644,71,2.529,72,1.644,75,1.644,76,0.835,96,0.835,97,1.959,106,1.394,153,1.644,155,1.511,178,0.963,179,1.173,180,0.963,259,2.791,262,2.22,283,1.814,320,2.22,321,3.12,322,3.913,324,2.22,325,2.22,327,2.22,328,2.534,329,2.529,389,1.799,394,1.644,409,2.529,411,3.227,419,3.206,420,2.534,427,2.534,428,2.534,429,2.534,430,3.009,431,4.229,432,3.12,433,3.009,434,3.56,435,3.009,436,3.009,437,3.009,438,3.009,439,2.534,440,3.009]],["title/injectables/RewardsService.html",[147,0.861,419,1.674]],["body/injectables/RewardsService.html",[0,0.021,3,0.151,4,0.133,5,0.133,8,0.189,13,0.59,14,0.028,19,0.818,21,2,26,0.453,33,0.628,35,0.151,39,0.011,40,0.011,45,0.761,48,1.205,49,0.324,53,1.091,54,1.598,76,0.471,96,1.457,106,2.152,121,1.176,125,2.821,134,2.544,147,0.708,148,0.787,155,0.853,157,2.309,168,3.546,174,1.498,178,1.391,179,1.042,180,1.391,208,2.096,217,2.062,220,2.922,221,2.367,232,1.377,253,1.121,257,2.309,258,2.309,259,3.639,260,3.427,262,1.253,336,3.225,340,1.64,341,2.023,345,1.121,347,1.64,363,3.332,364,1.43,365,1.43,367,1.43,368,1.43,369,3.657,375,1.253,379,1.43,383,2.92,389,1.016,390,1.253,400,2.309,402,1.43,403,2.023,404,2.613,419,1.377,441,1.43,442,3.448,443,2.309,444,2.742,445,3.448,446,3.448,447,3.958,448,2.742,449,2.742,450,1.698,451,1.698,452,2.742,453,1.698,454,1.698,455,3.332,456,1.698,457,3.958,458,1.698,459,1.698,460,2.742,461,1.698,462,2.742,463,1.698,464,2.309,465,1.698,466,1.43,467,1.016,468,1.698,469,1.43,470,1.698,471,1.253,472,2.742,473,1.698,474,2.742,475,1.698,476,1.698,477,1.698,478,1.698,479,1.698,480,1.698,481,1.698,482,1.698,483,1.698,484,1.698,485,1.698,486,1.698,487,1.698,488,3.958,489,2.742,490,1.698,491,2.742,492,2.742,493,3.448,494,1.698,495,2.742,496,1.698,497,2.742,498,1.698,499,1.698,500,1.698,501,1.698,502,1.698]],["title/modules/SchemaModule.html",[56,1.147,99,2.201]],["body/modules/SchemaModule.html",[0,0.047,3,0.338,4,0.298,5,0.298,14,0.028,26,0.553,35,0.338,39,0.02,40,0.02,49,0.726,56,1.704,58,1.631,72,2.077,75,2.707,76,1.055,96,1.055,97,2.296,99,3.271,101,1.513,103,1.909,106,1.762,179,1.401,283,2.505,289,2.963,329,3.492,330,2.805,389,2.274,394,2.077,409,2.963,432,2.805,439,3.201,503,3.802,504,3.802,505,3.802,506,2.963,507,3.802,508,3.201]],["title/classes/Stat.html",[0,0.042,103,1.674]],["body/classes/Stat.html",[0,0.039,2,1.437,3,0.276,4,0.243,5,0.243,8,0.346,9,1.853,10,3.667,13,0.794,14,0.028,15,2.288,16,1.838,19,0.876,21,1.873,26,0.478,33,1.597,35,0.478,36,3.636,37,2.611,39,0.018,40,0.018,76,0.861,96,1.623,98,2.288,101,2.328,102,2.611,103,2.495,121,1.33,208,1.33,282,3.547,283,1.853,284,2.047,287,2.047,330,2.288,385,3.636,386,4.757,387,4.525,391,2.611,393,3.636,394,1.694,506,1.855,509,1.855,510,3.101,511,3.101,512,3.101,513,3.101,514,2.611,515,2.611,516,3.636,517,3.636,518,3.636,519,2.288,520,2.611]],["title/controllers/StatsController.html",[41,1.147,521,2.201]],["body/controllers/StatsController.html",[0,0.044,1,3.399,3,0.316,4,0.278,5,0.278,8,0.396,13,0.482,14,0.028,16,1.751,19,0.834,26,0.527,28,1.412,35,0.316,39,0.019,40,0.019,41,1.221,43,1.312,45,1.313,48,1.313,49,0.678,52,2.122,53,1.412,54,1.629,178,1.136,179,0.851,180,1.136,192,1.884,293,2.342,298,3.517,302,2.342,303,2.342,304,2.193,309,2.342,310,2.342,521,3.125,522,2.987,523,3.548,524,3.986,525,4.786,526,2.987,527,3.548,528,3.548,529,2.987,530,2.987,531,2.987,532,2.911,533,2.987,534,3.548,535,3.548,536,3.548,537,3.548,538,3.548]],["title/modules/StatsModule.html",[56,1.147,65,1.994]],["body/modules/StatsModule.html",[0,0.046,3,0.329,4,0.289,5,0.289,14,0.028,26,0.548,34,2.723,35,0.329,39,0.02,40,0.02,43,1.797,49,0.705,56,1.672,58,1.583,59,2.251,65,3.683,67,2.655,68,2.016,69,2.016,71,2.906,72,2.016,75,2.016,76,1.024,96,1.024,97,2.251,103,1.853,179,1.166,283,2.084,329,2.906,389,2.207,394,2.016,506,2.906,508,3.108,521,3.586,532,3.365,533,3.108,539,3.108,540,3.108,541,3.691,542,3.691]],["title/injectables/StatsService.html",[147,0.861,532,1.822]],["body/injectables/StatsService.html",[0,0.038,1,3.184,3,0.27,4,0.238,5,0.238,8,0.339,10,2.24,13,0.578,14,0.028,19,0.866,26,0.517,33,1.123,34,2.24,35,0.27,39,0.017,40,0.017,45,1.181,48,1.181,49,0.58,53,1.693,54,1.044,76,0.842,96,1.555,98,2.24,101,1.693,103,2.136,111,2.24,125,2.467,137,3.583,147,1.098,148,1.407,174,2.325,178,1.363,179,1.021,180,1.363,192,1.208,208,1.302,216,2.24,217,1.816,221,2.545,231,2.24,243,1.816,336,3.939,344,2.24,345,2.004,347,2.545,467,1.816,471,2.24,519,2.24,524,3.583,525,4.483,526,3.583,530,2.556,531,2.556,532,2.325,543,2.556,544,3.036,545,4.913,546,3.036,547,3.036,548,3.036,549,4.255,550,3.036,551,3.036,552,3.036,553,3.036,554,3.036,555,2.556,556,3.036,557,3.036,558,3.036]],["title/injectables/TransformInterceptor.html",[147,0.861,304,1.545]],["body/injectables/TransformInterceptor.html",[0,0.047,3,0.336,4,0.296,5,0.296,8,0.421,13,0.512,14,0.028,19,0.665,26,0.439,35,0.439,39,0.02,40,0.02,45,1.368,48,1.047,49,0.721,54,1.298,121,1.619,147,1.273,148,1.748,178,1.208,179,0.905,180,1.208,187,2.062,188,4.052,192,1.962,203,2.784,251,1.619,261,2.257,304,2.284,350,2.784,351,4.151,352,3.177,353,4.903,354,4.903,355,4.151,356,3.177,357,4.624,358,2.784,359,4.624,360,4.151,361,3.177,559,3.774,560,3.774]],["title/classes/UpdateUserDto.html",[0,0.042,561,2.201]],["body/classes/UpdateUserDto.html",[0,0.059,2,2.18,3,0.419,4,0.369,5,0.369,14,0.027,26,0.504,28,1.872,35,0.419,39,0.023,40,0.023,240,2.362,242,3.106,340,2.814,561,3.738,562,3.962,563,4.705,564,3.472,565,4.705,566,4.705]],["title/classes/User.html",[0,0.042,96,0.925]],["body/classes/User.html",[0,0.059,2,1.65,3,0.317,4,0.279,5,0.279,8,0.397,9,2.035,13,0.773,14,0.028,16,1.755,19,0.94,21,1.952,26,0.475,31,3.192,32,1.945,33,1.317,35,0.475,39,0.019,40,0.019,76,0.988,96,1.481,97,1.65,121,2.543,179,1.28,208,1.527,243,3.192,282,3.523,283,2.035,284,2.35,285,3.995,287,2.35,288,3.501,467,2.129,567,2.35,568,5.337,569,3.561,570,4.745,571,3.561,572,3.561,573,2.998]],["title/controllers/UsersController.html",[41,1.147,574,2.201]],["body/controllers/UsersController.html",[0,0.031,3,0.225,4,0.198,5,0.198,8,0.282,13,0.602,14,0.028,16,1.809,19,0.862,21,1.419,26,0.503,28,1.006,35,0.225,39,0.015,40,0.015,41,0.869,43,0.935,45,1.035,48,1.357,49,0.483,53,1.484,54,1.683,96,0.701,121,1.599,125,2.741,162,4.167,174,1.381,176,2.053,178,1.419,179,1.063,180,1.419,186,3.14,187,3.085,191,1.865,192,1.006,201,1.668,204,1.511,208,1.084,209,2.128,221,2.65,232,1.872,240,2.741,293,1.668,298,1.668,302,2.462,303,1.668,304,1.728,309,1.668,310,1.668,340,2.65,341,2.752,347,2.23,419,2.225,426,2.128,529,2.128,564,1.865,574,2.462,575,2.128,576,4.119,577,3.14,578,3.14,579,2.527,580,3.729,581,2.527,582,2.527,583,2.128,584,3.729,585,2.527,586,2.527,587,3.729,588,2.527,589,2.128,590,2.128,591,2.527,592,2.527,593,2.527,594,2.527,595,2.527,596,2.527,597,2.527,598,2.527,599,2.527,600,2.527,601,3.729,602,2.527,603,2.527,604,2.527,605,2.527,606,2.527,607,2.527]],["title/modules/UsersModule.html",[56,1.147,66,1.674]],["body/modules/UsersModule.html",[0,0.038,3,0.271,4,0.239,5,0.239,13,0.414,14,0.028,19,0.537,26,0.542,35,0.271,39,0.017,40,0.017,43,1.577,45,0.845,48,0.845,49,0.582,56,1.467,58,1.306,59,1.976,64,3.178,66,3.109,67,2.33,68,1.664,69,1.664,71,2.55,72,2.33,75,1.664,76,0.845,77,3.59,79,2.01,89,2.564,96,0.845,97,1.976,153,1.664,176,2.965,178,0.975,179,1.023,180,0.975,283,1.306,320,2.247,321,3.146,322,3.934,324,3.146,325,2.247,327,2.247,329,1.821,394,1.664,432,3.146,434,2.564,574,3.248,589,2.564,608,2.564,609,2.564,610,3.045,611,2.564,612,3.045,613,3.045,614,3.045,615,3.045,616,2.564,617,3.045,618,3.045,619,3.045,620,3.045,621,3.045,622,3.045,623,3.045]],["title/injectables/UsersService.html",[147,0.861,176,1.545]],["body/injectables/UsersService.html",[0,0.021,3,0.147,4,0.129,5,0.129,8,0.184,13,0.459,14,0.028,19,0.807,21,1.082,26,0.448,33,0.61,35,0.147,39,0.011,40,0.011,45,0.743,48,1.482,49,0.315,53,1.065,54,1.576,76,0.457,78,3.275,79,1.088,96,1.595,114,2.254,125,2.609,134,1.975,147,0.691,148,0.764,155,2.423,158,3.997,161,2.254,174,1.462,176,1.24,178,1.545,179,1.099,180,1.369,192,2.001,204,2.326,205,2.254,208,1.965,216,1.216,217,0.986,220,1.601,221,2.021,231,1.975,232,2.744,238,2.845,240,2.3,243,1.601,249,1.975,252,0.986,336,2.567,340,0.986,344,1.216,345,1.088,347,1.601,383,1.216,403,1.216,404,1.088,443,2.254,455,3.857,467,0.986,469,1.388,471,1.216,555,1.388,561,1.088,564,1.975,576,3.275,577,2.845,578,2.254,583,2.254,590,1.388,616,1.388,624,1.388,625,5.572,626,4.826,627,2.677,628,2.677,629,3.379,630,2.677,631,2.677,632,1.649,633,3.379,634,1.649,635,1.649,636,1.649,637,2.677,638,1.649,639,4.277,640,2.677,641,2.677,642,2.677,643,1.649,644,2.677,645,2.677,646,2.677,647,2.677,648,2.677,649,2.254,650,2.254,651,2.677,652,1.649,653,3.889,654,1.649,655,1.388,656,1.388,657,1.649,658,1.649,659,2.677,660,1.649,661,2.677,662,1.649,663,1.649,664,1.649,665,1.649,666,1.649,667,1.649,668,1.649,669,1.649,670,1.649,671,2.677,672,1.649,673,1.649,674,2.677,675,1.649,676,1.649,677,2.677]],["title/coverage.html",[678,3.35]],["body/coverage.html",[0,0.072,1,1.647,5,0.216,6,2.319,7,2.319,13,0.374,14,0.028,39,0.016,40,0.016,41,1.858,42,1.818,44,2.319,50,1.505,96,0.764,97,1.276,101,1.096,103,1.383,106,1.276,147,1.497,149,2.319,153,1.505,154,2.319,176,1.276,187,1.505,195,2.319,217,1.647,240,1.383,241,2.93,242,3.074,251,1.997,252,1.647,253,1.818,255,2.319,256,2.319,263,2.621,289,1.647,291,1.818,292,2.319,304,1.276,307,1.505,332,2.319,350,2.93,362,2.621,375,4.922,409,1.647,411,1.818,412,2.319,419,1.383,441,2.319,506,1.647,509,2.375,521,1.818,522,2.319,532,1.505,543,2.319,561,1.818,562,2.319,567,2.621,574,1.818,575,2.319,624,2.319,678,2.033,679,2.755,680,2.755,681,2.755,682,5.096,683,5.096,684,5.8,685,3.971,686,5.096,687,5.628,688,2.319,689,2.319,690,2.755,691,2.755,692,2.755,693,2.755,694,2.755,695,2.755,696,2.755,697,2.755,698,2.755]],["title/dependencies.html",[59,1.857,699,2.79]],["body/dependencies.html",[0,0.06,14,0.028,28,1.453,32,1.995,33,1.35,39,0.02,40,0.02,49,0.697,59,1.692,76,1.013,79,2.41,86,3.074,87,3.074,90,3.074,93,3.074,95,3.074,159,3.074,201,3.795,358,2.694,464,3.074,466,3.074,655,3.074,700,3.651,701,3.651,702,3.651,703,3.651,704,5.404,705,3.651,706,3.651,707,3.651,708,3.651,709,3.651,710,3.651,711,3.651,712,3.651,713,3.651,714,3.651,715,3.651,716,3.651,717,3.651,718,3.651,719,3.651,720,3.651,721,3.651,722,3.651,723,3.651,724,3.651,725,3.651,726,3.651,727,3.651,728,3.651,729,3.651,730,3.651,731,3.651,732,3.651,733,3.651,734,3.651,735,3.651]],["title/miscellaneous/enumerations.html",[736,1.293,737,3.374]],["body/miscellaneous/enumerations.html",[8,0.527,14,0.027,15,4.19,39,0.023,40,0.023,509,2.827,514,3.98,515,3.98,516,4.782,517,4.782,518,4.782,736,2.19,737,3.98,738,3.488,739,5.317]],["title/miscellaneous/functions.html",[736,1.293,740,3.374]],["body/miscellaneous/functions.html",[8,0.567,14,0.024,39,0.024,40,0.024,688,4.281,689,5.285,736,2.356,740,4.281,741,5.084]],["title/index.html",[8,0.311,742,2.79,743,2.79]],["body/index.html",[4,0.28,14,0.027,39,0.019,40,0.019,88,3.009,115,4.501,155,1.794,649,3.009,650,3.009,678,2.637,744,3.573,745,3.573,746,4.756,747,3.573,748,3.573,749,3.573,750,3.573,751,3.573,752,3.573,753,3.573,754,3.573,755,6.23,756,3.573,757,3.573,758,3.573,759,6.104,760,3.573,761,3.573,762,4.756,763,3.573,764,3.573,765,3.573,766,3.573,767,4.756,768,4.756,769,3.573,770,3.573,771,3.573,772,4.756,773,4.756,774,3.573,775,3.573,776,3.573,777,3.573,778,3.573,779,3.009,780,3.573,781,3.573,782,3.573,783,3.573,784,3.573,785,3.573,786,3.573,787,3.573,788,3.573,789,3.573,790,3.573,791,3.573,792,3.573,793,3.573,794,3.573,795,3.573,796,3.573]],["title/modules.html",[58,1.947]],["body/modules.html",[14,0.023,39,0.023,40,0.023,57,3.021,58,1.963,63,2.737,64,2.501,65,2.737,66,2.298,99,3.021,779,5.39,797,6.402,798,6.402,799,6.51,800,4.577,801,4.577]],["title/overview.html",[802,3.822]],["body/overview.html",[2,1.577,14,0.027,39,0.019,40,0.019,43,1.259,50,2.85,57,4.303,58,1.46,59,2.133,60,2.867,61,2.867,62,2.867,63,3.68,64,3.362,65,3.492,66,3.185,67,2.516,68,1.86,69,1.86,148,1.577,176,2.851,254,2.247,307,2.85,316,2.867,318,2.867,404,2.247,419,3.089,427,2.867,428,2.867,429,2.867,532,2.85,539,2.867,540,2.867,608,2.867,609,2.867,611,2.867,656,2.867,802,2.867,803,3.405,804,4.605]],["title/miscellaneous/typealiases.html",[736,1.293,805,4.007]],["body/miscellaneous/typealiases.html",[8,0.535,13,0.651,14,0.023,39,0.023,40,0.023,263,3.165,286,4.226,362,3.165,390,4.226,467,3.425,509,2.867,519,4.226,567,3.165,736,2.221,738,3.538,806,4.795,807,4.037,808,4.037,809,4.037]],["title/miscellaneous/variables.html",[736,1.293,810,3.374]],["body/miscellaneous/variables.html",[8,0.499,14,0.027,39,0.023,40,0.023,97,2.545,263,2.955,289,3.285,290,3.769,362,2.955,397,5.219,409,3.285,410,3.769,506,3.285,509,2.677,520,3.769,567,2.955,573,3.769,736,2.074,738,3.303,739,5.219,807,3.769,808,3.769,809,3.769,810,3.769]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":383,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["1.1.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["1.17.2",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":496,"title":{},"body":{"injectables/RewardsService.html":{}}}],["2",{"_index":403,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["2.0.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":494,"title":{},"body":{"injectables/RewardsService.html":{}}}],["28",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":404,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["3.0.1",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["3.1.30",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":498,"title":{},"body":{"injectables/RewardsService.html":{}}}],["33",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":469,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["4.0.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":656,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["5.1.5",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["5.3.3",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":803,"title":{},"body":{"overview.html":{}}}],["6.0.13",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":804,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":568,"title":{},"body":{"classes/User.html":{}}}],["access",{"_index":164,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["accesstoken",{"_index":209,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{}}}],["accesstokenfromcookie",{"_index":210,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["accesstokenfromheader",{"_index":213,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["accordingly",{"_index":481,"title":{},"body":{"injectables/RewardsService.html":{}}}],["additem",{"_index":295,"title":{},"body":{"controllers/ItemsController.html":{}}}],["additem(@body",{"_index":313,"title":{},"body":{"controllers/ItemsController.html":{}}}],["additem(itemdata",{"_index":297,"title":{},"body":{"controllers/ItemsController.html":{}}}],["addstat",{"_index":524,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["addstat(@body",{"_index":536,"title":{},"body":{"controllers/StatsController.html":{}}}],["addstat(data",{"_index":526,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["addstatdto",{"_index":1,"title":{"classes/AddStatDto.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["admin",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["adminjs",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["adminjs.registeradapter(adminjsmongoose",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["adminjs/express",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["adminjs/mongoose",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["adminjs/nestjs",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["adminjsmongoose",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["adminjsoptions",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["adminmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["adminmodule.createadminasync",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allitems",{"_index":296,"title":{},"body":{"controllers/ItemsController.html":{}}}],["allot",{"_index":482,"title":{},"body":{"injectables/RewardsService.html":{}}}],["already",{"_index":485,"title":{},"body":{"injectables/RewardsService.html":{}}}],["amazing",{"_index":780,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":27,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["apiproperty()@isnotempty",{"_index":24,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@ismongoid",{"_index":22,"title":{},"body":{"classes/AddStatDto.html":{}}}],["apiproperty()@isnotempty()@prop({required",{"_index":270,"title":{},"body":{"classes/Item.html":{}}}],["apiproperty()@prop",{"_index":274,"title":{},"body":{"classes/Item.html":{}}}],["apiproperty({enum",{"_index":17,"title":{},"body":{"classes/AddStatDto.html":{}}}],["apiresponse",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["apitags",{"_index":309,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["apitags('items",{"_index":312,"title":{},"body":{"controllers/ItemsController.html":{}}}],["apitags('rewards",{"_index":422,"title":{},"body":{"controllers/RewardsController.html":{}}}],["apitags('stats",{"_index":534,"title":{},"body":{"controllers/StatsController.html":{}}}],["apitags('users",{"_index":593,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":757,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":42,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":750,"title":{},"body":{"index.html":{}}}],["applied",{"_index":396,"title":{},"body":{"classes/Reward.html":{}}}],["apply(authmiddleware",{"_index":618,"title":{},"body":{"modules/UsersModule.html":{}}}],["appmodule",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["appservice",{"_index":50,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigned",{"_index":395,"title":{},"body":{"classes/Reward.html":{}}}],["async",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["authmiddleware",{"_index":153,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["author",{"_index":789,"title":{},"body":{"index.html":{}}}],["available",{"_index":801,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":436,"title":{},"body":{"modules/RewardsModule.html":{}}}],["await",{"_index":221,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":781,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":549,"title":{},"body":{"injectables/StatsService.html":{}}}],["being",{"_index":183,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["belongs",{"_index":408,"title":{},"body":{"classes/Reward.html":{}}}],["between",{"_index":171,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["body",{"_index":302,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":261,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"injectables/TransformInterceptor.html":{}}}],["bootstrap",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":490,"title":{},"body":{"injectables/RewardsService.html":{}}}],["browse",{"_index":799,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":797,"title":{},"body":{"modules.html":{}}}],["building",{"_index":747,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":353,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["care",{"_index":166,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["catch",{"_index":236,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["check",{"_index":157,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/RewardsService.html":{}}}],["checkandissuerewards",{"_index":445,"title":{},"body":{"injectables/RewardsService.html":{}}}],["checkandissuerewards(userid",{"_index":453,"title":{},"body":{"injectables/RewardsService.html":{}}}],["circular",{"_index":437,"title":{},"body":{"modules/RewardsModule.html":{}}}],["class",{"_index":0,"title":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/Reward.html":{}}}],["clientid",{"_index":168,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["clientidfromcookie",{"_index":211,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["clientidfromheader",{"_index":214,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["clients",{"_index":172,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["cluster_appmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_itemsmodule",{"_index":316,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_itemsmodule_imports",{"_index":317,"title":{},"body":{"modules/ItemsModule.html":{}}}],["cluster_itemsmodule_providers",{"_index":318,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_rewardsmodule",{"_index":427,"title":{},"body":{"modules/RewardsModule.html":{},"overview.html":{}}}],["cluster_rewardsmodule_exports",{"_index":429,"title":{},"body":{"modules/RewardsModule.html":{},"overview.html":{}}}],["cluster_rewardsmodule_providers",{"_index":428,"title":{},"body":{"modules/RewardsModule.html":{},"overview.html":{}}}],["cluster_statsmodule",{"_index":539,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_statsmodule_providers",{"_index":540,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":608,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":609,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":610,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":611,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":363,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["coming",{"_index":225,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["config",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["config/configuration",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["configservice.get('mongo_uri",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":320,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":321,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["console.log(adminjsmongoose",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(e",{"_index":239,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["const",{"_index":208,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Item.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":174,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(itemmodel",{"_index":335,"title":{},"body":{"injectables/ItemsService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{}}}],["constructor(rewardmodel",{"_index":450,"title":{},"body":{"injectables/RewardsService.html":{}}}],["constructor(statsmodel",{"_index":544,"title":{},"body":{"injectables/StatsService.html":{}}}],["constructor(usermodel",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":175,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["consumer",{"_index":324,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(itemscontroller",{"_index":331,"title":{},"body":{"modules/ItemsModule.html":{}}}],["consumer.apply(authmiddleware).forroutes(rewardscontroller",{"_index":440,"title":{},"body":{"modules/RewardsModule.html":{}}}],["context",{"_index":360,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":41,"title":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('items",{"_index":311,"title":{},"body":{"controllers/ItemsController.html":{}}}],["controller('rewards",{"_index":421,"title":{},"body":{"controllers/RewardsController.html":{}}}],["controller('stats",{"_index":535,"title":{},"body":{"controllers/StatsController.html":{}}}],["controller('user",{"_index":592,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":159,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["cookie/header",{"_index":235,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["cookies",{"_index":648,"title":{},"body":{"injectables/UsersService.html":{}}}],["coverage",{"_index":678,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":340,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(createuserdto",{"_index":579,"title":{},"body":{"controllers/UsersController.html":{}}}],["created",{"_index":342,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createitem",{"_index":333,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createitem(data",{"_index":338,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createreward",{"_index":446,"title":{},"body":{"injectables/RewardsService.html":{}}}],["createreward(userid",{"_index":456,"title":{},"body":{"injectables/RewardsService.html":{}}}],["createuserdto",{"_index":240,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.clientid",{"_index":604,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto.phonenumber",{"_index":661,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.username",{"_index":666,"title":{},"body":{"injectables/UsersService.html":{}}}],["curent",{"_index":194,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["current",{"_index":193,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["currenttier",{"_index":257,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"injectables/RewardsService.html":{}}}],["customalphabet",{"_index":465,"title":{},"body":{"injectables/RewardsService.html":{}}}],["customalphabet('123456789",{"_index":475,"title":{},"body":{"injectables/RewardsService.html":{}}}],["customalphabet('abcdefghijklmnopqr",{"_index":473,"title":{},"body":{"injectables/RewardsService.html":{}}}],["data",{"_index":192,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["data.event",{"_index":557,"title":{},"body":{"injectables/StatsService.html":{}}}],["data.itemid",{"_index":556,"title":{},"body":{"injectables/StatsService.html":{}}}],["data.token",{"_index":601,"title":{},"body":{"controllers/UsersController.html":{}}}],["data.userphonenumber",{"_index":553,"title":{},"body":{"injectables/StatsService.html":{}}}],["database",{"_index":344,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":377,"title":{},"body":{"classes/Reward.html":{}}}],["date(moment().add(2",{"_index":478,"title":{},"body":{"injectables/RewardsService.html":{}}}],["date(moment().toisostring",{"_index":502,"title":{},"body":{"injectables/RewardsService.html":{}}}],["decoded",{"_index":675,"title":{},"body":{"injectables/UsersService.html":{}}}],["decoded.id",{"_index":677,"title":{},"body":{"injectables/UsersService.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":397,"title":{},"body":{"classes/Reward.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":418,"title":{},"body":{"controllers/RewardsController.html":{}}}],["denotes",{"_index":405,"title":{},"body":{"classes/Reward.html":{}}}],["dep",{"_index":438,"title":{},"body":{"modules/RewardsModule.html":{}}}],["dependencies",{"_index":59,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":155,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Item.html":{},"injectables/ItemsService.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["dev.env",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["development",{"_index":758,"title":{},"body":{"index.html":{}}}],["different",{"_index":406,"title":{},"body":{"classes/Reward.html":{}}}],["differentiate",{"_index":170,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["discountpercentage",{"_index":364,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["document",{"_index":285,"title":{},"body":{"classes/Item.html":{},"classes/User.html":{}}}],["documentation",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["dto/add",{"_index":530,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["dto/create",{"_index":590,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":654,"title":{},"body":{"injectables/UsersService.html":{}}}],["e",{"_index":237,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["e2e",{"_index":769,"title":{},"body":{"index.html":{}}}],["ease",{"_index":163,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["efficient",{"_index":748,"title":{},"body":{"index.html":{}}}],["entities/existing",{"_index":468,"title":{},"body":{"injectables/RewardsService.html":{}}}],["enum",{"_index":36,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{}}}],["enumerations",{"_index":737,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envfilepath",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":231,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["event",{"_index":10,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{}}}],["exception",{"_index":207,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["exclude",{"_index":619,"title":{},"body":{"modules/UsersModule.html":{}}}],["executioncontext",{"_index":354,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["existing",{"_index":657,"title":{},"body":{"injectables/UsersService.html":{}}}],["existinguser",{"_index":659,"title":{},"body":{"injectables/UsersService.html":{}}}],["existinguser._id.tostring",{"_index":664,"title":{},"body":{"injectables/UsersService.html":{}}}],["expired",{"_index":399,"title":{},"body":{"classes/Reward.html":{}}}],["expires",{"_index":365,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["expiresin",{"_index":672,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":432,"title":{},"body":{"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":201,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":565,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false",{"_index":379,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["fetch",{"_index":443,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":576,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallitems",{"_index":334,"title":{},"body":{"injectables/ItemsService.html":{}}}],["findone",{"_index":577,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":606,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":583,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["form",{"_index":234,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["formidable",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["forroutes(userscontroller",{"_index":623,"title":{},"body":{"modules/UsersModule.html":{}}}],["forwardref",{"_index":434,"title":{},"body":{"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/StatsService.html":{}}}],["framework",{"_index":746,"title":{},"body":{"index.html":{}}}],["function",{"_index":195,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":740,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":627,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatecode",{"_index":447,"title":{},"body":{"injectables/RewardsService.html":{}}}],["generated",{"_index":641,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatetoken",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatetoken(id",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{}}}],["generation",{"_index":640,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(':id",{"_index":584,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('profile",{"_index":587,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user",{"_index":415,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallrewards",{"_index":413,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallrewards(@req",{"_index":423,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallrewards(request",{"_index":414,"title":{},"body":{"controllers/RewardsController.html":{}}}],["getallstats",{"_index":525,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["gethello",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmodeltoken",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(item.name",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(reward.name",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(stat.name",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["getmodeltoken(user.name",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["getrewardsforuser",{"_index":448,"title":{},"body":{"injectables/RewardsService.html":{}}}],["getrewardsforuser(userid",{"_index":460,"title":{},"body":{"injectables/RewardsService.html":{}}}],["getting",{"_index":742,"title":{"index.html":{}},"body":{}}],["given",{"_index":499,"title":{},"body":{"injectables/RewardsService.html":{}}}],["graph",{"_index":800,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":776,"title":{},"body":{"index.html":{}}}],["handle",{"_index":431,"title":{},"body":{"modules/RewardsModule.html":{}}}],["happened",{"_index":401,"title":{},"body":{"classes/Reward.html":{}}}],["header",{"_index":219,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["hello",{"_index":151,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":786,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":197,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httponly",{"_index":602,"title":{},"body":{"controllers/UsersController.html":{}}}],["https://nestjs.com",{"_index":793,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":198,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpstatus.bad_request",{"_index":230,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["id",{"_index":232,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/RewardsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["iexistingrewardsforuser",{"_index":253,"title":{"interfaces/IExistingRewardsForUser.html":{}},"body":{"interfaces/IExistingRewardsForUser.html":{},"injectables/RewardsService.html":{},"coverage.html":{}}}],["imageurl",{"_index":264,"title":{},"body":{"classes/Item.html":{}}}],["imateapotexception",{"_index":550,"title":{},"body":{"injectables/StatsService.html":{}}}],["implement",{"_index":645,"title":{},"body":{"injectables/UsersService.html":{}}}],["implements",{"_index":203,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":147,"title":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":184,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["injectmodel",{"_index":345,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(item.name",{"_index":346,"title":{},"body":{"injectables/ItemsService.html":{}}}],["injectmodel(reward.name",{"_index":470,"title":{},"body":{"injectables/RewardsService.html":{}}}],["injectmodel(stat.name",{"_index":551,"title":{},"body":{"injectables/StatsService.html":{}}}],["injectmodel(user.name",{"_index":471,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":754,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":756,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":359,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":559,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interceptors/transform.interceptor",{"_index":529,"title":{},"body":{"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["interface",{"_index":251,"title":{"interfaces/IExistingRewardsForUser.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":254,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":238,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{}}}],["isenum",{"_index":29,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isenum(statevents",{"_index":38,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isexpired",{"_index":366,"title":{},"body":{"classes/Reward.html":{}}}],["isglobal",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":30,"title":{},"body":{"classes/AddStatDto.html":{}}}],["isnonveg",{"_index":265,"title":{},"body":{"classes/Item.html":{}}}],["isnotempty",{"_index":31,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/User.html":{}}}],["isnotempty()@prop({required",{"_index":570,"title":{},"body":{"classes/User.html":{}}}],["isredeemed",{"_index":367,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["item",{"_index":101,"title":{"classes/Item.html":{}},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["item.name",{"_index":330,"title":{},"body":{"modules/ItemsModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{}}}],["itemdata",{"_index":300,"title":{},"body":{"controllers/ItemsController.html":{}}}],["itemdocument",{"_index":286,"title":{},"body":{"classes/Item.html":{},"injectables/ItemsService.html":{},"miscellaneous/typealiases.html":{}}}],["itemid",{"_index":11,"title":{},"body":{"classes/AddStatDto.html":{}}}],["itemmodel",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/ItemsService.html":{}}}],["items",{"_index":294,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{}}}],["items.controller",{"_index":326,"title":{},"body":{"modules/ItemsModule.html":{}}}],["items.service",{"_index":308,"title":{},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{}}}],["items/items.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["items/schemas/item.schema",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/Stat.html":{}}}],["itemschema",{"_index":289,"title":{},"body":{"classes/Item.html":{},"modules/ItemsModule.html":{},"modules/SchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["itemscontroller",{"_index":291,"title":{"controllers/ItemsController.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"coverage.html":{}}}],["itemsmodule",{"_index":63,"title":{"modules/ItemsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules.html":{},"overview.html":{}}}],["itemsservice",{"_index":307,"title":{"injectables/ItemsService.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"coverage.html":{},"overview.html":{}}}],["join",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["jsonwebtoken",{"_index":655,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["jwt",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwt.sign",{"_index":670,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwt.verify(token",{"_index":676,"title":{},"body":{"injectables/UsersService.html":{}}}],["kamil",{"_index":790,"title":{},"body":{"index.html":{}}}],["latest",{"_index":486,"title":{},"body":{"injectables/RewardsService.html":{}}}],["latesttier",{"_index":488,"title":{},"body":{"injectables/RewardsService.html":{}}}],["lean",{"_index":662,"title":{},"body":{"injectables/UsersService.html":{}}}],["license",{"_index":796,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":773,"title":{},"body":{"index.html":{}}}],["load",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":626,"title":{},"body":{"injectables/UsersService.html":{}}}],["login(createuserdto",{"_index":642,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserresponsedto",{"_index":252,"title":{"interfaces/LoginUserResponseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["maincategory",{"_index":266,"title":{},"body":{"classes/Item.html":{}}}],["map",{"_index":356,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["mark",{"_index":500,"title":{},"body":{"injectables/RewardsService.html":{}}}],["matching",{"_index":40,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":621,"title":{},"body":{"modules/UsersModule.html":{}}}],["methods",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["middleware",{"_index":156,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["middlewareconsumer",{"_index":322,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["miscellaneous",{"_index":736,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":233,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["mit",{"_index":772,"title":{},"body":{"index.html":{}}}],["mode",{"_index":762,"title":{},"body":{"index.html":{}}}],["model",{"_index":336,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["modelurl",{"_index":267,"title":{},"body":{"classes/Item.html":{}}}],["module",{"_index":56,"title":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":464,"title":{},"body":{"injectables/RewardsService.html":{},"dependencies.html":{}}}],["mongoose",{"_index":33,"title":{},"body":{"classes/AddStatDto.html":{},"modules/AppModule.html":{},"classes/Item.html":{},"injectables/ItemsService.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":391,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["mongoose.model",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose.schema.types.objectid",{"_index":393,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["mongoosemodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":329,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["month').toisostring",{"_index":479,"title":{},"body":{"injectables/RewardsService.html":{}}}],["more",{"_index":785,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":791,"title":{},"body":{"index.html":{}}}],["name",{"_index":179,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nanoid",{"_index":466,"title":{},"body":{"injectables/RewardsService.html":{},"dependencies.html":{}}}],["nanoid1",{"_index":472,"title":{},"body":{"injectables/RewardsService.html":{}}}],["nanoid2",{"_index":474,"title":{},"body":{"injectables/RewardsService.html":{}}}],["nest",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":795,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":355,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"interfaces/LoginUserResponseDto.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":199,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["new",{"_index":217,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newlyalloted",{"_index":258,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"injectables/RewardsService.html":{}}}],["next",{"_index":188,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":361,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nextfunction",{"_index":189,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":745,"title":{},"body":{"index.html":{}}}],["npm",{"_index":755,"title":{},"body":{"index.html":{}}}],["number",{"_index":260,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["object",{"_index":161,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{}}}],["object.values(statevents",{"_index":37,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{}}}],["observable",{"_index":357,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ones",{"_index":483,"title":{},"body":{"injectables/RewardsService.html":{}}}],["open",{"_index":774,"title":{},"body":{"index.html":{}}}],["optional",{"_index":180,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["otherwise",{"_index":226,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["otp",{"_index":646,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":802,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":699,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":204,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":178,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":563,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":566,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passthrough",{"_index":598,"title":{},"body":{"controllers/UsersController.html":{}}}],["passthrought",{"_index":196,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["patch",{"_index":417,"title":{},"body":{"controllers/RewardsController.html":{}}}],["path",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["percentage",{"_index":457,"title":{},"body":{"injectables/RewardsService.html":{}}}],["phonenumber",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["please",{"_index":783,"title":{},"body":{"index.html":{}}}],["post",{"_index":298,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":580,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":293,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":347,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prod.env",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":764,"title":{},"body":{"index.html":{}}}],["profile",{"_index":578,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["profile(@req",{"_index":594,"title":{},"body":{"controllers/UsersController.html":{}}}],["profile(request",{"_index":586,"title":{},"body":{"controllers/UsersController.html":{}}}],["progressive",{"_index":744,"title":{},"body":{"index.html":{}}}],["project",{"_index":775,"title":{},"body":{"index.html":{}}}],["promise",{"_index":455,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":282,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["prop({default",{"_index":374,"title":{},"body":{"classes/Reward.html":{}}}],["prop({enum",{"_index":510,"title":{},"body":{"classes/Stat.html":{}}}],["prop({required",{"_index":370,"title":{},"body":{"classes/Reward.html":{}}}],["prop({requried",{"_index":372,"title":{},"body":{"classes/Reward.html":{}}}],["prop({type",{"_index":385,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["providers",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["rate",{"_index":268,"title":{},"body":{"classes/Item.html":{}}}],["read",{"_index":784,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["redeem",{"_index":442,"title":{},"body":{"injectables/RewardsService.html":{}}}],["redeemcode",{"_index":449,"title":{},"body":{"injectables/RewardsService.html":{}}}],["redeemcode(code",{"_index":462,"title":{},"body":{"injectables/RewardsService.html":{}}}],["redeemed",{"_index":402,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["redeemedon",{"_index":368,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["redemption",{"_index":400,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["ref",{"_index":387,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["reflect",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":753,"title":{},"body":{"index.html":{}}}],["req",{"_index":191,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{}}}],["req.clientid",{"_index":228,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.cookies",{"_index":212,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.headers",{"_index":215,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["req.user",{"_index":224,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request",{"_index":162,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/RewardsController.html":{},"controllers/UsersController.html":{}}}],["request.clientid",{"_index":426,"title":{},"body":{"controllers/RewardsController.html":{},"controllers/UsersController.html":{}}}],["request.user",{"_index":597,"title":{},"body":{"controllers/UsersController.html":{}}}],["request.user._id",{"_index":596,"title":{},"body":{"controllers/UsersController.html":{}}}],["request.user?._id",{"_index":425,"title":{},"body":{"controllers/RewardsController.html":{}}}],["requestmethod",{"_index":614,"title":{},"body":{"modules/UsersModule.html":{}}}],["requestmethod.post",{"_index":622,"title":{},"body":{"modules/UsersModule.html":{}}}],["required",{"_index":288,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/User.html":{}}}],["requried",{"_index":169,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Reward.html":{}}}],["res",{"_index":186,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UsersController.html":{}}}],["res.cookie('clientid",{"_index":227,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcewithoptions",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":187,"title":{"interfaces/Response.html":{}},"body":{"injectables/AuthMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["response.cookie('accesstoken",{"_index":600,"title":{},"body":{"controllers/UsersController.html":{}}}],["response.cookie('clientid",{"_index":603,"title":{},"body":{"controllers/UsersController.html":{}}}],["results",{"_index":39,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"interfaces/Response.html":{},"controllers/RewardsController.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["reward",{"_index":106,"title":{"classes/Reward.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"coverage.html":{}}}],["reward.isredeemed",{"_index":489,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward.name",{"_index":439,"title":{},"body":{"modules/RewardsModule.html":{},"modules/SchemaModule.html":{}}}],["reward.tier",{"_index":491,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward1",{"_index":492,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward2",{"_index":495,"title":{},"body":{"injectables/RewardsService.html":{}}}],["reward3",{"_index":497,"title":{},"body":{"injectables/RewardsService.html":{}}}],["rewarddocument",{"_index":390,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{},"miscellaneous/typealiases.html":{}}}],["rewardmodel",{"_index":452,"title":{},"body":{"injectables/RewardsService.html":{}}}],["rewards",{"_index":259,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{}}}],["rewards.controller",{"_index":435,"title":{},"body":{"modules/RewardsModule.html":{}}}],["rewards.length",{"_index":487,"title":{},"body":{"injectables/RewardsService.html":{}}}],["rewards.service",{"_index":420,"title":{},"body":{"controllers/RewardsController.html":{},"modules/RewardsModule.html":{}}}],["rewards.ts",{"_index":256,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"coverage.html":{}}}],["rewards/rewards.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["rewards/schemas/reward.schema",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["rewardschema",{"_index":409,"title":{},"body":{"classes/Reward.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rewardscontroller",{"_index":411,"title":{"controllers/RewardsController.html":{}},"body":{"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"coverage.html":{}}}],["rewardsmodel",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["rewardsmodule",{"_index":64,"title":{"modules/RewardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rewardsservice",{"_index":419,"title":{"injectables/RewardsService.html":{}},"body":{"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["rimraf",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":759,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":358,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["scalable",{"_index":749,"title":{},"body":{"index.html":{}}}],["schema",{"_index":283,"title":{},"body":{"classes/Item.html":{},"modules/ItemsModule.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/schema.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["schemafactory",{"_index":284,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(item",{"_index":290,"title":{},"body":{"classes/Item.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(reward",{"_index":410,"title":{},"body":{"classes/Reward.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stat",{"_index":520,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":573,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemamodule",{"_index":99,"title":{"modules/SchemaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchemaModule.html":{},"modules.html":{}}}],["schemas/item.schema",{"_index":306,"title":{},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{}}}],["schemas/reward.schema",{"_index":262,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{}}}],["schemas/stat.schema",{"_index":34,"title":{},"body":{"classes/AddStatDto.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["schemas/user.schema",{"_index":616,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":674,"title":{},"body":{"injectables/UsersService.html":{}}}],["send",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/UsersService.html":{}}}],["server",{"_index":649,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["servestaticmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":182,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["session",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":160,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["setting",{"_index":167,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["shall",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["shown",{"_index":392,"title":{},"body":{"classes/Reward.html":{}}}],["side",{"_index":650,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["smartly",{"_index":658,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":778,"title":{},"body":{"index.html":{}}}],["src/.../item.schema.ts",{"_index":807,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reward.schema.ts",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../stat.schema.ts",{"_index":738,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":149,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":150,"title":{},"body":{"injectables/AppService.html":{}}}],["src/interceptors/transform.interceptor",{"_index":305,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{}}}],["src/interceptors/transform.interceptor.ts",{"_index":350,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/transform.interceptor.ts:18",{"_index":560,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/items/items.controller.ts",{"_index":292,"title":{},"body":{"controllers/ItemsController.html":{},"coverage.html":{}}}],["src/items/items.controller.ts:14",{"_index":299,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.controller.ts:19",{"_index":301,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.module.ts",{"_index":319,"title":{},"body":{"modules/ItemsModule.html":{}}}],["src/items/items.module.ts:19",{"_index":323,"title":{},"body":{"modules/ItemsModule.html":{}}}],["src/items/items.service.ts",{"_index":332,"title":{},"body":{"injectables/ItemsService.html":{},"coverage.html":{}}}],["src/items/items.service.ts:17",{"_index":339,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:25",{"_index":343,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:7",{"_index":337,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/schemas/item.schema",{"_index":504,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/items/schemas/item.schema.ts",{"_index":263,"title":{},"body":{"classes/Item.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/items/schemas/item.schema.ts:15",{"_index":273,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:20",{"_index":279,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:25",{"_index":271,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:30",{"_index":277,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:35",{"_index":281,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:40",{"_index":280,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:45",{"_index":276,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:49",{"_index":275,"title":{},"body":{"classes/Item.html":{}}}],["src/items/schemas/item.schema.ts:53",{"_index":278,"title":{},"body":{"classes/Item.html":{}}}],["src/main.ts",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/auth.middleware",{"_index":327,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["src/middlewares/auth.middleware.ts",{"_index":154,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/auth.middleware.ts:18",{"_index":177,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/middlewares/auth.middleware.ts:32",{"_index":190,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/rewards/entities/existing",{"_index":255,"title":{},"body":{"interfaces/IExistingRewardsForUser.html":{},"coverage.html":{}}}],["src/rewards/rewards.controller.ts",{"_index":412,"title":{},"body":{"controllers/RewardsController.html":{},"coverage.html":{}}}],["src/rewards/rewards.controller.ts:24",{"_index":416,"title":{},"body":{"controllers/RewardsController.html":{}}}],["src/rewards/rewards.module",{"_index":617,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/rewards/rewards.module.ts",{"_index":430,"title":{},"body":{"modules/RewardsModule.html":{}}}],["src/rewards/rewards.module.ts:25",{"_index":433,"title":{},"body":{"modules/RewardsModule.html":{}}}],["src/rewards/rewards.service",{"_index":591,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/rewards/rewards.service.ts",{"_index":441,"title":{},"body":{"injectables/RewardsService.html":{},"coverage.html":{}}}],["src/rewards/rewards.service.ts:18",{"_index":451,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:25",{"_index":459,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:31",{"_index":458,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:47",{"_index":461,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:55",{"_index":454,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/rewards.service.ts:87",{"_index":463,"title":{},"body":{"injectables/RewardsService.html":{}}}],["src/rewards/schemas/reward.schema",{"_index":505,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/rewards/schemas/reward.schema.ts",{"_index":362,"title":{},"body":{"classes/Reward.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/rewards/schemas/reward.schema.ts:12",{"_index":373,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:15",{"_index":388,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:18",{"_index":371,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:21",{"_index":378,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:24",{"_index":380,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:27",{"_index":382,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:30",{"_index":381,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:33",{"_index":384,"title":{},"body":{"classes/Reward.html":{}}}],["src/rewards/schemas/reward.schema.ts:36",{"_index":376,"title":{},"body":{"classes/Reward.html":{}}}],["src/schema/schema.module.ts",{"_index":503,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/stats/dto/add",{"_index":6,"title":{},"body":{"classes/AddStatDto.html":{},"coverage.html":{}}}],["src/stats/schemas/stat.schema",{"_index":507,"title":{},"body":{"modules/SchemaModule.html":{}}}],["src/stats/schemas/stat.schema.ts",{"_index":509,"title":{},"body":{"classes/Stat.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stats/schemas/stat.schema.ts:18",{"_index":513,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/schemas/stat.schema.ts:21",{"_index":511,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/schemas/stat.schema.ts:24",{"_index":512,"title":{},"body":{"classes/Stat.html":{}}}],["src/stats/stats.controller.ts",{"_index":522,"title":{},"body":{"controllers/StatsController.html":{},"coverage.html":{}}}],["src/stats/stats.controller.ts:14",{"_index":527,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.controller.ts:19",{"_index":528,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.module.ts",{"_index":541,"title":{},"body":{"modules/StatsModule.html":{}}}],["src/stats/stats.service.ts",{"_index":543,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["src/stats/stats.service.ts:13",{"_index":546,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:18",{"_index":547,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:33",{"_index":548,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/users/dto/create",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":562,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":389,"title":{},"body":{"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":567,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":571,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":572,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:9",{"_index":569,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:28",{"_index":588,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":581,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:50",{"_index":582,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:55",{"_index":585,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":328,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{}}}],["src/users/users.module.ts",{"_index":612,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:26",{"_index":613,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":202,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/ItemsModule.html":{}}}],["src/users/users.service.ts",{"_index":624,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:18",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":643,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:58",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:67",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:88",{"_index":652,"title":{},"body":{"injectables/UsersService.html":{}}}],["staging.env",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":760,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":763,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":765,"title":{},"body":{"index.html":{}}}],["started",{"_index":743,"title":{"index.html":{}},"body":{}}],["starter",{"_index":752,"title":{},"body":{"index.html":{}}}],["stat",{"_index":103,"title":{"classes/Stat.html":{}},"body":{"modules/AppModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["stat.dto",{"_index":531,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["stat.dto.ts",{"_index":7,"title":{},"body":{"classes/AddStatDto.html":{},"coverage.html":{}}}],["stat.dto.ts:16",{"_index":20,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.dto.ts:21",{"_index":23,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.dto.ts:9",{"_index":25,"title":{},"body":{"classes/AddStatDto.html":{}}}],["stat.name",{"_index":508,"title":{},"body":{"modules/SchemaModule.html":{},"modules/StatsModule.html":{}}}],["statdocument",{"_index":519,"title":{},"body":{"classes/Stat.html":{},"injectables/StatsService.html":{},"miscellaneous/typealiases.html":{}}}],["statements",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["statevents",{"_index":15,"title":{},"body":{"classes/AddStatDto.html":{},"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statistics",{"_index":444,"title":{},"body":{"injectables/RewardsService.html":{}}}],["stats",{"_index":523,"title":{},"body":{"controllers/StatsController.html":{}}}],["stats.controller",{"_index":542,"title":{},"body":{"modules/StatsModule.html":{}}}],["stats.service",{"_index":533,"title":{},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{}}}],["stats/schemas/stat.schema",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["stats/stats.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["statschema",{"_index":506,"title":{},"body":{"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statscontroller",{"_index":521,"title":{"controllers/StatsController.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"coverage.html":{}}}],["statsmodel",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"injectables/StatsService.html":{}}}],["statsmodule",{"_index":65,"title":{"modules/StatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["statsservice",{"_index":532,"title":{"injectables/StatsService.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":229,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["stay",{"_index":787,"title":{},"body":{"index.html":{}}}],["store",{"_index":647,"title":{},"body":{"injectables/UsersService.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AddStatDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["subcategory",{"_index":269,"title":{},"body":{"classes/Item.html":{}}}],["success",{"_index":351,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["support",{"_index":779,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":798,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":352,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":165,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["tells",{"_index":398,"title":{},"body":{"classes/Reward.html":{}}}],["test",{"_index":768,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":771,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":770,"title":{},"body":{"index.html":{}}}],["tests",{"_index":767,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":777,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["this.config.get('jwt_expiry",{"_index":673,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.config.get('jwt_secret",{"_index":671,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.createreward(userid",{"_index":493,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.generatecode",{"_index":477,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.generatetoken(existinguser._id.tostring",{"_index":663,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatetoken(user._id",{"_index":667,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getrewardsforuser(userid",{"_index":484,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.itemmodel.create(data",{"_index":348,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.itemmodel.find",{"_index":349,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.itemsservice.createitem(itemdata",{"_index":314,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.itemsservice.findallitems",{"_index":315,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.rewardmodel.create",{"_index":476,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.rewardmodel.find",{"_index":480,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.rewardmodel.findoneandupdate",{"_index":501,"title":{},"body":{"injectables/RewardsService.html":{}}}],["this.rewardsservice.checkandissuerewards",{"_index":595,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.rewardsservice.getrewardsforuser",{"_index":424,"title":{},"body":{"controllers/RewardsController.html":{}}}],["this.statsmodel.create",{"_index":554,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsmodel.find().populate('user",{"_index":558,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.addstat(data",{"_index":537,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.statsservice.getallstats",{"_index":538,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.usermodel",{"_index":660,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.create",{"_index":665,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":668,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":669,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone(userid",{"_index":223,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.userservice.verifytoken(accesstoken",{"_index":222,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.usersmodel.findone",{"_index":552,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.usersservice.findall",{"_index":605,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":607,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.login(createuserdto",{"_index":599,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":216,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["throws",{"_index":205,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/UsersService.html":{}}}],["tier",{"_index":369,"title":{},"body":{"classes/Reward.html":{},"injectables/RewardsService.html":{}}}],["tiers",{"_index":407,"title":{},"body":{"classes/Reward.html":{}}}],["timestamps",{"_index":287,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{},"classes/Stat.html":{},"classes/User.html":{}}}],["todo",{"_index":644,"title":{},"body":{"injectables/UsersService.html":{}}}],["token",{"_index":158,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":788,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["transforminterceptor",{"_index":304,"title":{"injectables/TransformInterceptor.html":{}},"body":{"controllers/ItemsController.html":{},"interfaces/Response.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["true",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"classes/Item.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["try",{"_index":218,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["twitter",{"_index":794,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddStatDto.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/IExistingRewardsForUser.html":{},"classes/Item.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"interfaces/LoginUserResponseDto.html":{},"interfaces/Response.html":{},"classes/Reward.html":{},"controllers/RewardsController.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"classes/Stat.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":805,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":751,"title":{},"body":{"index.html":{}}}],["ui",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":206,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["unauthorizedexception",{"_index":200,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["undefined",{"_index":386,"title":{},"body":{"classes/Reward.html":{},"classes/Stat.html":{}}}],["undefined})@isnotempty()@isenum(statevents",{"_index":18,"title":{},"body":{"classes/AddStatDto.html":{}}}],["unique",{"_index":272,"title":{},"body":{"classes/Item.html":{},"classes/Reward.html":{}}}],["unit",{"_index":766,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":341,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RewardsService.html":{},"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":561,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uri",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":173,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":185,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["used",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["usefactory",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":303,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(new",{"_index":310,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RewardsController.html":{},"controllers/StatsController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":96,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"classes/Reward.html":{},"modules/RewardsModule.html":{},"injectables/RewardsService.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":625,"title":{},"body":{"injectables/UsersService.html":{}}}],["user._id",{"_index":555,"title":{},"body":{"injectables/StatsService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":564,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":394,"title":{},"body":{"classes/Reward.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"classes/Stat.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{}}}],["user/login",{"_index":620,"title":{},"body":{"modules/UsersModule.html":{}}}],["user_closed_model",{"_index":518,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_closed_view_ar",{"_index":516,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_opened_model",{"_index":517,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_opened_view_ar",{"_index":514,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["user_openen_view_ar",{"_index":515,"title":{},"body":{"classes/Stat.html":{},"miscellaneous/enumerations.html":{}}}],["userdocument",{"_index":467,"title":{},"body":{"injectables/RewardsService.html":{},"injectables/StatsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":220,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["usermodel",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/RewardsService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/LoginUserResponseDto.html":{}}}],["userphonenumber",{"_index":12,"title":{},"body":{"classes/AddStatDto.html":{}}}],["users",{"_index":629,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.controller",{"_index":615,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":589,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/schemas/user.schema",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/Stat.html":{},"injectables/StatsService.html":{}}}],["users/users.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/RewardsModule.html":{},"modules/SchemaModule.html":{},"modules/StatsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":574,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":181,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["usersmodel",{"_index":545,"title":{},"body":{"injectables/StatsService.html":{}}}],["usersmodule",{"_index":66,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":176,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/ItemsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":32,"title":{},"body":{"classes/AddStatDto.html":{},"classes/CreateUserDto.html":{},"classes/Item.html":{},"interfaces/LoginUserResponseDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":810,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":653,"title":{},"body":{"injectables/UsersService.html":{}}}],["verify",{"_index":628,"title":{},"body":{"injectables/UsersService.html":{}}}],["verifytoken",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["verifytoken(token",{"_index":651,"title":{},"body":{"injectables/UsersService.html":{}}}],["void",{"_index":325,"title":{},"body":{"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/UsersModule.html":{}}}],["watch",{"_index":761,"title":{},"body":{"index.html":{}}}],["website",{"_index":792,"title":{},"body":{"index.html":{}}}],["whichever",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":152,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":782,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules/RewardsModule.html":{},"modules/StatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddStatDto.html":{"url":"classes/AddStatDto.html","title":"class - AddStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/dto/add-stat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                itemId\n                            \n                            \n                                userPhoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatEvents\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})@IsNotEmpty()@IsEnum(StatEvents)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/dto/add-stat.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport * as mongoose from 'mongoose';\nimport { StatEvents } from '../schemas/stat.schema';\n\nexport class AddStatDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  userPhoneNumber: string;\n\n  @ApiProperty({\n    enum: Object.values(StatEvents),\n  })\n  @IsNotEmpty()\n  @IsEnum(StatEvents)\n  event: StatEvents;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsMongoId()\n  itemId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nItemsModule\n\nItemsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nRewardsModule\n\nRewardsModule\n\nAppModule -->\n\nRewardsModule->AppModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ItemsModule\n                        \n                        \n                            RewardsModule\n                        \n                        \n                            StatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { getModelToken, MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport configuration from 'config/configuration';\nimport { ItemsModule } from './items/items.module';\nimport { UsersModule } from './users/users.module';\nimport { StatsModule } from './stats/stats.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport AdminJS, { ResourceWithOptions } from 'adminjs';\nimport * as AdminJSMongoose from '@adminjs/mongoose';\nimport { AdminModule } from '@adminjs/nestjs';\nimport { User, UserSchema } from './users/schemas/user.schema';\nimport * as mongoose from 'mongoose';\nimport { SchemaModule } from './schema/schema.module';\nimport { Item } from './items/schemas/item.schema';\nimport { Stat } from './stats/schemas/stat.schema';\nimport { RewardsModule } from './rewards/rewards.module';\nimport { Reward } from './rewards/schemas/reward.schema';\n\nAdminJS.registerAdapter(AdminJSMongoose);\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      // Whichever is found first, shall be used by Nest\n      envFilePath: ['.prod.env', '.dev.env', '.staging.env'],\n      isGlobal: true,\n      load: [configuration],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URI'),\n      }),\n      inject: [ConfigService],\n    }),\n    AdminModule.createAdminAsync({\n      imports: [SchemaModule],\n      inject: [\n        getModelToken(User.name),\n        getModelToken(Item.name),\n        getModelToken(Stat.name),\n        getModelToken(Reward.name),\n      ],\n      useFactory: (\n        userModel: mongoose.Model,\n        itemModel: mongoose.Model,\n        statsModel: mongoose.Model,\n        rewardsModel: mongoose.Model,\n      ) => ({\n        adminJsOptions: {\n          rootPath: '/admin',\n          resources: [userModel, itemModel, statsModel, rewardsModel],\n        },\n      }),\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client'),\n    }),\n    ItemsModule,\n    UsersModule,\n    StatsModule,\n    RewardsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\nconsole.log(AdminJSMongoose);\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/auth.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                \nA middleware to check for user token in the cookie\nand set the user object in the request for ease of access.\nAlso takes care of setting the clientId, which is requried\nto differentiate between clients\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/middlewares/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User Service being injected\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/auth.middleware.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The request data of the current request\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Response data of the curent request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next function passthrought\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction, response } from 'express';\nimport { UsersService } from 'src/users/users.service';\n\n/**\n * - A middleware to check for user token in the cookie\n * and set the user object in the request for ease of access.\n * - Also takes care of setting the `clientId`, which is requried\n * to differentiate between clients\n */\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  /**\n   *\n   * @param userService User Service being injected\n   */\n  constructor(private readonly userService: UsersService) {}\n\n  /**\n   *\n   * @param req The request data of the current request\n   * @param res Response data of the curent request\n   * @param next Next function passthrought\n   * @throws Unauthorized Exception\n   */\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { accessToken: accessTokenFromCookie, clientId: clientIdFromCookie } =\n      req.cookies;\n    const { accessToken: accessTokenFromHeader, clientId: clientIdFromHeader } =\n      req.headers;\n    if (!accessTokenFromCookie && !accessTokenFromHeader)\n      throw new UnauthorizedException();\n    try {\n      let accessToken;\n\n      // If the token is from cookie or header\n      if (accessTokenFromCookie) accessToken = accessTokenFromCookie;\n      else if (accessTokenFromHeader) accessToken = accessTokenFromHeader;\n\n      const userId = await this.userService.verifyToken(accessToken);\n      const user = await this.userService.findOne(userId);\n      if (!user) throw 'User not found';\n      req.user = user;\n\n      // If there is a clientId coming from the header, then use it\n      // Otherwise use the clientId coming from the cookie\n      if (clientIdFromCookie) {\n        res.cookie('clientId', clientIdFromCookie);\n        req.clientId = clientIdFromCookie;\n      } else if (clientIdFromHeader) {\n        res.cookie('clientId', clientIdFromHeader);\n        req.clientId = clientIdFromHeader as string;\n      } else {\n        throw new HttpException(\n          {\n            status: HttpStatus.BAD_REQUEST,\n            error: 'Client ID is missing form the request cookie/header',\n          },\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n      next();\n    } catch (e) {\n      // Invalid user\n      console.log(e);\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiResponse } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  phoneNumber: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  userName: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  clientId: string; // Client ID to send the appropriate data\n}\n\nexport interface LoginUserResponseDto {\n  token: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExistingRewardsForUser.html":{"url":"interfaces/IExistingRewardsForUser.html","title":"interface - IExistingRewardsForUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExistingRewardsForUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/entities/existing-rewards.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentTier\n                                        \n                                \n                                \n                                        \n                                            newlyAlloted\n                                        \n                                \n                                \n                                        \n                                            rewards\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentTier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentTier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newlyAlloted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newlyAlloted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rewards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rewards:         Reward[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reward[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Reward } from '../schemas/reward.schema';\n\nexport interface IExistingRewardsForUser {\n  rewards: Reward[];\n  newlyAlloted: boolean;\n  currentTier: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Item.html":{"url":"classes/Item.html","title":"class - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Item\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/schemas/item.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                isNonVeg\n                            \n                            \n                                mainCategory\n                            \n                            \n                                modelUrl\n                            \n                            \n                                name\n                            \n                            \n                                rate\n                            \n                            \n                                subCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNonVeg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/schemas/item.schema.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\nimport { Document } from 'mongoose';\n\nexport type ItemDocument = Item & Document;\n\n@Schema({\n  timestamps: true,\n})\nexport class Item {\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true, unique: true })\n  id: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  mainCategory: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  subCategory: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  rate: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Prop({ required: true })\n  isNonVeg: boolean;\n\n  @ApiProperty()\n  @Prop()\n  imageUrl: string;\n\n  @ApiProperty()\n  @Prop()\n  modelUrl: string;\n}\n\nexport const ItemSchema = SchemaFactory.createForClass(Item);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ItemsController.html":{"url":"controllers/ItemsController.html","title":"controller - ItemsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ItemsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                items\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                allItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(itemData: Item)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/items/items.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    itemData\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allItems\n                        \n                    \n                \n            \n            \n                \nallItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/items/items.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseInterceptors } from '@nestjs/common';\nimport { TransformInterceptor } from 'src/interceptors/transform.interceptor';\nimport { Item } from './schemas/item.schema';\nimport { ItemsService } from './items.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@UseInterceptors(new TransformInterceptor())\n@Controller('items')\n@ApiTags('Items')\nexport class ItemsController {\n  constructor(private readonly itemsService: ItemsService) {}\n\n  @Post()\n  addItem(@Body() itemData: Item) {\n    return this.itemsService.createItem(itemData);\n  }\n\n  @Get()\n  allItems() {\n    return this.itemsService.findAllItems();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ItemsModule.html":{"url":"modules/ItemsModule.html","title":"module - ItemsModule","body":"\n                   \n\n\n\n\n    Modules\n    ItemsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_imports\n\n\n\ncluster_ItemsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nItemsModule\n\nItemsModule\n\nItemsModule -->\n\nUsersModule->ItemsModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/items/items.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ItemsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ItemsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Controller, MiddlewareConsumer, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Item, ItemSchema } from './schemas/item.schema';\nimport { ItemsController } from './items.controller';\nimport { ItemsService } from './items.service';\nimport { AuthMiddleware } from 'src/middlewares/auth.middleware';\nimport { UsersService } from 'src/users/users.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    MongooseModule.forFeature([{ name: Item.name, schema: ItemSchema }]),\n  ],\n  controllers: [ItemsController],\n  providers: [ItemsService],\n})\nexport class ItemsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware).forRoutes(ItemsController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemsService.html":{"url":"injectables/ItemsService.html","title":"injectable - ItemsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ItemsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createItem\n                            \n                            \n                                    Async\n                                findAllItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/items/items.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    createItem(data: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to create and item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The created data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllItems()\n                \n            \n\n\n            \n                \n                    Defined in src/items/items.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        All items in the database\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Item, ItemDocument } from './schemas/item.schema';\n\n@Injectable()\nexport class ItemsService {\n  constructor(\n    @InjectModel(Item.name) private readonly itemModel: Model,\n  ) {}\n\n  /**\n   *\n   * @param data Data to create and item\n   * @returns The created data\n   */\n  async createItem(data: Item) {\n    return this.itemModel.create(data);\n  }\n\n  /**\n   *\n   * @returns All items in the database\n   */\n  async findAllItems() {\n    return this.itemModel.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginUserResponseDto.html":{"url":"interfaces/LoginUserResponseDto.html","title":"interface - LoginUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty, ApiResponse } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  phoneNumber: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  userName: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  clientId: string; // Client ID to send the appropriate data\n}\n\nexport interface LoginUserResponseDto {\n  token: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  success: boolean;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map((data) => ({ success: true, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reward.html":{"url":"classes/Reward.html","title":"class - Reward","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reward\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/schemas/reward.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientId\n                            \n                            \n                                code\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                expires\n                            \n                            \n                                isExpired\n                            \n                            \n                                isRedeemed\n                            \n                            \n                                redeemedOn\n                            \n                            \n                                tier\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({requried: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expires\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRedeemed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redeemedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rewards/schemas/reward.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { User } from 'src/users/schemas/user.schema';\n\nexport type RewardDocument = Reward & mongoose.Document;\n\n@Schema({\n  timestamps: true,\n})\nexport class Reward {\n  @Prop({ requried: true, unique: true })\n  code: string; // The code to be shown to the user\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: User.name })\n  user: string | User; // The user to which the reward is assigned to\n\n  @Prop({ required: true })\n  clientId: string; // The client to which the reward is applied to\n\n  @Prop({ required: true })\n  expires: Date; // The date on which the reward expires\n\n  @Prop({ default: false })\n  isExpired: boolean; // Tells if the reward is expired or not\n\n  @Prop()\n  redeemedOn: Date; // The date on which the redemption happened\n\n  @Prop({ default: false })\n  isRedeemed: boolean; // Tells if the reward is redeemed\n\n  @Prop({ default: 1 })\n  tier: number; // The tier of the reward. 1, 2, 3 denotes the different tiers to which the reward belongs to\n\n  @Prop({ default: 0 })\n  discountPercentage: number;\n}\n\nexport const RewardSchema = SchemaFactory.createForClass(Reward);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RewardsController.html":{"url":"controllers/RewardsController.html","title":"controller - RewardsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RewardsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/rewards.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rewards\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllRewards\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllRewards\n                        \n                    \n                \n            \n            \n                \ngetAllRewards(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')\n                \n            \n\n            \n                \n                    Defined in src/rewards/rewards.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { TransformInterceptor } from 'src/interceptors/transform.interceptor';\nimport { RewardsService } from './rewards.service';\n\n@Controller('rewards')\n@ApiTags('Rewards')\n@UseInterceptors(new TransformInterceptor())\nexport class RewardsController {\n  constructor(private readonly rewardsService: RewardsService) {}\n\n  @Get('user')\n  getAllRewards(@Req() request: Request) {\n    return this.rewardsService.getRewardsForUser(\n      request.user?._id,\n      request.clientId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RewardsModule.html":{"url":"modules/RewardsModule.html","title":"module - RewardsModule","body":"\n                   \n\n\n\n\n    Modules\n    RewardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RewardsModule\n\n\n\ncluster_RewardsModule_providers\n\n\n\ncluster_RewardsModule_exports\n\n\n\n\nRewardsService \n\nRewardsService \n\n\n\nRewardsModule\n\nRewardsModule\n\nRewardsService  -->\n\nRewardsModule->RewardsService \n\n\n\n\n\nRewardsService\n\nRewardsService\n\nRewardsModule -->\n\nRewardsService->RewardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rewards/rewards.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The module to handle all rewards\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RewardsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RewardsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RewardsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { forwardRef, MiddlewareConsumer, Module } from '@nestjs/common';\nimport { RewardsService } from './rewards.service';\nimport { RewardsController } from './rewards.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Reward, RewardSchema } from './schemas/reward.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { AuthMiddleware } from 'src/middlewares/auth.middleware';\nimport { UsersModule } from 'src/users/users.module';\n\n/**\n * The module to handle all rewards\n */\n@Module({\n  imports: [\n    // To avoid circular dep\n    forwardRef(() => UsersModule),\n    MongooseModule.forFeature([{ name: Reward.name, schema: RewardSchema }]),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [RewardsController],\n  providers: [RewardsService],\n  exports: [RewardsService],\n})\nexport class RewardsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware).forRoutes(RewardsController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RewardsService.html":{"url":"injectables/RewardsService.html","title":"injectable - RewardsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RewardsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rewards/rewards.service.ts\n        \n\n\n            \n                Description\n            \n            \n                \nCreate a rewards for a user\nRedeem a reward with an ID\nFetch rewards for a user\nReward Redemption Statistics\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAndIssueRewards\n                            \n                            \n                                    Async\n                                createReward\n                            \n                            \n                                generateCode\n                            \n                            \n                                    Async\n                                getRewardsForUser\n                            \n                            \n                                    Async\n                                redeemCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rewardModel: Model, userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rewards/rewards.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rewardModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkAndIssueRewards\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAndIssueRewards(userId: string, clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReward\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReward(userId: string, percentage: number, tier: number, clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tier\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateCode\n                        \n                    \n                \n            \n            \n                \ngenerateCode()\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRewardsForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRewardsForUser(userId: string, clientId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        redeemCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    redeemCode(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rewards/rewards.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as moment from 'moment';\nimport { Model } from 'mongoose';\nimport { customAlphabet } from 'nanoid';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { IExistingRewardsForUser } from './entities/existing-rewards';\nimport { Reward, RewardDocument } from './schemas/reward.schema';\n\n/**\n * 1. Create a rewards for a user\n * 2. Redeem a reward with an ID\n * 3. Fetch rewards for a user\n * 4. Reward Redemption Statistics\n */\n\n@Injectable()\nexport class RewardsService {\n  constructor(\n    @InjectModel(Reward.name)\n    private readonly rewardModel: Model,\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n\n  generateCode(): string {\n    const nanoId1 = customAlphabet('ABCDEFGHIJKLMNOPQR', 3);\n    const nanoId2 = customAlphabet('123456789', 3);\n    return `${nanoId1()}-${nanoId2()}`;\n  }\n\n  async createReward(\n    userId: string,\n    percentage: number,\n    tier: number,\n    clientId: string,\n  ) {\n    return this.rewardModel.create({\n      user: userId,\n      discountPercentage: percentage,\n      code: this.generateCode(),\n      expires: new Date(moment().add(2, 'month').toISOString()),\n      tier,\n      clientId,\n    });\n  }\n\n  async getRewardsForUser(userId: string, clientId: string): Promise {\n    return this.rewardModel.find({\n      user: userId,\n      clientId: clientId,\n    });\n  }\n\n  // Check if the user has rewards and accordingly allot new ones if not\n  async checkAndIssueRewards(\n    userId: string,\n    clientId: string,\n  ): Promise {\n    const rewards = await this.getRewardsForUser(userId, clientId);\n\n    // If the user already has rewards and check the latest tier\n    if (rewards.length > 0) {\n      let latestTier = 1;\n      for (const reward of rewards) {\n        if (!reward.isRedeemed) break;\n        if (reward.tier > latestTier && reward.isRedeemed) {\n          latestTier = reward.tier;\n        }\n      }\n      return {\n        newlyAlloted: false,\n        rewards,\n        currentTier: latestTier,\n      };\n    }\n    const reward1 = await this.createReward(userId, 20, 1, clientId);\n    const reward2 = await this.createReward(userId, 15, 2, clientId);\n    const reward3 = await this.createReward(userId, 30, 3, clientId);\n    return {\n      newlyAlloted: true,\n      rewards: [reward1, reward2, reward3],\n      currentTier: 1,\n    };\n  }\n\n  // Redeem the code given and mark as redeemed\n  async redeemCode(code: string) {\n    return this.rewardModel.findOneAndUpdate(\n      {\n        code,\n      },\n      {\n        isRedeemed: true,\n        redeemedOn: new Date(moment().toISOString()),\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemaModule.html":{"url":"modules/SchemaModule.html","title":"module - SchemaModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/schema/schema.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Item, ItemSchema } from 'src/items/schemas/item.schema';\nimport { Reward, RewardSchema } from 'src/rewards/schemas/reward.schema';\nimport { Stat, StatSchema } from 'src/stats/schemas/stat.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    MongooseModule.forFeature([{ name: Stat.name, schema: StatSchema }]),\n    MongooseModule.forFeature([{ name: Item.name, schema: ItemSchema }]),\n    MongooseModule.forFeature([{ name: Reward.name, schema: RewardSchema }]),\n  ],\n  exports: [MongooseModule],\n})\nexport class SchemaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stat.html":{"url":"classes/Stat.html","title":"class - Stat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/schemas/stat.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                item\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        event\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | Item\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stats/schemas/stat.schema.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from '../../users/schemas/user.schema';\nimport * as mongoose from 'mongoose';\nimport { Item } from '../../items/schemas/item.schema';\n\nexport enum StatEvents {\n  USER_OPENED_VIEW_AR = 'USER_OPENEN_VIEW_AR',\n  USER_CLOSED_VIEW_AR = 'USER_CLOSED_VIEW_AR',\n  USER_OPENED_MODEL = 'USER_OPENED_MODEL',\n  USER_CLOSED_MODEL = 'USER_CLOSED_MODEL',\n}\n\n@Schema({\n  timestamps: true,\n})\nexport class Stat {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: User.name })\n  user: string | User;\n\n  @Prop({ enum: Object.values(StatEvents) })\n  event: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Item.name })\n  item: string | Item;\n}\n\nexport type StatDocument = mongoose.Document & Stat;\n\nexport const StatSchema = SchemaFactory.createForClass(Stat);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatsController.html":{"url":"controllers/StatsController.html","title":"controller - StatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStat\n                            \n                            \n                                getAllStats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStat\n                        \n                    \n                \n            \n            \n                \naddStat(data: AddStatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AddStatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllStats\n                        \n                    \n                \n            \n            \n                \ngetAllStats()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseInterceptors } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { TransformInterceptor } from '../interceptors/transform.interceptor';\nimport { AddStatDto } from './dto/add-stat.dto';\nimport { StatsService } from './stats.service';\n\n@ApiTags('Stats')\n@UseInterceptors(new TransformInterceptor())\n@Controller('stats')\nexport class StatsController {\n  constructor(private readonly statsService: StatsService) {}\n\n  @Post()\n  addStat(@Body() data: AddStatDto) {\n    return this.statsService.addStat(data);\n  }\n\n  @Get()\n  getAllStats() {\n    return this.statsService.getAllStats();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatsModule.html":{"url":"modules/StatsModule.html","title":"module - StatsModule","body":"\n                   \n\n\n\n\n    Modules\n    StatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\n\nStatsService\n\nStatsService\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stats/stats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { StatsController } from './stats.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Stat, StatSchema } from './schemas/stat.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Stat.name, schema: StatSchema }]),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [StatsController],\n  providers: [StatsService],\n})\nexport class StatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addStat\n                            \n                            \n                                getAllStats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsModel: Model, usersModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stats/stats.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addStat\n                        \n                    \n                \n            \n            \n                \n                    \n                    addStat(data: AddStatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AddStatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllStats\n                        \n                    \n                \n            \n            \n                \ngetAllStats()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ImATeapotException,\n  Injectable,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from '../users/schemas/user.schema';\nimport { AddStatDto } from './dto/add-stat.dto';\nimport { Stat, StatDocument } from './schemas/stat.schema';\n\n@Injectable()\nexport class StatsService {\n  constructor(\n    @InjectModel(Stat.name) private readonly statsModel: Model,\n    @InjectModel(User.name) private readonly usersModel: Model,\n  ) {}\n  async addStat(data: AddStatDto) {\n    const user = await this.usersModel.findOne({\n      phoneNumber: data.userPhoneNumber,\n    });\n    if (!user)\n      throw new BadRequestException({\n        error: 'User not found in the database',\n      });\n    let stat = await this.statsModel.create({\n      user: user._id,\n      item: data.itemId,\n      event: data.event,\n    });\n  }\n\n  getAllStats() {\n    return this.statsModel.find().populate('user item');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/transform.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\nexport interface Response {\n  success: boolean;\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(map((data) => ({ success: true, data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                name\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { IsNotEmpty } from 'class-validator';\nimport { Document } from 'mongoose';\n\n@Schema({\n  timestamps: true,\n})\nexport class User {\n  _id: string;\n\n  @IsNotEmpty()\n  @Prop({ required: true })\n  name: string;\n\n  @IsNotEmpty()\n  @Prop({ required: true })\n  phoneNumber: string;\n}\n\nexport type UserDocument = User & Document;\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  UseInterceptors,\n  Req,\n  Res,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { TransformInterceptor } from '../interceptors/transform.interceptor';\nimport { request, Request, Response } from 'express';\nimport { RewardsService } from 'src/rewards/rewards.service';\n\n@Controller('user')\n@ApiTags('Users')\n@UseInterceptors(new TransformInterceptor())\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly rewardsService: RewardsService,\n  ) {}\n\n  @Get('profile')\n  async profile(@Req() request: Request) {\n    await this.rewardsService.checkAndIssueRewards(\n      request.user._id,\n      request.clientId,\n    );\n    return request.user;\n  }\n\n  @Post('login')\n  async create(\n    @Body() createUserDto: CreateUserDto,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const data = await this.usersService.login(createUserDto);\n    response.cookie('accessToken', data.token, { httpOnly: true });\n    response.cookie('clientId', createUserDto.clientId);\n    return await {\n      accessToken: data.token,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nRewardsModule\n\nRewardsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRewardsModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RewardsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  RequestMethod,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthMiddleware } from 'src/middlewares/auth.middleware';\nimport { ConfigModule } from '@nestjs/config';\nimport { RewardsModule } from 'src/rewards/rewards.module';\n\n@Module({\n  imports: [\n    RewardsModule,\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    ConfigModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .exclude({\n        path: '/user/login',\n        method: RequestMethod.POST,\n      })\n      .forRoutes(UsersController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                \nFetch user's profile\nLogin a user\nGenerate Token for user\nVerify Token for user\nGet all users\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                generateToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        All user's data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        User's data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(id)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's ID for JWT token generation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The token generated by JWT\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n                    TODO: Implement OTP\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to send user's parameters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Login Data to store as cookies on the server side\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to be verified\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The user ID if the token could be verified or throws an error 'Invalid Token'\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto, LoginUserResponseDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\nimport * as jwt from 'jsonwebtoken';\nimport { ConfigService } from '@nestjs/config';\n\n/**\n * 1. Fetch user's profile\n * 2. Login a user\n * 3. Generate Token for user\n * 4. Verify Token for user\n * 5. Get all users\n */\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n    private readonly config: ConfigService,\n  ) {}\n\n  /**\n   *\n   * @param createUserDto Object to send user's parameters\n   * @returns Login Data to store as cookies on the server side\n   * @description Used to either create a new user or login an existing user smartly.\n   * TODO: Implement OTP\n   */\n  async login(createUserDto: CreateUserDto): Promise {\n    const existingUser = await this.userModel\n      .findOne({\n        phoneNumber: createUserDto.phoneNumber,\n      })\n      .lean();\n    if (existingUser) {\n      const data = {\n        token: this.generateToken(existingUser._id.toString()),\n        userId: existingUser._id.toString(),\n      };\n      return data;\n    }\n    const user = await this.userModel.create({\n      name: createUserDto.userName,\n      phoneNumber: createUserDto.phoneNumber,\n    });\n    return {\n      token: this.generateToken(user._id),\n      userId: user._id,\n    };\n  }\n\n  /**\n   * @description Used to get all users in the database\n   * @returns All user's data\n   */\n  findAll() {\n    return this.userModel.find();\n  }\n\n  /**\n   *\n   * @param id User's ID\n   * @returns User's data\n   */\n  async findOne(id: string): Promise {\n    const user = await this.userModel.findById(id);\n    return user;\n  }\n\n  /**\n   *\n   * @param id User's ID for JWT token generation\n   * @returns The token generated by JWT\n   */\n  generateToken(id) {\n    return jwt.sign({ id }, this.config.get('JWT_SECRET'), {\n      expiresIn: this.config.get('JWT_EXPIRY'),\n    });\n  }\n\n  /**\n   *\n   * @param token Token to be verified\n   * @returns The user ID if the token could be verified or throws an error 'Invalid Token'\n   */\n  async verifyToken(token): Promise {\n    const secret = this.config.get('JWT_SECRET');\n    const decoded: any = jwt.verify(token, secret);\n    if (!decoded.id) {\n      throw 'Invalid Token';\n    }\n    return decoded.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/items/items.controller.ts\n            \n            controller\n            ItemsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/items/items.service.ts\n            \n            injectable\n            ItemsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/items/schemas/item.schema.ts\n            \n            class\n            Item\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/items/schemas/item.schema.ts\n            \n            variable\n            ItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/rewards/entities/existing-rewards.ts\n            \n            interface\n            IExistingRewardsForUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/rewards/rewards.controller.ts\n            \n            controller\n            RewardsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/rewards/rewards.service.ts\n            \n            injectable\n            RewardsService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/rewards/schemas/reward.schema.ts\n            \n            class\n            Reward\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/rewards/schemas/reward.schema.ts\n            \n            variable\n            RewardSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stats/dto/add-stat.dto.ts\n            \n            class\n            AddStatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stats/schemas/stat.schema.ts\n            \n            class\n            Stat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stats/schemas/stat.schema.ts\n            \n            variable\n            StatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stats/stats.controller.ts\n            \n            controller\n            StatsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            interface\n            LoginUserResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                28 %\n                (2/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @adminjs/express : ^4.0.1\n        \n            @adminjs/mongoose : ^2.0.0\n        \n            @adminjs/nestjs : ^3.0.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/serve-static : ^2.2.2\n        \n            @nestjs/swagger : ^5.1.5\n        \n            adminjs : ^5.3.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            express-formidable : ^1.2.0\n        \n            express-session : ^1.17.2\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.29.1\n        \n            mongoose : ^6.0.13\n        \n            nanoid : ^3.1.30\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StatEvents   (src/.../stat.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stats/schemas/stat.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        StatEvents\n                    \n                \n                        \n                            \n                                 USER_OPENED_VIEW_AR\n                            \n                        \n                        \n                            \n                                Value : USER_OPENEN_VIEW_AR\n                            \n                        \n                        \n                            \n                                 USER_CLOSED_VIEW_AR\n                            \n                        \n                        \n                            \n                                Value : USER_CLOSED_VIEW_AR\n                            \n                        \n                        \n                            \n                                 USER_OPENED_MODEL\n                            \n                        \n                        \n                            \n                                Value : USER_OPENED_MODEL\n                            \n                        \n                        \n                            \n                                 USER_CLOSED_MODEL\n                            \n                        \n                        \n                            \n                                Value : USER_CLOSED_MODEL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ItemsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RewardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_providers\n\n\n\ncluster_RewardsModule\n\n\n\ncluster_RewardsModule_exports\n\n\n\ncluster_RewardsModule_providers\n\n\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nItemsModule\n\nItemsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nRewardsModule\n\nRewardsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRewardsModule->UsersModule\n\n\n\nAppModule -->\n\nRewardsModule->AppModule\n\n\n\n\n\nRewardsService \n\nRewardsService \n\nRewardsService  -->\n\nRewardsModule->RewardsService \n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\nItemsModule -->\n\nUsersModule->ItemsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\nRewardsService\n\nRewardsService\n\nRewardsModule -->\n\nRewardsService->RewardsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemDocument   (src/.../item.schema.ts)\n                        \n                        \n                            RewardDocument   (src/.../reward.schema.ts)\n                        \n                        \n                            StatDocument   (src/.../stat.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/items/schemas/item.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/rewards/schemas/reward.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RewardDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/stats/schemas/stat.schema.ts\n    \n    \n        \n            \n                \n                    \n                    StatDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemSchema   (src/.../item.schema.ts)\n                        \n                        \n                            RewardSchema   (src/.../reward.schema.ts)\n                        \n                        \n                            StatSchema   (src/.../stat.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/items/schemas/item.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Item)\n                    \n                \n\n\n        \n    \n\n    src/rewards/schemas/reward.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RewardSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Reward)\n                    \n                \n\n\n        \n    \n\n    src/stats/schemas/stat.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Stat)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
